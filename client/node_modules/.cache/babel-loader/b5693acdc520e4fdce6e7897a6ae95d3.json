{"ast":null,"code":"var _toArray = require(\"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toArray\");\n\nvar _slicedToArray = require(\"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar isTaggedTemplate = function isTaggedTemplate(_ref) {\n  var _ref2 = _slicedToArray(_ref, 1),\n      strings = _ref2[0];\n\n  return Array.isArray(strings) && strings.raw;\n};\n\nvar buildTaggedTemplate = function buildTaggedTemplate(ctx, _ref3) {\n  var _ref4 = _toArray(_ref3),\n      strings = _ref4[0],\n      args = _ref4.slice(1);\n\n  var txt = strings[0];\n\n  for (var i = 0; i < args.length; ++i) {\n    txt += ctx.build(args[i]) + strings[i + 1];\n  }\n\n  return txt;\n};\n\nmodule.exports = {\n  isTaggedTemplate: isTaggedTemplate,\n  buildTaggedTemplate: buildTaggedTemplate\n};","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/EasyQB/src/lib-util/tagged_template.js"],"names":["isTaggedTemplate","strings","Array","isArray","raw","buildTaggedTemplate","ctx","args","txt","i","length","build","module","exports"],"mappings":";;;;AAAA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA,MAAEC,OAAF;;AAAA,SAAeC,KAAK,CAACC,OAAN,CAAcF,OAAd,KAA0BA,OAAO,CAACG,GAAjD;AAAA,CAAzB;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,GAAD,SAA6B;AAAA;AAAA,MAAtBL,OAAsB;AAAA,MAAVM,IAAU;;AACvD,MAAIC,GAAG,GAAGP,OAAO,CAAC,CAAD,CAAjB;;AACA,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiC,EAAED,CAAnC,EAAsC;AACpCD,IAAAA,GAAG,IAAIF,GAAG,CAACK,KAAJ,CAAUJ,IAAI,CAACE,CAAD,CAAd,IAAqBR,OAAO,CAACQ,CAAC,GAAG,CAAL,CAAnC;AACD;;AACD,SAAOD,GAAP;AACD,CAND;;AAQAI,MAAM,CAACC,OAAP,GAAiB;AACfb,EAAAA,gBAAgB,EAAhBA,gBADe;AAEfK,EAAAA,mBAAmB,EAAnBA;AAFe,CAAjB","sourcesContent":["const isTaggedTemplate = ([strings]) => Array.isArray(strings) && strings.raw\n\nconst buildTaggedTemplate = (ctx, [strings, ...args]) => {\n  let txt = strings[0]\n  for (let i = 0; i < args.length; ++i) {\n    txt += ctx.build(args[i]) + strings[i + 1]\n  }\n  return txt\n}\n\nmodule.exports = {\n  isTaggedTemplate,\n  buildTaggedTemplate\n}"]},"metadata":{},"sourceType":"script"}