{"ast":null,"code":"var _require = require('../../lib-util'),\n    isTaggedTemplate = _require.isTaggedTemplate,\n    buildTaggedTemplate = _require.buildTaggedTemplate;\n\nvar fromItems = require('../common/from_items');\n\nvar valuesArray = require('../common/values_array');\n\nmodule.exports = function (ctx) {\n  var table = fromItems(ctx, ctx.frm);\n  var values = buildCall(ctx, ctx.insert);\n  return \"insert into \".concat(table).concat(values);\n};\n\nvar buildCall = function buildCall(ctx, args) {\n  if (isTaggedTemplate(args)) return ' ' + buildTaggedTemplate(ctx, args);\n  if (args.length === 1 && args[0] === undefined) return ' default values';\n  if (Array.isArray(args[0])) return buildValuesArray(ctx, args[0]);\n  if (typeof args[0] === 'function') return ' ' + ctx.build(args[0]);\n  return buildValuesArray(ctx, args);\n};\n\nvar buildValuesArray = function buildValuesArray(ctx, array) {\n  var _valuesArray = valuesArray(ctx, array),\n      values = _valuesArray.values,\n      columns = _valuesArray.columns;\n\n  return \"(\".concat(columns, \") \").concat(values);\n};","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/EasyQB/src/lib-sq/clauses/insert.js"],"names":["require","isTaggedTemplate","buildTaggedTemplate","fromItems","valuesArray","module","exports","ctx","table","frm","values","buildCall","insert","args","length","undefined","Array","isArray","buildValuesArray","build","array","columns"],"mappings":"eAAkDA,OAAO,CAAC,gBAAD,C;IAAjDC,gB,YAAAA,gB;IAAkBC,mB,YAAAA,mB;;AAC1B,IAAMC,SAAS,GAAGH,OAAO,CAAC,sBAAD,CAAzB;;AACA,IAAMI,WAAW,GAAGJ,OAAO,CAAC,wBAAD,CAA3B;;AAEAK,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACtB,MAAMC,KAAK,GAAGL,SAAS,CAACI,GAAD,EAAMA,GAAG,CAACE,GAAV,CAAvB;AACA,MAAMC,MAAM,GAAGC,SAAS,CAACJ,GAAD,EAAMA,GAAG,CAACK,MAAV,CAAxB;AACA,+BAAsBJ,KAAtB,SAA8BE,MAA9B;AACD,CAJD;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACJ,GAAD,EAAMM,IAAN,EAAe;AAC/B,MAAIZ,gBAAgB,CAACY,IAAD,CAApB,EAA4B,OAAO,MAAMX,mBAAmB,CAACK,GAAD,EAAMM,IAAN,CAAhC;AAC5B,MAAIA,IAAI,CAACC,MAAL,KAAgB,CAAhB,IAAqBD,IAAI,CAAC,CAAD,CAAJ,KAAYE,SAArC,EAAgD,OAAO,iBAAP;AAChD,MAAIC,KAAK,CAACC,OAAN,CAAcJ,IAAI,CAAC,CAAD,CAAlB,CAAJ,EAA4B,OAAOK,gBAAgB,CAACX,GAAD,EAAMM,IAAI,CAAC,CAAD,CAAV,CAAvB;AAC5B,MAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,UAAvB,EAAmC,OAAO,MAAMN,GAAG,CAACY,KAAJ,CAAUN,IAAI,CAAC,CAAD,CAAd,CAAb;AACnC,SAAOK,gBAAgB,CAACX,GAAD,EAAMM,IAAN,CAAvB;AACD,CAND;;AAQA,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACX,GAAD,EAAMa,KAAN,EAAgB;AAAA,qBACXhB,WAAW,CAACG,GAAD,EAAMa,KAAN,CADA;AAAA,MAC/BV,MAD+B,gBAC/BA,MAD+B;AAAA,MACvBW,OADuB,gBACvBA,OADuB;;AAEvC,oBAAWA,OAAX,eAAuBX,MAAvB;AACD,CAHD","sourcesContent":["const { isTaggedTemplate, buildTaggedTemplate } = require('../../lib-util')\nconst fromItems = require('../common/from_items')\nconst valuesArray = require('../common/values_array')\n\nmodule.exports = ctx => {\n  const table = fromItems(ctx, ctx.frm)\n  const values = buildCall(ctx, ctx.insert)\n  return `insert into ${table}${values}`\n}\n\nconst buildCall = (ctx, args) => {\n  if (isTaggedTemplate(args)) return ' ' + buildTaggedTemplate(ctx, args)\n  if (args.length === 1 && args[0] === undefined) return ' default values'\n  if (Array.isArray(args[0])) return buildValuesArray(ctx, args[0])\n  if (typeof args[0] === 'function') return ' ' + ctx.build(args[0])\n  return buildValuesArray(ctx, args)\n}\n\nconst buildValuesArray = (ctx, array) => {\n  const { values, columns } = valuesArray(ctx, array)\n  return `(${columns}) ${values}`\n}\n"]},"metadata":{},"sourceType":"script"}