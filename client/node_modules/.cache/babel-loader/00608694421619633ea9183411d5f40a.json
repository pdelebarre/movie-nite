{"ast":null,"code":"const {\n  wth,\n  select,\n  from,\n  where,\n  group,\n  having,\n  setop,\n  order,\n  limit,\n  offset,\n  del,\n  returning,\n  insert,\n  update,\n  set\n} = require('./clauses');\n\nconst query = (...clauses) => ctx => {\n  let text = '';\n\n  for (const clause of clauses) {\n    const str = clause && clause(ctx);\n\n    if (str) {\n      if (text) text += ctx.separator;\n      text += str;\n    }\n  }\n\n  return {\n    text,\n    args: ctx.params,\n    type: ctx.userType || ctx.type\n  };\n};\n\nconst queries = {\n  select: query(wth, select, from, where, group, having, setop, order, limit, offset),\n  update: query(wth, update, set, where, returning),\n  delete: query(wth, del, where, returning),\n  insert: query(wth, insert, returning)\n};\nmodule.exports = {\n  query,\n  queries\n};","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/EasyQB/src/lib-sq/query.js"],"names":["wth","select","from","where","group","having","setop","order","limit","offset","del","returning","insert","update","set","require","query","clauses","ctx","text","clause","str","separator","args","params","type","userType","queries","delete","module","exports"],"mappings":"AAAA,MAAM;AACFA,EAAAA,GADE;AAEFC,EAAAA,MAFE;AAGFC,EAAAA,IAHE;AAIFC,EAAAA,KAJE;AAKFC,EAAAA,KALE;AAMFC,EAAAA,MANE;AAOFC,EAAAA,KAPE;AAQFC,EAAAA,KARE;AASFC,EAAAA,KATE;AAUFC,EAAAA,MAVE;AAWFC,EAAAA,GAXE;AAYFC,EAAAA,SAZE;AAaFC,EAAAA,MAbE;AAcFC,EAAAA,MAdE;AAeFC,EAAAA;AAfE,IAgBFC,OAAO,CAAC,WAAD,CAhBX;;AAkBA,MAAMC,KAAK,GAAG,CAAC,GAAGC,OAAJ,KAAgBC,GAAG,IAAI;AACjC,MAAIC,IAAI,GAAG,EAAX;;AACA,OAAK,MAAMC,MAAX,IAAqBH,OAArB,EAA8B;AAC1B,UAAMI,GAAG,GAAGD,MAAM,IAAIA,MAAM,CAACF,GAAD,CAA5B;;AACA,QAAIG,GAAJ,EAAS;AACL,UAAIF,IAAJ,EAAUA,IAAI,IAAID,GAAG,CAACI,SAAZ;AACVH,MAAAA,IAAI,IAAIE,GAAR;AACH;AACJ;;AACD,SAAO;AAAEF,IAAAA,IAAF;AAAQI,IAAAA,IAAI,EAAEL,GAAG,CAACM,MAAlB;AAA0BC,IAAAA,IAAI,EAAEP,GAAG,CAACQ,QAAJ,IAAgBR,GAAG,CAACO;AAApD,GAAP;AACH,CAVD;;AAYA,MAAME,OAAO,GAAG;AACZ1B,EAAAA,MAAM,EAAEe,KAAK,CACThB,GADS,EAETC,MAFS,EAGTC,IAHS,EAITC,KAJS,EAKTC,KALS,EAMTC,MANS,EAOTC,KAPS,EAQTC,KARS,EASTC,KATS,EAUTC,MAVS,CADD;AAaZI,EAAAA,MAAM,EAAEG,KAAK,CAAChB,GAAD,EAAMa,MAAN,EAAcC,GAAd,EAAmBX,KAAnB,EAA0BQ,SAA1B,CAbD;AAcZiB,EAAAA,MAAM,EAAEZ,KAAK,CAAChB,GAAD,EAAMU,GAAN,EAAWP,KAAX,EAAkBQ,SAAlB,CAdD;AAeZC,EAAAA,MAAM,EAAEI,KAAK,CAAChB,GAAD,EAAMY,MAAN,EAAcD,SAAd;AAfD,CAAhB;AAkBAkB,MAAM,CAACC,OAAP,GAAiB;AAAEd,EAAAA,KAAF;AAASW,EAAAA;AAAT,CAAjB","sourcesContent":["const {\n    wth,\n    select,\n    from,\n    where,\n    group,\n    having,\n    setop,\n    order,\n    limit,\n    offset,\n    del,\n    returning,\n    insert,\n    update,\n    set,\n} = require('./clauses')\n\nconst query = (...clauses) => ctx => {\n    let text = ''\n    for (const clause of clauses) {\n        const str = clause && clause(ctx)\n        if (str) {\n            if (text) text += ctx.separator\n            text += str\n        }\n    }\n    return { text, args: ctx.params, type: ctx.userType || ctx.type }\n}\n\nconst queries = {\n    select: query(\n        wth,\n        select,\n        from,\n        where,\n        group,\n        having,\n        setop,\n        order,\n        limit,\n        offset\n    ),\n    update: query(wth, update, set, where, returning),\n    delete: query(wth, del, where, returning),\n    insert: query(wth, insert, returning)\n}\n\nmodule.exports = { query, queries }"]},"metadata":{},"sourceType":"script"}