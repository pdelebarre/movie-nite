{"ast":null,"code":"import _objectSpread from\"/Volumes/LaCie/Dev/myProjects/movie-nite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Volumes/LaCie/Dev/myProjects/movie-nite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Volumes/LaCie/Dev/myProjects/movie-nite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/LaCie/Dev/myProjects/movie-nite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/LaCie/Dev/myProjects/movie-nite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import api from\"./api/queries\";import SearchMovie from\"./components/Movie/SearchMovie\";import MovieList from\"./components/Movie/MovieList\";import GENRES from\"./resources/genres\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getGenres=function getGenres(genre_ids){var genres_array=[];genre_ids.map(function(id){var result=GENRES.find(function(genre){return genre.id===id;});genres_array.push(result.name);return genres_array;});console.log(genres_array.toString());return genres_array.toString();};function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];useEffect(function(){retrieveMovies();},[]);var retrieveMovies=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return api.getAllMovies().then(function(response){setMovies(response.data.data);}).catch(function(error){console.log(\"error\",error);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function retrieveMovies(){return _ref.apply(this,arguments);};}();var addMovie=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(movie){var genres,payload;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(\"adding \",movie);genres=getGenres(movie.genre_ids);payload={id:movie.id,title:movie.title,genres:genres,poster_path:movie.poster_path,overview:movie.overview,vote_average:Number(movie.vote_average),watched:false};_context2.next=5;return api.insertMovie(payload).then(function(res){payload._id=res.data.id;console.log(\"res\",payload._id);});case 5:setMovies([].concat(_toConsumableArray(movies),[payload]));case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function addMovie(_x){return _ref2.apply(this,arguments);};}();var onAddHandler=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(movie){var lookup;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log(\"in App, adding \",movie.title);_context3.next=3;return api.getMovieByTMDBId(movie.id).catch(function(error){console.log(\"not a duplicate, OK to add \",movie.title);});case 3:lookup=_context3.sent;lookup==null?addMovie(movie):console.log(\"dupe \",movie);case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function onAddHandler(_x2){return _ref3.apply(this,arguments);};}();var onWatchedHandler=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(movie){var payload,newMovies;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:payload=_objectSpread({},movie);payload.watched=!payload.watched;_context4.next=4;return api.updateMovieById(movie._id,payload);case 4:newMovies=movies.filter(function(item){return item._id!==movie._id;});setMovies([].concat(_toConsumableArray(newMovies),[payload]));// setMovies((prevMovies) =>\n// prevMovies.map((item) => {\n//   return item.id === movie.id ? { ...item, watched: !item.watched } : item;\n// }),\n// );\ncase 6:case\"end\":return _context4.stop();}}},_callee4);}));return function onWatchedHandler(_x3){return _ref4.apply(this,arguments);};}();var onRemoveHandler=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(movie){var newMovies;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return api.deleteMovieById(movie._id);case 2:newMovies=movies.filter(function(item){return item._id!==movie._id;});setMovies(newMovies);case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function onRemoveHandler(_x4){return _ref5.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MovieList,{movies:movies,onWatchedHandler:onWatchedHandler,onRemoveHandler:onRemoveHandler}),/*#__PURE__*/_jsx(SearchMovie,{onAddHandler:onAddHandler})]});}export default App;","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/client/src/App.js"],"names":["React","useState","useEffect","api","SearchMovie","MovieList","GENRES","getGenres","genre_ids","genres_array","map","id","result","find","genre","push","name","console","log","toString","App","movies","setMovies","retrieveMovies","getAllMovies","then","response","data","catch","error","addMovie","movie","genres","payload","title","poster_path","overview","vote_average","Number","watched","insertMovie","res","_id","onAddHandler","getMovieByTMDBId","lookup","onWatchedHandler","updateMovieById","newMovies","filter","item","onRemoveHandler","deleteMovieById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport api from \"./api/queries\";\n\nimport SearchMovie from \"./components/Movie/SearchMovie\";\nimport MovieList from \"./components/Movie/MovieList\";\n\nimport GENRES from \"./resources/genres\";\n\nconst getGenres = (genre_ids) => {\n  let genres_array = [];\n  genre_ids.map((id) => {\n    const result = GENRES.find((genre) => genre.id === id);\n    genres_array.push(result.name);\n    return genres_array;\n  });\n\n  console.log(genres_array.toString());\n  return genres_array.toString();\n};\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    retrieveMovies();\n  }, []);\n\n  const retrieveMovies = async () => {\n    await api\n      .getAllMovies()\n      .then((response) => {\n        setMovies(response.data.data);\n      })\n      .catch((error) => {\n        console.log(`error`, error);\n      });\n  };\n\n  const addMovie = async (movie) => {\n    console.log(`adding `, movie);\n\n    const genres = getGenres(movie.genre_ids);\n\n    const payload = {\n      id: movie.id,\n      title: movie.title,\n      genres: genres,\n      poster_path: movie.poster_path,\n      overview: movie.overview,\n      vote_average: Number(movie.vote_average),\n      watched: false,\n    };\n\n    await api.insertMovie(payload).then((res) => {\n      payload._id = res.data.id;\n      console.log(`res`, payload._id);\n    });\n    setMovies([...movies, payload]);\n  };\n\n  const onAddHandler = async (movie) => {\n    console.log(`in App, adding `, movie.title);\n    const lookup = await api.getMovieByTMDBId(movie.id).catch((error) => {\n      console.log(`not a duplicate, OK to add `, movie.title);\n    });\n\n    lookup == null ? addMovie(movie) : console.log(`dupe `, movie);\n  };\n\n  const onWatchedHandler = async (movie) => {\n    const payload = { ...movie };\n    payload.watched = !payload.watched;\n\n    await api.updateMovieById(movie._id, payload);\n\n    const newMovies = movies.filter((item) => item._id !== movie._id);\n    setMovies([...newMovies, payload]);\n\n    // setMovies((prevMovies) =>\n    // prevMovies.map((item) => {\n    //   return item.id === movie.id ? { ...item, watched: !item.watched } : item;\n    // }),\n    // );\n  };\n\n  const onRemoveHandler = async (movie) => {\n    await api\n      .deleteMovieById(movie._id)\n      const newMovies = movies.filter((item) => item._id !== movie._id);\n        setMovies(newMovies);\n  };\n\n  return (\n    <div>\n      <MovieList\n        movies={movies}\n        onWatchedHandler={onWatchedHandler}\n        onRemoveHandler={onRemoveHandler}\n      />\n      <SearchMovie onAddHandler={onAddHandler} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}