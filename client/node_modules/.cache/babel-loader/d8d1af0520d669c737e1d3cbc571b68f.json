{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useMongoDB } from \"./store/mongodb\";\nimport { useRealmApp } from \"./store/realm\";\nimport LogInForm from \"./components/LoginForm\";\nimport MovieList from \"./components/MovieList\";\nimport SearchMovie from \"./components/Movie/SearchMovie\";\nimport { Pane } from \"evergreen-ui\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    logIn,\n    logOut,\n    user\n  } = useRealmApp();\n  const {\n    db\n  } = useMongoDB();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function wrapMovieQuery() {\n      if (user && db) {\n        const authoredMovies = await db.collection(\"movies\").find();\n        setMovies(authoredMovies);\n      }\n    }\n\n    wrapMovieQuery();\n  }, [user, db]);\n\n  async function handleLogIn() {\n    await logIn(email, password);\n  }\n\n  return user && db && user.state === \"active\" ? /*#__PURE__*/_jsxDEV(Pane, {\n    width: \"0%\",\n    padding: 16,\n    background: \"purpleTint\",\n    borderRadius: 3,\n    elevation: 4,\n    children: [/*#__PURE__*/_jsxDEV(SearchMovie, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies,\n      user: user,\n      logOut: logOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(LogInForm, {\n    email: email,\n    setEmail: setEmail,\n    password: password,\n    setPassword: setPassword,\n    handleLogIn: handleLogIn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7ufNIiWLU6H44WqPGy5Y/3tsitE=\", false, function () {\n  return [useRealmApp, useMongoDB];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/App.js"],"names":["React","useState","useEffect","useMongoDB","useRealmApp","LogInForm","MovieList","SearchMovie","Pane","App","logIn","logOut","user","db","email","setEmail","password","setPassword","movies","setMovies","wrapMovieQuery","authoredMovies","collection","find","handleLogIn","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AAGA,SAASC,IAAT,QAAqB,cAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,MAA0BR,WAAW,EAA3C;AACA,QAAM;AAAES,IAAAA;AAAF,MAASV,UAAU,EAAzB;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAekB,cAAf,GAAgC;AAC9B,UAAIR,IAAI,IAAIC,EAAZ,EAAgB;AACd,cAAMQ,cAAc,GAAG,MAAMR,EAAE,CAACS,UAAH,CAAc,QAAd,EAAwBC,IAAxB,EAA7B;AACAJ,QAAAA,SAAS,CAACE,cAAD,CAAT;AACD;AACF;;AACDD,IAAAA,cAAc;AACf,GARQ,EAQN,CAACR,IAAD,EAAOC,EAAP,CARM,CAAT;;AAUA,iBAAeW,WAAf,GAA6B;AAC3B,UAAMd,KAAK,CAACI,KAAD,EAAQE,QAAR,CAAX;AACD;;AAED,SAAOJ,IAAI,IAAIC,EAAR,IAAcD,IAAI,CAACa,KAAL,KAAe,QAA7B,gBACL,QAAC,IAAD;AACA,IAAA,KAAK,EAAC,IADN;AAEI,IAAA,OAAO,EAAE,EAFb;AAGI,IAAA,UAAU,EAAC,YAHf;AAII,IAAA,YAAY,EAAE,CAJlB;AAKI,IAAA,SAAS,EAAE,CALf;AAAA,4BASE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEP,MAAnB;AAA2B,MAAA,IAAI,EAAEN,IAAjC;AAAuC,MAAA,MAAM,EAAED;AAA/C;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,gBAcL,QAAC,SAAD;AACE,IAAA,KAAK,EAAEG,KADT;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,WAAW,EAAEC,WAJf;AAKE,IAAA,WAAW,EAAEO;AALf;AAAA;AAAA;AAAA;AAAA,UAdF;AAsBD;;GA3CQf,G;UACyBL,W,EACjBD,U;;;KAFRM,G;AA6CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useMongoDB } from \"./store/mongodb\";\nimport { useRealmApp } from \"./store/realm\";\n\nimport LogInForm from \"./components/LoginForm\";\nimport MovieList from \"./components/MovieList\";\nimport SearchMovie from \"./components/Movie/SearchMovie\";\n\n\nimport { Pane } from \"evergreen-ui\";\n\nfunction App() {\n  const { logIn, logOut, user } = useRealmApp();\n  const { db } = useMongoDB();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function wrapMovieQuery() {\n      if (user && db) {\n        const authoredMovies = await db.collection(\"movies\").find();\n        setMovies(authoredMovies);\n      }\n    }\n    wrapMovieQuery();\n  }, [user, db]);\n\n  async function handleLogIn() {\n    await logIn(email, password);\n  }\n\n  return user && db && user.state === \"active\" ? (\n    <Pane\n    width=\"0%\"\n        padding={16}\n        background=\"purpleTint\"\n        borderRadius={3}\n        elevation={4}\n    \n\n  >\n      <SearchMovie />\n      <MovieList movies={movies} user={user} logOut={logOut} />\n    </Pane>\n  ) : (\n    <LogInForm\n      email={email}\n      setEmail={setEmail}\n      password={password}\n      setPassword={setPassword}\n      handleLogIn={handleLogIn}\n    />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}