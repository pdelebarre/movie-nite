{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport SearchMovie from \"./Movie/SearchMovie\";\nimport classes from \"./Movies.module.css\";\nimport Movie from \"./Movie/Movie\";\nimport { useEasybase } from \"easybase-react\";\nimport { useState, useEffect } from \"react\";\nimport GENRES from \"../resources/genres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const headers = /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"watched\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n\n  const {\n    db,\n    useReturn,\n    e\n  } = useEasybase(); //   useEffect(() => {\n  //     configureFrame({ tableName: \"MOVIES\" });\n  //     sync();\n  //   }, []);\n\n  const {\n    frame\n  } = useReturn(() => {\n    console.log(\"getting data...\");\n    db(\"MOVIES\").return();\n  }, []);\n  const [movies, setMovies] = useState([]);\n\n  const movieExists = id => {\n    return movies.some(movie => {\n      return movie.id === id;\n    });\n  };\n\n  const getGenres = genre_ids => {\n    let genres_array = [];\n    genre_ids.map(id => {\n      const result = GENRES.find(genre => genre.id === id); // console.log(\"genre\",result);\n\n      genres_array.push(result.name);\n      return genres_array;\n    });\n    console.log(genres_array.toString());\n    return genres_array.toString();\n  };\n\n  const addMovie = movie => {\n    if (movieExists(movie.id)) {\n      console.log(`duplicate!`, movie);\n      return;\n    }\n\n    let genres = getGenres(movie.genre_ids);\n    let newMovie = { ...movie,\n      genres: genres,\n      watched: false\n    };\n    setMovies([...movies, newMovie]); // frame.push({\n    //   id: newMovie.id,\n    //   title: newMovie.title,\n    //   genres: newMovie.genres,\n    //   posterpath: newMovie.poster_path,\n    //   voteaverage: newMovie.vote_average,\n    //   overview: newMovie.overview,\n    //   watched: false,\n    // });\n    // sync();\n  };\n\n  const delMovie = id => {\n    setMovies(movies.filter(movie => movie.id !== id));\n  };\n\n  const markWatched = id => {\n    setMovies(movies.map(movie => movie.id === id ? { ...movie,\n      watched: !movie.watched\n    } : movie));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(SearchMovie, {\n      onSelect: addMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: classes.movies,\n      children: [headers, /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: frame.map(movie => {\n          return /*#__PURE__*/_jsxDEV(Movie, {\n            movie: movie,\n            delMovie: delMovie,\n            markWatched: markWatched\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"XaFYh1m6RZMl5VwjpUnTgFQQNUc=\", true, function () {\n  return [useEasybase];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Main.js"],"names":["React","SearchMovie","classes","Movie","useEasybase","useState","useEffect","GENRES","Main","headers","db","useReturn","e","frame","console","log","return","movies","setMovies","movieExists","id","some","movie","getGenres","genre_ids","genres_array","map","result","find","genre","push","name","toString","addMovie","genres","newMovie","watched","delMovie","filter","markWatched","container"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SearchMovie from \"./Movie/SearchMovie\";\n\nimport classes from \"./Movies.module.css\";\nimport Movie from \"./Movie/Movie\";\n\nimport { useEasybase } from \"easybase-react\";\nimport { useState, useEffect } from \"react\";\n\nimport GENRES from \"../resources/genres\";\n\nconst Main = () => {\n  const headers = (\n    <thead>\n      <tr>\n        <th>watched</th>\n        <th>title</th>\n        <th>genre</th>\n        <th>poster</th>\n        <th>delete</th>\n      </tr>\n    </thead>\n  );\n\n  const { db, useReturn, e } = useEasybase();\n//   useEffect(() => {\n//     configureFrame({ tableName: \"MOVIES\" });\n//     sync();\n//   }, []);\n\n  const { frame } = useReturn(() => {\n      console.log(\"getting data...\");\n    db(\"MOVIES\").return();\n  }, []);\n\n  const [movies, setMovies] = useState([]);\n\n  const movieExists = (id) => {\n    return movies.some((movie) => {\n      return movie.id === id;\n    });\n  };\n\n  const getGenres = (genre_ids) => {\n    let genres_array = [];\n    genre_ids.map((id) => {\n      const result = GENRES.find((genre) => genre.id === id);\n      // console.log(\"genre\",result);\n      genres_array.push(result.name);\n      return genres_array;\n    });\n\n    console.log(genres_array.toString());\n    return genres_array.toString();\n  };\n\n  const addMovie = (movie) => {\n    if (movieExists(movie.id)) {\n      console.log(`duplicate!`, movie);\n      return;\n    }\n\n    let genres = getGenres(movie.genre_ids);\n\n    let newMovie = {\n      ...movie,\n      genres: genres,\n      watched: false,\n    };\n\n    setMovies([...movies, newMovie]);\n\n    // frame.push({\n    //   id: newMovie.id,\n    //   title: newMovie.title,\n    //   genres: newMovie.genres,\n    //   posterpath: newMovie.poster_path,\n    //   voteaverage: newMovie.vote_average,\n    //   overview: newMovie.overview,\n    //   watched: false,\n    // });\n\n    // sync();\n  };\n\n  const delMovie = (id) => {\n    setMovies(movies.filter((movie) => movie.id !== id));\n  };\n\n  const markWatched = (id) => {\n    setMovies(\n      movies.map((movie) =>\n        movie.id === id ? { ...movie, watched: !movie.watched } : movie\n      )\n    );\n  };\n\n  return (\n    <div className={classes.container}>\n      <SearchMovie onSelect={addMovie} />\n      {/* <Movies movies={Frame()} delMovie={delMovie} markWatched={markWatched} /> */}\n\n      <table className={classes.movies}>\n        {headers}\n        <tbody>\n          {frame.map((movie) => {\n            return (\n              <Movie\n                key={movie.id}\n                movie={movie}\n                delMovie={delMovie}\n                markWatched={markWatched}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}