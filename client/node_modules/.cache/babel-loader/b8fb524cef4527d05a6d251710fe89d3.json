{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Search/MovieGenres.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieGenres = () => {\n  _s();\n\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const fetchGenres = async e => {\n    e.preventDefault();\n    console.log(\"fetching genres\");\n    const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&id=14`;\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n      setIsLoaded(true);\n      return data.genres;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const lookupGenre = id => {\n    return \"test\";\n  };\n\n  const getGenres = genre_ids => {\n    let arr_genres = [];\n    genre_ids.map(genre_id => {\n      arr_genres.push(lookupGenre(genre_id));\n    });\n    return arr_genres.slice(0, 2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading genres...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n};\n\n_s(MovieGenres, \"IYJBVyHsXBw9t28YX/YBiMCcttM=\");\n\n_c = MovieGenres;\nexport default MovieGenres;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieGenres\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Search/MovieGenres.js"],"names":["React","useState","MovieGenres","isLoaded","setIsLoaded","fetchGenres","e","preventDefault","console","log","url","res","fetch","data","json","genres","err","error","lookupGenre","id","getGenres","genre_ids","arr_genres","map","genre_id","push","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,KAAD,CAAxC;;AAGA,QAAMI,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEA,UAAMC,GAAG,GAAI,6GAAb;;AAEA,QAAI;AACJ,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACA,YAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACIT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACJ,aAAOS,IAAI,CAACE,MAAZ;AACC,KAND,CAME,OAAOC,GAAP,EAAY;AACdR,MAAAA,OAAO,CAACS,KAAR,CAAcD,GAAd;AACC;AACJ,GAfD;;AAiBA,QAAME,WAAW,GAAIC,EAAD,IAAQ;AACxB,WAAO,MAAP;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAIC,SAAD,IAAe;AAC7B,QAAIC,UAAU,GAAG,EAAjB;AACAD,IAAAA,SAAS,CAACE,GAAV,CAAeC,QAAD,IAAc;AAC5BF,MAAAA,UAAU,CAACG,IAAX,CAAgBP,WAAW,CAACM,QAAD,CAA3B;AACC,KAFD;AAIJ,WAAOF,UAAU,CAACI,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAP;AACD,GAPC;;AASF,sBACI;AAAA,cACC,CAACvB,QAAD,iBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADd,mBADJ;AAMD,CAxCD;;GAAMD,W;;KAAAA,W;AA0CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst MovieGenres = () => {\n    const [isLoaded, setIsLoaded] = useState(false);\n\n\n    const fetchGenres = async (e) => {\n        e.preventDefault();\n        console.log(\"fetching genres\");\n\n        const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&id=14`;\n\n        try {\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n            setIsLoaded(true);\n        return data.genres;\n        } catch (err) {\n        console.error(err);\n        }\n    };\n\n    const lookupGenre = (id) => {\n        return \"test\";\n    };\n\n    const getGenres = (genre_ids) => {\n        let arr_genres = [];\n        genre_ids.map((genre_id) => {\n        arr_genres.push(lookupGenre(genre_id));\n        });\n\n    return arr_genres.slice(0, 2);\n  };\n\n  return( \n      <>\n      {!isLoaded && <div>Loading genres...</div>}\n      </>\n      );\n  \n};\n\nexport default MovieGenres;\n"]},"metadata":{},"sourceType":"module"}