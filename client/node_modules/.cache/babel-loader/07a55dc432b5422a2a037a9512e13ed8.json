{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport SearchMovie from \"./Movie/SearchMovie\";\nimport Movies from \"./Movies\";\nimport classes from \"./Movies.module.css\";\nimport Movie from './Movie/Movie';\nimport { EasybaseProvider, useEasybase } from 'easybase-react';\nimport { useState, useEffect } from 'react';\nimport GENRES from \"../resources/genres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const headers = /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"watched\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n\n  const {\n    Frame,\n    sync,\n    configureFrame\n  } = useEasybase();\n  useEffect(() => {\n    configureFrame({\n      tableName: \"NOTES APP\",\n      limit: 10\n    });\n    sync();\n  }, []);\n  const [movies, setMovies] = useState([]);\n\n  const movieExists = id => {\n    return movies.some(movie => {\n      return movie.id === id;\n    });\n  };\n\n  const getGenres = genre_ids => {\n    let genres_array = [];\n    genre_ids.map(id => {\n      const result = GENRES.find(genre => genre.id === id); // console.log(\"genre\",result);\n\n      genres_array.push(result.name);\n      return genres_array;\n    });\n    console.log(genres_array.toString());\n    return genres_array.toString();\n  };\n\n  const addMovie = movie => {\n    if (movieExists(movie.id)) {\n      console.log(`duplicate!`, movie);\n      return;\n    }\n\n    let genres = getGenres(movie.genre_ids);\n    let newMovie = { ...movie,\n      genres: genres,\n      watched: false\n    };\n    setMovies([...movies, newMovie]);\n  };\n\n  const delMovie = id => {\n    setMovies(movies.filter(movie => movie.id !== id));\n  };\n\n  const markWatched = id => {\n    setMovies(movies.map(movie => movie.id === id ? { ...movie,\n      watched: !movie.watched\n    } : movie));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchMovie, {\n      onSelect: addMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), Frame().map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }, this)), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: classes.movies,\n      children: [headers, /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Frame().map(movie => {\n          return /*#__PURE__*/_jsxDEV(Movie, {\n            movie: movie,\n            delMovie: delMovie,\n            markWatched: markWatched\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"eb92d/IipYE9Nzk9xeK/04dOt1Q=\", false, function () {\n  return [useEasybase];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Main.js"],"names":["React","SearchMovie","Movies","classes","Movie","EasybaseProvider","useEasybase","useState","useEffect","GENRES","Main","headers","Frame","sync","configureFrame","tableName","limit","movies","setMovies","movieExists","id","some","movie","getGenres","genre_ids","genres_array","map","result","find","genre","push","name","console","log","toString","addMovie","genres","newMovie","watched","delMovie","filter","markWatched","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SearchMovie from \"./Movie/SearchMovie\";\nimport Movies from \"./Movies\";\nimport classes from \"./Movies.module.css\";\nimport Movie from './Movie/Movie';\n\nimport { EasybaseProvider, useEasybase } from 'easybase-react';\nimport { useState, useEffect } from 'react';\n\nimport GENRES from \"../resources/genres\";\n\n\nconst Main = () => {\n    const headers = (\n        <thead>\n          <tr>\n            <th>watched</th>\n            <th>title</th>\n            <th>genre</th>\n            <th>poster</th>\n            <th>delete</th>\n          </tr>\n        </thead>\n      );\n\n\n    const { Frame, sync, configureFrame } = useEasybase();\n    useEffect(() => {\n        configureFrame({ tableName: \"NOTES APP\", limit: 10 });\n        sync();\n      }, []);\n\n  const [movies, setMovies] = useState([]);\n\n  const movieExists = (id) => {\n    return movies.some((movie) => {\n      return movie.id === id;\n    });\n  };\n\n  const getGenres = (genre_ids) => {\n    let genres_array = [];\n    genre_ids.map((id) => {\n      const result = GENRES.find((genre) => genre.id === id);\n      // console.log(\"genre\",result);\n      genres_array.push(result.name);\n      return genres_array;\n    });\n\n    console.log(genres_array.toString());\n    return genres_array.toString();\n  };\n\n  const addMovie = (movie) => {\n    if (movieExists(movie.id)) {\n      console.log(`duplicate!`, movie);\n      return;\n    }\n\n    let genres = getGenres(movie.genre_ids);\n\n    let newMovie = {\n      ...movie,\n      genres: genres,\n      watched: false,\n    };\n\n    setMovies([...movies, newMovie]);\n  };\n\n  const delMovie = (id) => {\n    setMovies(movies.filter((movie) => movie.id !== id));\n  };\n\n  const markWatched = (id) => {\n    setMovies(\n      movies.map((movie) =>\n        movie.id === id ? { ...movie, watched: !movie.watched } : movie\n      )\n    );\n  };\n\n  return (\n    <>\n      <SearchMovie onSelect={addMovie} />\n      {/* <Movies movies={Frame()} delMovie={delMovie} markWatched={markWatched} /> */}\n      {Frame().map(movie => <div>{movie.title}</div>)}\n\n      <table className={classes.movies}>\n          {headers}\n          <tbody>\n            {Frame().map((movie) => {\n              return (\n                <Movie\n                  key={movie.id}\n                  movie={movie}\n                  delMovie={delMovie}\n                  markWatched={markWatched}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n\n\n      \n    </>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}