{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport api from \"./api/queries\";\nimport SearchMovie from \"./components/Movie/SearchMovie\";\nimport MovieList from \"./components/Movie/MovieList\";\nimport GENRES from \"./resources/genres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getGenres = genre_ids => {\n  let genres_array = [];\n  genre_ids.map(id => {\n    const result = GENRES.find(genre => genre.id === id);\n    genres_array.push(result.name);\n    return genres_array;\n  });\n  console.log(genres_array.toString());\n  return genres_array.toString();\n};\n\nfunction App() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    retrieveMovies();\n  }, []);\n\n  const retrieveMovies = async () => {\n    await api.getAllMovies().then(response => {\n      setMovies(response.data.data);\n    }).catch(error => {\n      console.log(`error`, error);\n    });\n  };\n\n  const addMovie = async movie => {\n    console.log(`adding `, movie);\n    const genres = getGenres(movie.genre_ids);\n    const payload = {\n      id: movie.id,\n      title: movie.title,\n      genres: genres,\n      poster_path: movie.poster_path,\n      overview: movie.overview,\n      vote_average: Number(movie.vote_average),\n      watched: false\n    };\n    await api.insertMovie(payload).then(res => {\n      payload._id = res.data.id;\n      console.log(`res`, payload._id);\n    });\n    setMovies([...movies, payload]);\n  };\n\n  const onAddHandler = async movie => {\n    console.log(`in App, adding `, movie.title);\n    const lookup = await api.getMovieByTMDBId(movie.id).catch(error => {\n      console.log(`not a duplicate, OK to add `, movie.title);\n    });\n    lookup == null ? addMovie(movie) : console.log(`dupe `, movie);\n  };\n\n  const onWatchedHandler = async movie => {\n    const payload = { ...movie\n    };\n    payload.watched = !payload.watched;\n    await api.updateMovieById(movie._id, payload);\n    const newMovies = movies.filter(item => item._id !== movie._id);\n    setMovies([...newMovies, payload]); // setMovies((prevMovies) =>\n    // prevMovies.map((item) => {\n    //   return item.id === movie.id ? { ...item, watched: !item.watched } : item;\n    // }),\n    // );\n  };\n\n  const onRemoveHandler = movie => {\n    api.deleteMovieById(movie._id).then(response => {\n      const newMovies = movies.filter(item => item._id !== movie._id);\n      setMovies(newMovies);\n    }).catch(err => {\n      console.log(`err`, err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies,\n      onWatchedHandler: onWatchedHandler,\n      onRemoveHandler: onRemoveHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchMovie, {\n      onAddHandler: onAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/client/src/App.js"],"names":["React","useState","useEffect","api","SearchMovie","MovieList","GENRES","getGenres","genre_ids","genres_array","map","id","result","find","genre","push","name","console","log","toString","App","movies","setMovies","retrieveMovies","getAllMovies","then","response","data","catch","error","addMovie","movie","genres","payload","title","poster_path","overview","vote_average","Number","watched","insertMovie","res","_id","onAddHandler","lookup","getMovieByTMDBId","onWatchedHandler","updateMovieById","newMovies","filter","item","onRemoveHandler","deleteMovieById","err"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport api from \"./api/queries\";\n\nimport SearchMovie from \"./components/Movie/SearchMovie\";\nimport MovieList from \"./components/Movie/MovieList\";\n\nimport GENRES from \"./resources/genres\";\n\nconst getGenres = (genre_ids) => {\n  let genres_array = [];\n  genre_ids.map((id) => {\n    const result = GENRES.find((genre) => genre.id === id);\n    genres_array.push(result.name);\n    return genres_array;\n  });\n\n  console.log(genres_array.toString());\n  return genres_array.toString();\n};\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    retrieveMovies();\n  }, []);\n\n  const retrieveMovies = async () => {\n    await api\n      .getAllMovies()\n      .then((response) => {\n        setMovies(response.data.data);\n      })\n      .catch((error) => {\n        console.log(`error`, error);\n      });\n  };\n\n  const addMovie = async (movie) => {\n    console.log(`adding `, movie);\n\n    const genres = getGenres(movie.genre_ids);\n\n    const payload = {\n      id: movie.id,\n      title: movie.title,\n      genres: genres,\n      poster_path: movie.poster_path,\n      overview: movie.overview,\n      vote_average: Number(movie.vote_average),\n      watched: false,\n    };\n\n    await api.insertMovie(payload).then((res) => {\n      payload._id = res.data.id;\n      console.log(`res`, payload._id);\n    });\n    setMovies([...movies, payload]);\n  };\n\n  const onAddHandler = async (movie) => {\n    console.log(`in App, adding `, movie.title);\n    const lookup = await api.getMovieByTMDBId(movie.id).catch((error) => {\n      console.log(`not a duplicate, OK to add `, movie.title);\n    });\n\n    lookup == null ? addMovie(movie) : console.log(`dupe `, movie);\n  };\n\n  const onWatchedHandler = async (movie) => {\n    const payload = { ...movie };\n    payload.watched = !payload.watched;\n\n    await api.updateMovieById(movie._id, payload);\n\n    const newMovies = movies.filter((item) => item._id !== movie._id);\n    setMovies([...newMovies, payload]);\n\n    // setMovies((prevMovies) =>\n    // prevMovies.map((item) => {\n    //   return item.id === movie.id ? { ...item, watched: !item.watched } : item;\n    // }),\n    // );\n  };\n\n  const onRemoveHandler =  (movie) => {\n     api\n      .deleteMovieById(movie._id)\n      .then((response) => {\n        const newMovies = movies.filter((item) => item._id !== movie._id);\n        setMovies(newMovies);\n      })\n      .catch((err) => {\n        console.log(`err`, err);\n      });\n  };\n\n  return (\n    <div>\n      <MovieList\n        movies={movies}\n        onWatchedHandler={onWatchedHandler}\n        onRemoveHandler={onRemoveHandler}\n      />\n      <SearchMovie onAddHandler={onAddHandler} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}