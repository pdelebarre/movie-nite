{"ast":null,"code":"////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2016 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n'use strict';\n\nimport { keys } from './constants';\nimport * as util from './util';\nimport * as rpc from './rpc';\nimport { invalidateCache } from './cache';\nexport default class Collection {\n  constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n}\n\nfunction isIndex(propertyName) {\n  return typeof propertyName === 'number' || typeof propertyName === 'string' && /^-?\\d+$/.test(propertyName);\n}\n\nconst mutable = Symbol('mutable');\nconst traps = {\n  get(collection, property, receiver) {\n    if (isIndex(property)) {\n      return util.getProperty(collection, property);\n    }\n\n    return Reflect.get(collection, property, collection);\n  },\n\n  set(collection, property, value, receiver) {\n    if (isIndex(property)) {\n      if (!collection[mutable]) {\n        return false;\n      }\n\n      invalidateCache(collection[keys.realm]);\n      rpc.setProperty(collection[keys.realm], collection[keys.id], property, value);\n      return true;\n    }\n\n    if (!Reflect.set(collection, property, value, collection)) {\n      throw new TypeError(`Cannot assign to read only property '${property}'`);\n    }\n\n    return true;\n  },\n\n  ownKeys(collection) {\n    return Reflect.ownKeys(collection).concat(Array.from({\n      length: collection.length\n    }, (value, key) => String(key)));\n  },\n\n  getOwnPropertyDescriptor(collection, property) {\n    if (isIndex(property)) {\n      let descriptor = {\n        enumerable: true,\n        configurable: true,\n        writable: collection[mutable]\n      };\n      Reflect.defineProperty(descriptor, \"value\", {\n        get: () => this.get(collection, property)\n      });\n      return descriptor;\n    }\n\n    return Reflect.getOwnPropertyDescriptor(collection, property);\n  },\n\n  has(collection, property) {\n    if (isIndex(property)) {\n      return true;\n    }\n\n    return Reflect.has(collection, property);\n  }\n\n};\nexport function createCollection(prototype, realmId, info, _mutable) {\n  let collection = Object.create(prototype);\n  Object.defineProperties(collection, {\n    'length': {\n      get: util.getterForProperty('length')\n    },\n    'type': {\n      value: info.dataType\n    },\n    'optional': {\n      value: info.optional\n    }\n  });\n  collection[keys.realm] = realmId;\n  collection[keys.id] = info.id;\n  collection[keys.type] = info.type;\n  collection[mutable] = _mutable;\n  return new Proxy(collection, traps);\n}","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/realm/lib/browser/collections.js"],"names":["keys","util","rpc","invalidateCache","Collection","constructor","TypeError","isIndex","propertyName","test","mutable","Symbol","traps","get","collection","property","receiver","getProperty","Reflect","set","value","realm","setProperty","id","ownKeys","concat","Array","from","length","key","String","getOwnPropertyDescriptor","descriptor","enumerable","configurable","writable","defineProperty","has","createCollection","prototype","realmId","info","_mutable","Object","create","defineProperties","getterForProperty","dataType","optional","type","Proxy"],"mappings":"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","sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2016 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n'use strict';\n\nimport { keys } from './constants';\nimport * as util from './util';\nimport * as rpc from './rpc';\nimport { invalidateCache } from './cache';\n\nexport default class Collection {\n    constructor() {\n        throw new TypeError('Illegal constructor');\n    }\n}\n\nfunction isIndex(propertyName) {\n    return typeof propertyName === 'number' || (typeof propertyName === 'string' && /^-?\\d+$/.test(propertyName));\n}\n\nconst mutable = Symbol('mutable');\n\nconst traps = {\n    get(collection, property, receiver) {\n        if (isIndex(property)) {\n            return util.getProperty(collection, property);\n        }\n\n        return Reflect.get(collection, property, collection);\n    },\n    set(collection, property, value, receiver) {\n        if (isIndex(property)) {\n            if (!collection[mutable]) {\n                return false;\n            }\n\n            invalidateCache(collection[keys.realm]);\n            rpc.setProperty(collection[keys.realm], collection[keys.id], property, value);\n            return true;\n        }\n\n        if (!Reflect.set(collection, property, value, collection)) {\n            throw new TypeError(`Cannot assign to read only property '${property}'`)\n        }\n        return true;\n    },\n    ownKeys(collection) {\n        return Reflect.ownKeys(collection).concat(Array.from({ length: collection.length }, (value, key) => String(key)));\n    },\n    getOwnPropertyDescriptor(collection, property) {\n        if (isIndex(property)) {\n            let descriptor = {\n                enumerable: true,\n                configurable: true,\n                writable: collection[mutable]\n            };\n            Reflect.defineProperty(descriptor, \"value\", { get: () => this.get(collection, property) });\n            return descriptor;\n        }\n\n        return Reflect.getOwnPropertyDescriptor(collection, property);\n    },\n    has(collection, property) {\n        if (isIndex(property)) {\n            return true;\n        }\n\n        return Reflect.has(collection, property);\n    }\n};\n\nexport function createCollection(prototype, realmId, info, _mutable) {\n    let collection = Object.create(prototype);\n\n    Object.defineProperties(collection, {\n        'length': {\n            get: util.getterForProperty('length'),\n        },\n        'type': {\n            value: info.dataType,\n        },\n        'optional': {\n            value: info.optional,\n        },\n    });\n\n    collection[keys.realm] = realmId;\n    collection[keys.id] = info.id;\n    collection[keys.type] = info.type;\n    collection[mutable] = _mutable;\n\n    return new Proxy(collection, traps);\n}\n"]},"metadata":{},"sourceType":"module"}