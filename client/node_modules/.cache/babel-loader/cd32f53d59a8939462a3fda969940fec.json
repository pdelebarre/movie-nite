{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/UI/AddMovieButton.js\",\n    _s = $RefreshSig$();\n\nimport { useEasybase } from \"easybase-react\";\nimport classes from \"./AddMovieButton.module.css\";\nimport GENRES from \"../resources/genres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getGenres = genre_ids => {\n  let genres_array = [];\n  genre_ids.map(id => {\n    const result = GENRES.find(genre => genre.id === id);\n    genres_array.push(result.name);\n    return genres_array;\n  });\n  console.log(genres_array.toString());\n  return genres_array.toString();\n};\n\nconst AddMovieButton = props => {\n  _s();\n\n  const eb = useEasybase();\n  const {\n    e,\n    db\n  } = eb; // const movieExists = async (id) => {\n  //   console.log(\"check if movie exists :>> \", id);\n  //   let singleRecord = await db(\"MOVIES\").return().where(e.eq(\"id\", id)).one();\n  //   console.log(`singleRecord`, singleRecord);\n  //   return singleRecord !== null;\n  // };\n\n  const onAddMovie = async ({\n    id,\n    title,\n    genre_ids,\n    poster_path,\n    overview,\n    vote_average\n  }) => {\n    console.log(`adding `, id, title, genre_ids, poster_path, overview, vote_average); // try {\n    //   let dupe = await db(\"MOVIES\").return().where(e.eq(\"id\", id)).one();\n    //   // if (dupe!==null) {\n    //   //   console.log(`duplicate movie: `, title, dupe);\n    //   //   return;\n    //   // }\n    //   const listenerA = eb.dbEventListener((status, queryType, queryCount) => {\n    //     console.log(\"A: \", status, queryType, queryCount)\n    // })\n\n    const genres = getGenres(genre_ids);\n    await db(\"MOVIES\").insert({\n      id: id,\n      title: title,\n      genres: genres,\n      posterpath: poster_path,\n      overview: overview,\n      voteaverage: Number(vote_average),\n      watched: false\n    }).one(); //     listenerA();\n    // } catch (e) {\n    //   console.log(`exception: `, e);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.moviebutton,\n    onClick: onAddMovie.bind(null, props.movie),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      children: props.movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.vote,\n      children: props.movie.vote_average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, props.movie.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddMovieButton, \"CmAT7nNmqJ9dB/xjMqhLrFjuMWE=\", false, function () {\n  return [useEasybase];\n});\n\n_c = AddMovieButton;\nexport default AddMovieButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMovieButton\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/UI/AddMovieButton.js"],"names":["useEasybase","classes","GENRES","getGenres","genre_ids","genres_array","map","id","result","find","genre","push","name","console","log","toString","AddMovieButton","props","eb","e","db","onAddMovie","title","poster_path","overview","vote_average","genres","insert","posterpath","voteaverage","Number","watched","one","moviebutton","bind","movie","vote"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AAEA,OAAOC,OAAP,MAAoB,6BAApB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,SAAS,GAAIC,SAAD,IAAe;AAC/B,MAAIC,YAAY,GAAG,EAAnB;AACAD,EAAAA,SAAS,CAACE,GAAV,CAAeC,EAAD,IAAQ;AACpB,UAAMC,MAAM,GAAGN,MAAM,CAACO,IAAP,CAAaC,KAAD,IAAWA,KAAK,CAACH,EAAN,KAAaA,EAApC,CAAf;AACAF,IAAAA,YAAY,CAACM,IAAb,CAAkBH,MAAM,CAACI,IAAzB;AACA,WAAOP,YAAP;AACD,GAJD;AAMAQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,YAAY,CAACU,QAAb,EAAZ;AACA,SAAOV,YAAY,CAACU,QAAb,EAAP;AACD,CAVD;;AAYA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAMC,EAAE,GAAGlB,WAAW,EAAtB;AACA,QAAM;AAACmB,IAAAA,CAAD;AAAIC,IAAAA;AAAJ,MAAUF,EAAhB,CAFgC,CAIhC;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMG,UAAU,GAAG,OAAO;AACxBd,IAAAA,EADwB;AAExBe,IAAAA,KAFwB;AAGxBlB,IAAAA,SAHwB;AAIxBmB,IAAAA,WAJwB;AAKxBC,IAAAA,QALwB;AAMxBC,IAAAA;AANwB,GAAP,KAOb;AACJZ,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAb,EAAuBP,EAAvB,EACAe,KADA,EAEAlB,SAFA,EAGAmB,WAHA,EAIAC,QAJA,EAKAC,YALA,EADI,CAOJ;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEE,UAAMC,MAAM,GAAGvB,SAAS,CAACC,SAAD,CAAxB;AACA,UAAMgB,EAAE,CAAC,QAAD,CAAF,CACHO,MADG,CACI;AACNpB,MAAAA,EAAE,EAAEA,EADE;AAENe,MAAAA,KAAK,EAAEA,KAFD;AAGNI,MAAAA,MAAM,EAAEA,MAHF;AAINE,MAAAA,UAAU,EAAEL,WAJN;AAKNC,MAAAA,QAAQ,EAAEA,QALJ;AAMNK,MAAAA,WAAW,EAAEC,MAAM,CAACL,YAAD,CANb;AAONM,MAAAA,OAAO,EAAE;AAPH,KADJ,EAUHC,GAVG,EAAN,CApBE,CAgCJ;AACA;AACA;AACA;AACD,GA3CD;;AA6CA,sBACE;AAEE,IAAA,SAAS,EAAE/B,OAAO,CAACgC,WAFrB;AAGE,IAAA,OAAO,EAAEZ,UAAU,CAACa,IAAX,CAAgB,IAAhB,EAAsBjB,KAAK,CAACkB,KAA5B,CAHX;AAAA,4BAKE;AAAK,MAAA,SAAS,EAAElC,OAAO,CAACqB,KAAxB;AAAA,gBAAgCL,KAAK,CAACkB,KAAN,CAAYb;AAA5C;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAK,MAAA,SAAS,EAAErB,OAAO,CAACmC,IAAxB;AAAA,gBAA+BnB,KAAK,CAACkB,KAAN,CAAYV;AAA3C;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,KACOR,KAAK,CAACkB,KAAN,CAAY5B,EADnB;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAlED;;GAAMS,c;UACOhB,W;;;KADPgB,c;AAoEN,eAAeA,cAAf","sourcesContent":["import { useEasybase } from \"easybase-react\";\n\nimport classes from \"./AddMovieButton.module.css\";\n\nimport GENRES from \"../resources/genres\";\n\nconst getGenres = (genre_ids) => {\n  let genres_array = [];\n  genre_ids.map((id) => {\n    const result = GENRES.find((genre) => genre.id === id);\n    genres_array.push(result.name);\n    return genres_array;\n  });\n\n  console.log(genres_array.toString());\n  return genres_array.toString();\n};\n\nconst AddMovieButton = (props) => {\n  const eb = useEasybase();\n  const {e, db} = eb;\n\n  // const movieExists = async (id) => {\n  //   console.log(\"check if movie exists :>> \", id);\n  //   let singleRecord = await db(\"MOVIES\").return().where(e.eq(\"id\", id)).one();\n  //   console.log(`singleRecord`, singleRecord);\n  //   return singleRecord !== null;\n  // };\n\n  const onAddMovie = async ({\n    id,\n    title,\n    genre_ids,\n    poster_path,\n    overview,\n    vote_average,\n  }) => {\n    console.log(`adding `, id,\n    title,\n    genre_ids,\n    poster_path,\n    overview,\n    vote_average);\n    // try {\n    //   let dupe = await db(\"MOVIES\").return().where(e.eq(\"id\", id)).one();\n\n    //   // if (dupe!==null) {\n    //   //   console.log(`duplicate movie: `, title, dupe);\n    //   //   return;\n    //   // }\n\n    //   const listenerA = eb.dbEventListener((status, queryType, queryCount) => {\n    //     console.log(\"A: \", status, queryType, queryCount)\n    // })\n\n      const genres = getGenres(genre_ids);\n      await db(\"MOVIES\")\n        .insert({\n          id: id,\n          title: title,\n          genres: genres,\n          posterpath: poster_path,\n          overview: overview,\n          voteaverage: Number(vote_average),\n          watched: false,\n        })\n        .one();\n\n    //     listenerA();\n    // } catch (e) {\n    //   console.log(`exception: `, e);\n    // }\n  };\n\n  return (\n    <div\n      key={props.movie.id}\n      className={classes.moviebutton}\n      onClick={onAddMovie.bind(null, props.movie)}\n    >\n      <div className={classes.title}>{props.movie.title}</div>\n      <div className={classes.vote}>{props.movie.vote_average}</div>\n    </div>\n  );\n};\n\nexport default AddMovieButton;\n"]},"metadata":{},"sourceType":"module"}