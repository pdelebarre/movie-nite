{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movie/SearchMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport AddMovieButton from \"../../UI/AddMovieButton\";\nimport classes from \"./SearchMovie.module.css\";\nimport { Pane, SearchInput } from \"evergreen-ui\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortResults = results => {\n  results.sort((a, b) => b.vote_average - a.vote_average);\n  return results;\n};\n\nexport default function SearchMovie(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(async () => {\n      console.log(query);\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n\n        if (data.results && data.results.length > 0) {\n          setResults(data.results);\n          setIsVisible(true);\n        }\n      } catch (err) {\n        console.error(err); // setIsVisible(false);\n      }\n    }, [1000]);\n    return () => {\n      clearTimeout(delayDebounceFn); // setIsVisible(false);\n    };\n  }, [query]);\n  useEffect(() => {\n    setIsVisible(results.length > 0);\n  }, [results]);\n\n  const onChangeHandler = event => {\n    setQuery(event.target.value);\n  };\n\n  const onClickHandler = event => {\n    setResults([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Pane, {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n      className: classes[\"search-input\"],\n      type: \"text\",\n      name: \"query\",\n      placeholder: \"i.e. Jurassic Park\",\n      onChange: onChangeHandler,\n      value: query,\n      onClick: onClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), isVisible && results && results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dropdown,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        onClick: props.onClick,\n        children: sortResults(results).map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(AddMovieButton, {\n            movie: result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, result.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchMovie, \"abtK4ZDnukaNIGK0gWoYFxcBE0k=\");\n\n_c = SearchMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovie\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movie/SearchMovie.js"],"names":["React","useState","useEffect","AddMovieButton","classes","Pane","SearchInput","sortResults","results","sort","a","b","vote_average","SearchMovie","props","query","setQuery","setResults","isVisible","setIsVisible","delayDebounceFn","setTimeout","console","log","url","res","fetch","data","json","length","err","error","clearTimeout","onChangeHandler","event","target","value","onClickHandler","container","dropdown","onClick","map","result","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AddMovieButton from \"../../UI/AddMovieButton\";\nimport classes from \"./SearchMovie.module.css\";\n\nimport { Pane, SearchInput } from \"evergreen-ui\";\n\nconst sortResults = (results) => {\n  results.sort((a, b) => b.vote_average - a.vote_average);\n  return results;\n};\n\nexport default function SearchMovie(props) {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(async () => {\n      console.log(query);\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n        if (data.results && data.results.length > 0) {\n          setResults(data.results);\n          setIsVisible(true);\n        }\n      } catch (err) {\n        console.error(err);\n        // setIsVisible(false);\n      }\n    }, [1000]);\n\n    return () => {\n      clearTimeout(delayDebounceFn);\n      // setIsVisible(false);\n    };\n  }, [query]);\n\n  useEffect(() => {\n\n    setIsVisible(results.length >0);\n  }, [results]);\n\n  const onChangeHandler = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const onClickHandler = (event) => {\n    setResults([]);\n  };\n\n  return (\n\n    \n    <Pane className={classes.container}>\n      <SearchInput\n        className={classes[\"search-input\"]}\n        type=\"text\"\n        name=\"query\"\n        placeholder=\"i.e. Jurassic Park\"\n        onChange={onChangeHandler}\n        value={query}\n        onClick={onClickHandler}\n      />\n\n      {isVisible && results && results.length > 0 && (\n        <div className={classes.dropdown}>\n          <ul onClick={props.onClick}>\n            {sortResults(results).map((result) => (\n              <li key={result.id}>\n                <AddMovieButton movie={result} />\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </Pane>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}