{"ast":null,"code":"const {\n  isObject,\n  buildCall,\n  mapJoin,\n  objectMapJoin\n} = require('../../lib-util');\n\nconst buildArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg;\n  if (isObject(arg)) return buildObject(ctx, arg);\n  return ctx.build(arg);\n};\n\nconst buildProperty = (ctx, key, value) => {\n  const expression = typeof value === 'string' ? value : ctx.build(value);\n  return `${expression} ${ctx.mapKey(key)}`;\n};\n\nconst buildObject = objectMapJoin(buildProperty);\nmodule.exports = mapJoin(buildCall(mapJoin(buildArg)));","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/EasyQB/src/lib-sq/common/expressions.js"],"names":["isObject","buildCall","mapJoin","objectMapJoin","require","buildArg","ctx","arg","buildObject","build","buildProperty","key","value","expression","mapKey","module","exports"],"mappings":"AAAA,MAAM;AACJA,EAAAA,QADI;AAEJC,EAAAA,SAFI;AAGJC,EAAAA,OAHI;AAIJC,EAAAA;AAJI,IAKFC,OAAO,CAAC,gBAAD,CALX;;AAOA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAOA,GAAP;AAC7B,MAAIP,QAAQ,CAACO,GAAD,CAAZ,EAAmB,OAAOC,WAAW,CAACF,GAAD,EAAMC,GAAN,CAAlB;AACnB,SAAOD,GAAG,CAACG,KAAJ,CAAUF,GAAV,CAAP;AACD,CAJD;;AAMA,MAAMG,aAAa,GAAG,CAACJ,GAAD,EAAMK,GAAN,EAAWC,KAAX,KAAqB;AACzC,QAAMC,UAAU,GAAG,OAAOD,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCN,GAAG,CAACG,KAAJ,CAAUG,KAAV,CAAvD;AACA,SAAQ,GAAEC,UAAW,IAAGP,GAAG,CAACQ,MAAJ,CAAWH,GAAX,CAAgB,EAAxC;AACD,CAHD;;AAKA,MAAMH,WAAW,GAAGL,aAAa,CAACO,aAAD,CAAjC;AACAK,MAAM,CAACC,OAAP,GAAiBd,OAAO,CAACD,SAAS,CAACC,OAAO,CAACG,QAAD,CAAR,CAAV,CAAxB","sourcesContent":["const {\n  isObject,\n  buildCall,\n  mapJoin,\n  objectMapJoin\n} = require('../../lib-util')\n\nconst buildArg = (ctx, arg) => {\n  if (typeof arg === 'string') return arg\n  if (isObject(arg)) return buildObject(ctx, arg)\n  return ctx.build(arg)\n}\n\nconst buildProperty = (ctx, key, value) => {\n  const expression = typeof value === 'string' ? value : ctx.build(value)\n  return `${expression} ${ctx.mapKey(key)}`\n}\n\nconst buildObject = objectMapJoin(buildProperty)\nmodule.exports = mapJoin(buildCall(mapJoin(buildArg)))\n"]},"metadata":{},"sourceType":"script"}