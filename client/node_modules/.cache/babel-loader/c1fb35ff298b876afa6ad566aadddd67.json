{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport SearchMovie from \"./Movie/SearchMovie\";\nimport classes from \"./Movies.module.css\";\nimport Movie from \"./Movie/Movie\";\nimport { EasybaseProvider, useEasybase } from \"easybase-react\";\nimport { useState, useEffect } from \"react\";\nimport GENRES from \"../resources/genres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const headers = /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"watched\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n\n  const {\n    db\n  } = useEasybase(); //   useEffect(() => {\n  //     configureFrame({ tableName: \"MOVIES\" });\n  //     sync();\n  //   }, []);\n\n  const [movies, setMovies] = useState([]);\n\n  const mounted = async () => {\n    const ebData = await db(\"MOVIES\").return().limit(10).all();\n    setMovies(ebData);\n  };\n\n  useEffect(() => {\n    mounted();\n  }, []); //   const { frame } = useReturn(() => {\n  //     console.log(\"getting data...\");\n  //     db(\"MOVIES\").return();\n  //   }, []);\n  //   const movieExists = (id) => {\n  //     return movies.some((movie) => {\n  //       return movie.id === id;\n  //     });\n  //   };\n  //   const getGenres = (genre_ids) => {\n  //     let genres_array = [];\n  //     genre_ids.map((id) => {\n  //       const result = GENRES.find((genre) => genre.id === id);\n  //       // console.log(\"genre\",result);\n  //       genres_array.push(result.name);\n  //       return genres_array;\n  //     });\n  //     console.log(genres_array.toString());\n  //     return genres_array.toString();\n  //   };\n  //   const addMovie = (movie) => {\n  //     if (movieExists(movie.id)) {\n  //       console.log(`duplicate!`, movie);\n  //       return;\n  //     }\n  //     let genres = getGenres(movie.genre_ids);\n  //     let newMovie = {\n  //       ...movie,\n  //       genres: genres,\n  //       watched: false,\n  //     };\n  //     setMovies([...movies, newMovie]);\n  //     // frame.push({\n  //     //   id: newMovie.id,\n  //     //   title: newMovie.title,\n  //     //   genres: newMovie.genres,\n  //     //   posterpath: newMovie.poster_path,\n  //     //   voteaverage: newMovie.vote_average,\n  //     //   overview: newMovie.overview,\n  //     //   watched: false,\n  //     // });\n  //     // sync();\n  //   };\n  //   const delMovie = (id) => {\n  //     setMovies(movies.filter((movie) => movie.id !== id));\n  //   };\n  //   const markWatched = (id) => {\n  //     setMovies(\n  //       movies.map((movie) =>\n  //         movie.id === id ? { ...movie, watched: !movie.watched } : movie\n  //       )\n  //     );\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: classes.movies,\n      children: [headers, /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: movies.map(movie => {\n          return /*#__PURE__*/_jsxDEV(Movie, {\n            movie: movie // delMovie={delMovie}\n            // markWatched={markWatched}\n\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"E3MF5AKf7Ct09K9JApvJGcifnsY=\", false, function () {\n  return [useEasybase];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Main.js"],"names":["React","SearchMovie","classes","Movie","EasybaseProvider","useEasybase","useState","useEffect","GENRES","Main","headers","db","movies","setMovies","mounted","ebData","return","limit","all","container","map","movie","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,gBAA9C;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,OAAO,gBACX;AAAA,2BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAYA,QAAM;AAAEC,IAAAA;AAAF,MAAQN,WAAW,EAAzB,CAbiB,CAcjB;AACA;AACA;AACA;;AAEA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMQ,OAAO,GAAG,YAAW;AACzB,UAAMC,MAAM,GAAG,MAAMJ,EAAE,CAAC,QAAD,CAAF,CAAaK,MAAb,GAAsBC,KAAtB,CAA4B,EAA5B,EAAgCC,GAAhC,EAArB;AACAL,IAAAA,SAAS,CAACE,MAAD,CAAT;AACD,GAHD;;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT,CA1BiB,CA+BnB;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACiB,SAAxB;AAAA,2BAIE;AAAO,MAAA,SAAS,EAAEjB,OAAO,CAACU,MAA1B;AAAA,iBACGF,OADH,eAEE;AAAA,kBACGE,MAAM,CAACQ,GAAP,CAAYC,KAAD,IAAW;AACrB,8BACE,QAAC,KAAD;AAEE,YAAA,KAAK,EAAEA,KAFT,CAGE;AACA;;AAJF,aACOA,KAAK,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAvHD;;GAAMb,I;UAaUJ,W;;;KAbVI,I;AAyHN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport SearchMovie from \"./Movie/SearchMovie\";\n\nimport classes from \"./Movies.module.css\";\nimport Movie from \"./Movie/Movie\";\n\nimport { EasybaseProvider, useEasybase } from \"easybase-react\";\nimport { useState, useEffect } from \"react\";\n\nimport GENRES from \"../resources/genres\";\n\nconst Main = () => {\n  const headers = (\n    <thead>\n      <tr>\n        <th>watched</th>\n        <th>title</th>\n        <th>genre</th>\n        <th>poster</th>\n        <th>delete</th>\n      </tr>\n    </thead>\n  );\n\n  const { db} = useEasybase();\n  //   useEffect(() => {\n  //     configureFrame({ tableName: \"MOVIES\" });\n  //     sync();\n  //   }, []);\n  \n  const [movies, setMovies] = useState([]);\n  \n  const mounted = async() => {\n    const ebData = await db(\"MOVIES\").return().limit(10).all();\n    setMovies(ebData);\n  }\n\n  useEffect(() => {\n    mounted();\n  }, [])\n\n\n//   const { frame } = useReturn(() => {\n//     console.log(\"getting data...\");\n//     db(\"MOVIES\").return();\n//   }, []);\n\n\n//   const movieExists = (id) => {\n//     return movies.some((movie) => {\n//       return movie.id === id;\n//     });\n//   };\n\n//   const getGenres = (genre_ids) => {\n//     let genres_array = [];\n//     genre_ids.map((id) => {\n//       const result = GENRES.find((genre) => genre.id === id);\n//       // console.log(\"genre\",result);\n//       genres_array.push(result.name);\n//       return genres_array;\n//     });\n\n//     console.log(genres_array.toString());\n//     return genres_array.toString();\n//   };\n\n//   const addMovie = (movie) => {\n//     if (movieExists(movie.id)) {\n//       console.log(`duplicate!`, movie);\n//       return;\n//     }\n\n//     let genres = getGenres(movie.genre_ids);\n\n//     let newMovie = {\n//       ...movie,\n//       genres: genres,\n//       watched: false,\n//     };\n\n//     setMovies([...movies, newMovie]);\n\n//     // frame.push({\n//     //   id: newMovie.id,\n//     //   title: newMovie.title,\n//     //   genres: newMovie.genres,\n//     //   posterpath: newMovie.poster_path,\n//     //   voteaverage: newMovie.vote_average,\n//     //   overview: newMovie.overview,\n//     //   watched: false,\n//     // });\n\n//     // sync();\n//   };\n\n//   const delMovie = (id) => {\n//     setMovies(movies.filter((movie) => movie.id !== id));\n//   };\n\n//   const markWatched = (id) => {\n//     setMovies(\n//       movies.map((movie) =>\n//         movie.id === id ? { ...movie, watched: !movie.watched } : movie\n//       )\n//     );\n//   };\n\n  return (\n    <div className={classes.container}>\n      {/* <SearchMovie onSelect={addMovie} /> */}\n      {/* <Movies movies={Frame()} delMovie={delMovie} markWatched={markWatched} /> */}\n\n      <table className={classes.movies}>\n        {headers}\n        <tbody>\n          {movies.map((movie) => {\n            return (\n              <Movie\n                key={movie.id}\n                movie={movie}\n                // delMovie={delMovie}\n                // markWatched={markWatched}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}