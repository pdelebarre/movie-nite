{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Movies from \"./components/Movies\";\nimport SearchMovie from \"./components/Movie/SearchMovie\";\nimport GENRES from './resources/genres';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]); // const [appState, setAppState] = useState({ loading: false, genres: null });\n  // useEffect(() => {\n  //   setAppState({ loading: true });\n  //   const apiUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&id=14`;\n  //   fetch(apiUrl)\n  //     .then((res) => res.json())\n  //     .then((genres) => {\n  //       setAppState({ loading: false, genres: genres });\n  //     });\n  // }, [setAppState]);\n\n  const movieExists = id => {\n    return movies.some(movie => {\n      return movie.id === id;\n    });\n  };\n\n  const getGenres = genre_ids => {\n    let genres_array = [];\n    genre_ids.map(id => {\n      const result = GENRES.find(genre => genre.id === id); // console.log(\"genre\",result);\n\n      genres_array.push(result.name);\n      return genres_array;\n    });\n    console.log(genres_array.toString());\n    return genres_array.toString();\n  };\n\n  const addMovie = movie => {\n    // console.log(`movie from App`, movie.poster_path);\n    if (movieExists(movie.id)) {\n      console.log(`duplicate!`, movie);\n      return;\n    }\n\n    let genres = getGenres(movie.genre_ids);\n    let newMovie = { ...movie,\n      genres: genres,\n      watched: false\n    };\n    setMovies([...movies, newMovie]);\n  };\n\n  const delMovie = id => {\n    setMovies(movies.filter(movie => movie.id !== id));\n  };\n\n  const markWatched = id => {\n    setMovies(movies.map(movie => movie.id === id ? { ...movie,\n      watched: !movie.watched\n    } : movie));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchMovie, {\n      onSelect: addMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Movies, {\n      movies: movies,\n      delMovie: delMovie,\n      markWatched: markWatched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/App.js"],"names":["React","useState","Movies","SearchMovie","GENRES","App","movies","setMovies","movieExists","id","some","movie","getGenres","genre_ids","genres_array","map","result","find","genre","push","name","console","log","toString","addMovie","genres","newMovie","watched","delMovie","filter","markWatched"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC,CADgB,CAEhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMO,WAAW,GAAIC,EAAD,IAAQ;AAC1B,WAAOH,MAAM,CAACI,IAAP,CAAaC,KAAD,IAAW;AAC5B,aAAOA,KAAK,CAACF,EAAN,KAAaA,EAApB;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,QAAMG,SAAS,GAAIC,SAAD,IAAe;AAC/B,QAAIC,YAAY,GAAG,EAAnB;AACAD,IAAAA,SAAS,CAACE,GAAV,CAAeN,EAAD,IAAQ;AACpB,YAAMO,MAAM,GAAGZ,MAAM,CAACa,IAAP,CAAcC,KAAD,IAAWA,KAAK,CAACT,EAAN,KAAaA,EAArC,CAAf,CADoB,CAEpB;;AACDK,MAAAA,YAAY,CAACK,IAAb,CAAkBH,MAAM,CAACI,IAAzB;AACA,aAAON,YAAP;AACA,KALD;AAQAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,YAAY,CAACS,QAAb,EAAZ;AACI,WAAOT,YAAY,CAACS,QAAb,EAAP;AACL,GAZD;;AAcA,QAAMC,QAAQ,GAAIb,KAAD,IAAW;AAC1B;AAEA,QAAIH,WAAW,CAACG,KAAK,CAACF,EAAP,CAAf,EAA2B;AACzBY,MAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA0BX,KAA1B;AACA;AACD;;AAED,QAAIc,MAAM,GAAGb,SAAS,CAACD,KAAK,CAACE,SAAP,CAAtB;AAEA,QAAIa,QAAQ,GAAG,EACb,GAAGf,KADU;AAEbc,MAAAA,MAAM,EAAEA,MAFK;AAGbE,MAAAA,OAAO,EAAE;AAHI,KAAf;AAMApB,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYoB,QAAZ,CAAD,CAAT;AACD,GAjBD;;AAmBA,QAAME,QAAQ,GAAInB,EAAD,IAAQ;AACvBF,IAAAA,SAAS,CAACD,MAAM,CAACuB,MAAP,CAAelB,KAAD,IAAWA,KAAK,CAACF,EAAN,KAAaA,EAAtC,CAAD,CAAT;AACD,GAFD;;AAIA,QAAMqB,WAAW,GAAIrB,EAAD,IAAQ;AAC1BF,IAAAA,SAAS,CACPD,MAAM,CAACS,GAAP,CAAYJ,KAAD,IACTA,KAAK,CAACF,EAAN,KAAaA,EAAb,GAAkB,EAAE,GAAGE,KAAL;AAAYgB,MAAAA,OAAO,EAAE,CAAChB,KAAK,CAACgB;AAA5B,KAAlB,GAA0DhB,KAD5D,CADO,CAAT;AAKD,GAND;;AAQA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEa;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAElB,MAAhB;AAAwB,MAAA,QAAQ,EAAEsB,QAAlC;AAA4C,MAAA,WAAW,EAAEE;AAAzD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAxED;;GAAMzB,G;;KAAAA,G;AA0EN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Movies from \"./components/Movies\";\nimport SearchMovie from \"./components/Movie/SearchMovie\";\nimport GENRES from './resources/genres';\n\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  // const [appState, setAppState] = useState({ loading: false, genres: null });\n\n  // useEffect(() => {\n  //   setAppState({ loading: true });\n  //   const apiUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&id=14`;\n  //   fetch(apiUrl)\n  //     .then((res) => res.json())\n  //     .then((genres) => {\n  //       setAppState({ loading: false, genres: genres });\n  //     });\n  // }, [setAppState]);\n\n  const movieExists = (id) => {\n    return movies.some((movie) => {\n      return movie.id === id;\n    });\n  };\n\n  const getGenres = (genre_ids) => {\n    let genres_array = [];\n    genre_ids.map((id) => {\n      const result = GENRES.find( (genre) => genre.id === id );\n      // console.log(\"genre\",result);\n     genres_array.push(result.name);\n     return genres_array;\n    });\n  \n\n    console.log(genres_array.toString());\n        return genres_array.toString();\n  };\n\n  const addMovie = (movie) => {\n    // console.log(`movie from App`, movie.poster_path);\n\n    if (movieExists(movie.id)) {\n      console.log(`duplicate!`, movie);\n      return;\n    }\n\n    let genres = getGenres(movie.genre_ids);\n\n    let newMovie = {\n      ...movie,\n      genres: genres,\n      watched: false,\n    };\n\n    setMovies([...movies, newMovie]);\n  };\n\n  const delMovie = (id) => {\n    setMovies(movies.filter((movie) => movie.id !== id));\n  };\n\n  const markWatched = (id) => {\n    setMovies(\n      movies.map((movie) =>\n        movie.id === id ? { ...movie, watched: !movie.watched } : movie\n      )\n    );\n  };\n\n  return (\n    <div>\n      <SearchMovie onSelect={addMovie} />\n      {/* <MovieForm addMovie={addMovie} /> */}\n      <Movies movies={movies} delMovie={delMovie} markWatched={markWatched} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}