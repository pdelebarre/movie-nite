{"ast":null,"code":"////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2016 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\"use strict\";\n\nconst utils = require(\"./utils\"); // Prevent React Native packager from seeing modules required with this\n\n\nconst nodeRequire = require;\n\nfunction getRealmConstructor(environment) {\n  switch (environment) {\n    case \"node.js\":\n    case \"electron\":\n      var analytics = nodeRequire(\"./submit-analytics\");\n      analytics.submitProductionAnalytics(\"Run\").catch(() => {// fail silently -- the caller is not responsible for handling\n        // errors in analytics submission\n      });\n      return nodeRequire(\"bindings\")(\"realm.node\").Realm;\n\n    case \"reactnative\":\n      //switch how babel transpiled code creates children objects.\n      //Inheriting from Realm.Object with class syntax does not support using Reflect.construct the way babel transpiles it.\n      //Defining Reflect.construct.sham makes the transpiled code use different standard mechanism for inheriting. (Function.apply with setPrototypeOf)\n      if (typeof Reflect !== \"undefined\" && Reflect.construct) {\n        Reflect.construct.sham = 1;\n      }\n\n      return global.Realm;\n\n    case \"jscore\":\n      return global.Realm;\n\n    case \"chromedebugger\":\n    case \"vscodedebugger\":\n      // This condition is for stripping \"browser\" folder from production bundles.\n      if (global.__DEV__) {\n        return require(\"./browser\").default; // (exported as ES6 module)\n      } else {\n        throw new Error(\"Can´t use debugger if __DEV__ isn´t true.\");\n      }\n\n    default:\n      throw new Error(\"Unexpected execution environment (\" + environment + \")\");\n  }\n}\n\nconst environment = utils.getEnvironment();\nconst realmConstructor = getRealmConstructor(environment);\n\nrequire(\"./extensions\")(realmConstructor, environment);\n\nconst versions = utils.getVersions();\n\nrealmConstructor.App._setVersions(versions);\n\nmodule.exports = realmConstructor;","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/realm/lib/index.js"],"names":["utils","require","nodeRequire","getRealmConstructor","environment","analytics","submitProductionAnalytics","catch","Realm","Reflect","construct","sham","global","__DEV__","default","Error","getEnvironment","realmConstructor","versions","getVersions","App","_setVersions","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB,C,CAEA;;;AACA,MAAMC,WAAW,GAAGD,OAApB;;AAEA,SAASE,mBAAT,CAA6BC,WAA7B,EAA0C;AACtC,UAAOA,WAAP;AACI,SAAK,SAAL;AACA,SAAK,UAAL;AACI,UAAIC,SAAS,GAAGH,WAAW,CAAC,oBAAD,CAA3B;AACAG,MAAAA,SAAS,CAACC,yBAAV,CAAoC,KAApC,EACCC,KADD,CACO,MAAM,CACT;AACA;AACH,OAJD;AAMA,aAAOL,WAAW,CAAC,UAAD,CAAX,CAAwB,YAAxB,EAAsCM,KAA7C;;AACJ,SAAK,aAAL;AACI;AACA;AACA;AACA,UAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACC,SAA9C,EAAyD;AACrDD,QAAAA,OAAO,CAACC,SAAR,CAAkBC,IAAlB,GAAyB,CAAzB;AACH;;AACD,aAAOC,MAAM,CAACJ,KAAd;;AACJ,SAAK,QAAL;AACI,aAAOI,MAAM,CAACJ,KAAd;;AACJ,SAAK,gBAAL;AACA,SAAK,gBAAL;AACI;AACA,UAAII,MAAM,CAACC,OAAX,EAAoB;AAChB,eAAOZ,OAAO,CAAC,WAAD,CAAP,CAAqBa,OAA5B,CADgB,CACqB;AACxC,OAFD,MAEO;AACH,cAAM,IAAIC,KAAJ,CAAU,2CAAV,CAAN;AACH;;AACL;AACI,YAAM,IAAIA,KAAJ,CAAU,uCAAuCX,WAAvC,GAAqD,GAA/D,CAAN;AA9BR;AAgCH;;AAED,MAAMA,WAAW,GAAGJ,KAAK,CAACgB,cAAN,EAApB;AACA,MAAMC,gBAAgB,GAAGd,mBAAmB,CAACC,WAAD,CAA5C;;AAEAH,OAAO,CAAC,cAAD,CAAP,CAAwBgB,gBAAxB,EAA0Cb,WAA1C;;AAEA,MAAMc,QAAQ,GAAGlB,KAAK,CAACmB,WAAN,EAAjB;;AACAF,gBAAgB,CAACG,GAAjB,CAAqBC,YAArB,CAAkCH,QAAlC;;AAEAI,MAAM,CAACC,OAAP,GAAiBN,gBAAjB","sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2016 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n\"use strict\";\n\nconst utils = require(\"./utils\");\n\n// Prevent React Native packager from seeing modules required with this\nconst nodeRequire = require;\n\nfunction getRealmConstructor(environment) {\n    switch(environment) {\n        case \"node.js\":\n        case \"electron\":\n            var analytics = nodeRequire(\"./submit-analytics\");\n            analytics.submitProductionAnalytics(\"Run\")\n            .catch(() => {\n                // fail silently -- the caller is not responsible for handling\n                // errors in analytics submission\n            });\n\n            return nodeRequire(\"bindings\")(\"realm.node\").Realm;\n        case \"reactnative\":\n            //switch how babel transpiled code creates children objects.\n            //Inheriting from Realm.Object with class syntax does not support using Reflect.construct the way babel transpiles it.\n            //Defining Reflect.construct.sham makes the transpiled code use different standard mechanism for inheriting. (Function.apply with setPrototypeOf)\n            if (typeof Reflect !== \"undefined\" && Reflect.construct) {\n                Reflect.construct.sham = 1;\n            }\n            return global.Realm;\n        case \"jscore\":\n            return global.Realm;\n        case \"chromedebugger\":\n        case \"vscodedebugger\":\n            // This condition is for stripping \"browser\" folder from production bundles.\n            if (global.__DEV__) {\n                return require(\"./browser\").default; // (exported as ES6 module)\n            } else {\n                throw new Error(\"Can´t use debugger if __DEV__ isn´t true.\");\n            }\n        default:\n            throw new Error(\"Unexpected execution environment (\" + environment + \")\");\n    }\n}\n\nconst environment = utils.getEnvironment();\nconst realmConstructor = getRealmConstructor(environment);\n\nrequire(\"./extensions\")(realmConstructor, environment);\n\nconst versions = utils.getVersions();\nrealmConstructor.App._setVersions(versions);\n\nmodule.exports = realmConstructor;\n"]},"metadata":{},"sourceType":"script"}