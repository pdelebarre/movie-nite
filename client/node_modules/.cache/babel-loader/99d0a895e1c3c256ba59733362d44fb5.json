{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _inherits from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _defineProperty from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _propertiesBluePrint;\n\nimport fetch from 'cross-fetch';\nimport deepEqual from 'fast-deep-equal';\nimport easyqb from 'EasyQB';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar POST_TYPES;\n\n(function (POST_TYPES) {\n  POST_TYPES[\"UPLOAD_ATTACHMENT\"] = \"upload_attachment\";\n  POST_TYPES[\"HANDSHAKE\"] = \"handshake\";\n  POST_TYPES[\"VALID_TOKEN\"] = \"valid_token\";\n  POST_TYPES[\"GET_FRAME\"] = \"get_frame\";\n  POST_TYPES[\"TABLE_SIZE\"] = \"table_size\";\n  POST_TYPES[\"COLUMN_TYPES\"] = \"column_types\";\n  POST_TYPES[\"SYNC_STACK\"] = \"sync_stack\";\n  POST_TYPES[\"SYNC_DELETE\"] = \"sync_delete\";\n  POST_TYPES[\"SYNC_INSERT\"] = \"sync_insert\";\n  POST_TYPES[\"GET_QUERY\"] = \"get_query\";\n  POST_TYPES[\"USER_ATTRIBUTES\"] = \"user_attributes\";\n  POST_TYPES[\"SET_ATTRIBUTE\"] = \"set_attribute\";\n  POST_TYPES[\"SIGN_UP\"] = \"sign_up\";\n  POST_TYPES[\"REQUEST_TOKEN\"] = \"request_token\";\n  POST_TYPES[\"EASY_QB\"] = \"easyqb\";\n  POST_TYPES[\"RESET_PASSWORD\"] = \"reset_password\";\n})(POST_TYPES || (POST_TYPES = {}));\n\nvar DB_STATUS;\n\n(function (DB_STATUS) {\n  DB_STATUS[\"ERROR\"] = \"error\";\n  DB_STATUS[\"PENDING\"] = \"pending\";\n  DB_STATUS[\"SUCCESS\"] = \"success\";\n})(DB_STATUS || (DB_STATUS = {}));\n\nvar EXECUTE_COUNT;\n\n(function (EXECUTE_COUNT) {\n  EXECUTE_COUNT[\"ALL\"] = \"all\";\n  EXECUTE_COUNT[\"ONE\"] = \"one\";\n})(EXECUTE_COUNT || (EXECUTE_COUNT = {}));\n\nvar GlobalNamespace;\n\n(function (GlobalNamespace) {})(GlobalNamespace || (GlobalNamespace = {}));\n\nvar _g = _extends({}, GlobalNamespace);\n\nfunction gFactory() {\n  return _extends({}, GlobalNamespace);\n}\n\nvar INSERT = 'insert',\n    UPDATE = 'update',\n    DELETE = 'delete',\n    REVERSE = 'reverse',\n    SHUFFLE = 'shuffle',\n    oMetaKey = Symbol('observable-meta-key'),\n    validObservableOptionKeys = {\n  async: 1\n},\n    validObserverOptionKeys = {\n  path: 1,\n  pathsOf: 1,\n  pathsFrom: 1\n},\n    processObserveOptions = function processObserveOptions(options) {\n  var result = {};\n\n  if (options.path !== undefined) {\n    if (typeof options.path !== 'string' || options.path === '') {\n      throw new Error('\"path\" option, if/when provided, MUST be a non-empty string');\n    }\n\n    result.path = options.path;\n  }\n\n  if (options.pathsOf !== undefined) {\n    if (options.path) {\n      throw new Error('\"pathsOf\" option MAY NOT be specified together with \"path\" option');\n    }\n\n    if (typeof options.pathsOf !== 'string') {\n      throw new Error('\"pathsOf\" option, if/when provided, MUST be a string (MAY be empty)');\n    }\n\n    result.pathsOf = options.pathsOf.split('.').filter(function (n) {\n      return n;\n    });\n  }\n\n  if (options.pathsFrom !== undefined) {\n    if (options.path || options.pathsOf) {\n      throw new Error('\"pathsFrom\" option MAY NOT be specified together with \"path\"/\"pathsOf\"  option/s');\n    }\n\n    if (typeof options.pathsFrom !== 'string' || options.pathsFrom === '') {\n      throw new Error('\"pathsFrom\" option, if/when provided, MUST be a non-empty string');\n    }\n\n    result.pathsFrom = options.pathsFrom;\n  }\n\n  var invalidOptions = Object.keys(options).filter(function (option) {\n    return !validObserverOptionKeys.hasOwnProperty(option);\n  });\n\n  if (invalidOptions.length) {\n    throw new Error(\"'\".concat(invalidOptions.join(', '), \"' is/are not a valid observer option/s\"));\n  }\n\n  return result;\n},\n    observe = function observe(observer, options) {\n  if (typeof observer !== 'function') {\n    throw new Error(\"observer MUST be a function, got '\".concat(observer, \"'\"));\n  }\n\n  var oMeta = this[oMetaKey],\n      observers = oMeta.observers;\n\n  if (!observers.some(function (o) {\n    return o[0] === observer;\n  })) {\n    var opts;\n\n    if (options) {\n      opts = processObserveOptions(options);\n    } else {\n      opts = {};\n    }\n\n    observers.push([observer, opts]);\n  } else {\n    console.warn('observer may be bound to an observable only once; will NOT rebind');\n  }\n},\n    unobserve = function unobserve() {\n  var oMeta = this[oMetaKey];\n  var observers = oMeta.observers;\n  var ol = observers.length;\n\n  if (ol) {\n    var al = arguments.length;\n\n    if (al) {\n      while (al--) {\n        var i = ol;\n\n        while (i--) {\n          if (observers[i][0] === arguments[al]) {\n            observers.splice(i, 1);\n            ol--;\n          }\n        }\n      }\n    } else {\n      observers.splice(0);\n    }\n  }\n},\n    propertiesBluePrint = (_propertiesBluePrint = {}, _defineProperty(_propertiesBluePrint, oMetaKey, {\n  value: null\n}), _defineProperty(_propertiesBluePrint, \"observe\", {\n  value: observe\n}), _defineProperty(_propertiesBluePrint, \"unobserve\", {\n  value: unobserve\n}), _propertiesBluePrint),\n    prepareObject = function prepareObject(source, oMeta) {\n  propertiesBluePrint[oMetaKey].value = oMeta;\n  var target = Object.defineProperties({}, propertiesBluePrint);\n\n  for (var _i4 = 0, _Object$keys = Object.keys(source); _i4 < _Object$keys.length; _i4++) {\n    var key = _Object$keys[_i4];\n    target[key] = getObservedOf(source[key], key, oMeta);\n  }\n\n  return target;\n},\n    prepareArray = function prepareArray(source, oMeta) {\n  var i = 0,\n      l = source.length;\n  propertiesBluePrint[oMetaKey].value = oMeta;\n  var target = Object.defineProperties(new Array(l), propertiesBluePrint);\n\n  for (; i < l; i++) {\n    target[i] = getObservedOf(source[i], i, oMeta);\n  }\n\n  return target;\n},\n    prepareTypedArray = function prepareTypedArray(source, oMeta) {\n  propertiesBluePrint[oMetaKey].value = oMeta;\n  Object.defineProperties(source, propertiesBluePrint);\n  return source;\n},\n    filterChanges = function filterChanges(options, changes) {\n  var result = changes;\n\n  if (options.path) {\n    var oPath = options.path;\n    result = changes.filter(function (change) {\n      return change.path.join('.') === oPath;\n    });\n  } else if (options.pathsOf) {\n    var oPathsOf = options.pathsOf;\n    result = changes.filter(function (change) {\n      return change.path.length === oPathsOf.length + 1 || change.path.length === oPathsOf.length && (change.type === REVERSE || change.type === SHUFFLE);\n    });\n  } else if (options.pathsFrom) {\n    var oPathsFrom = options.pathsFrom;\n    result = changes.filter(function (change) {\n      return change.path.join('.').startsWith(oPathsFrom);\n    });\n  }\n\n  return result;\n},\n    callObserverSafe = function callObserverSafe(listener, changes) {\n  try {\n    listener(changes);\n  } catch (e) {\n    console.error(\"failed to notify listener \".concat(listener, \" with \").concat(changes), e);\n  }\n},\n    callObserversFromMT = function callObserversFromMT() {\n  var batches = this.batches;\n  this.batches = null;\n\n  var _iterator = _createForOfIteratorHelper(batches),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          listener = _step$value[0],\n          options = _step$value[1];\n\n      callObserverSafe(listener, options);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n},\n    callObservers = function callObservers(oMeta, changes) {\n  var currentObservable = oMeta;\n  var observers, target, options, relevantChanges, i, newPath, tmp;\n  var l = changes.length;\n\n  do {\n    observers = currentObservable.observers;\n    i = observers.length;\n\n    while (i--) {\n      var _observers$i = _slicedToArray(observers[i], 2);\n\n      target = _observers$i[0];\n      options = _observers$i[1];\n      relevantChanges = filterChanges(options, changes);\n\n      if (relevantChanges.length) {\n        if (currentObservable.options.async) {\n          //\tthis is the async dispatch handling\n          if (!currentObservable.batches) {\n            currentObservable.batches = [];\n            queueMicrotask(callObserversFromMT.bind(currentObservable));\n          }\n\n          var rb = currentObservable.batches.find(function (b) {\n            return b[0] === target;\n          });\n\n          if (!rb) {\n            rb = [target, []];\n            currentObservable.batches.push(rb);\n          }\n\n          Array.prototype.push.apply(rb[1], relevantChanges);\n        } else {\n          //\tthis is the naive straight forward synchronous dispatch\n          callObserverSafe(target, relevantChanges);\n        }\n      }\n    }\n\n    var tmpa = void 0;\n\n    if (currentObservable.parent) {\n      tmpa = new Array(l);\n\n      for (var _i = 0; _i < l; _i++) {\n        tmp = changes[_i];\n        newPath = [currentObservable.ownKey].concat(_toConsumableArray(tmp.path));\n        tmpa[_i] = {\n          type: tmp.type,\n          path: newPath,\n          value: tmp.value,\n          oldValue: tmp.oldValue,\n          object: tmp.object\n        };\n      }\n\n      changes = tmpa;\n      currentObservable = currentObservable.parent;\n    } else {\n      currentObservable = null;\n    }\n  } while (currentObservable);\n},\n    getObservedOf = function getObservedOf(item, key, parent) {\n  if (!item || typeof item !== 'object') {\n    return item;\n  } else if (Array.isArray(item)) {\n    return new ArrayOMeta({\n      target: item,\n      ownKey: key,\n      parent: parent\n    }).proxy;\n  } else if (ArrayBuffer.isView(item)) {\n    return new TypedArrayOMeta({\n      target: item,\n      ownKey: key,\n      parent: parent\n    }).proxy;\n  } else if (item instanceof Date || item instanceof Error) {\n    return item;\n  } else {\n    return new ObjectOMeta({\n      target: item,\n      ownKey: key,\n      parent: parent\n    }).proxy;\n  }\n},\n    proxiedPop = function proxiedPop() {\n  var oMeta = this[oMetaKey],\n      target = oMeta.target,\n      poppedIndex = target.length - 1;\n  var popResult = target.pop();\n\n  if (popResult && typeof popResult === 'object') {\n    var tmpObserved = popResult[oMetaKey];\n\n    if (tmpObserved) {\n      popResult = tmpObserved.detach();\n    }\n  }\n\n  var changes = [{\n    type: DELETE,\n    path: [poppedIndex],\n    oldValue: popResult,\n    object: this\n  }];\n  callObservers(oMeta, changes);\n  return popResult;\n},\n    proxiedPush = function proxiedPush() {\n  var oMeta = this[oMetaKey],\n      target = oMeta.target,\n      l = arguments.length,\n      pushContent = new Array(l),\n      initialLength = target.length;\n\n  for (var i = 0; i < l; i++) {\n    pushContent[i] = getObservedOf(arguments[i], initialLength + i, oMeta);\n  }\n\n  var pushResult = Reflect.apply(target.push, target, pushContent);\n  var changes = [];\n\n  for (var _i5 = initialLength, _l = target.length; _i5 < _l; _i5++) {\n    changes[_i5 - initialLength] = {\n      type: INSERT,\n      path: [_i5],\n      value: target[_i5],\n      object: this\n    };\n  }\n\n  callObservers(oMeta, changes);\n  return pushResult;\n},\n    proxiedShift = function proxiedShift() {\n  var oMeta = this[oMetaKey],\n      target = oMeta.target;\n  var shiftResult, i, l, item, tmpObserved;\n  shiftResult = target.shift();\n\n  if (shiftResult && typeof shiftResult === 'object') {\n    tmpObserved = shiftResult[oMetaKey];\n\n    if (tmpObserved) {\n      shiftResult = tmpObserved.detach();\n    }\n  } //\tupdate indices of the remaining items\n\n\n  for (i = 0, l = target.length; i < l; i++) {\n    item = target[i];\n\n    if (item && typeof item === 'object') {\n      tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = i;\n      }\n    }\n  }\n\n  var changes = [{\n    type: DELETE,\n    path: [0],\n    oldValue: shiftResult,\n    object: this\n  }];\n  callObservers(oMeta, changes);\n  return shiftResult;\n},\n    proxiedUnshift = function proxiedUnshift() {\n  var oMeta = this[oMetaKey],\n      target = oMeta.target,\n      al = arguments.length,\n      unshiftContent = new Array(al);\n\n  for (var i = 0; i < al; i++) {\n    unshiftContent[i] = getObservedOf(arguments[i], i, oMeta);\n  }\n\n  var unshiftResult = Reflect.apply(target.unshift, target, unshiftContent);\n\n  for (var _i6 = 0, _l2 = target.length, item; _i6 < _l2; _i6++) {\n    item = target[_i6];\n\n    if (item && typeof item === 'object') {\n      var tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = _i6;\n      }\n    }\n  } //\tpublish changes\n\n\n  var l = unshiftContent.length;\n  var changes = new Array(l);\n\n  for (var _i7 = 0; _i7 < l; _i7++) {\n    changes[_i7] = {\n      type: INSERT,\n      path: [_i7],\n      value: target[_i7],\n      object: this\n    };\n  }\n\n  callObservers(oMeta, changes);\n  return unshiftResult;\n},\n    proxiedReverse = function proxiedReverse() {\n  var oMeta = this[oMetaKey],\n      target = oMeta.target;\n  var i, l, item;\n  target.reverse();\n\n  for (i = 0, l = target.length; i < l; i++) {\n    item = target[i];\n\n    if (item && typeof item === 'object') {\n      var tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = i;\n      }\n    }\n  }\n\n  var changes = [{\n    type: REVERSE,\n    path: [],\n    object: this\n  }];\n  callObservers(oMeta, changes);\n  return this;\n},\n    proxiedSort = function proxiedSort(comparator) {\n  var oMeta = this[oMetaKey],\n      target = oMeta.target;\n  var i, l, item;\n  target.sort(comparator);\n\n  for (i = 0, l = target.length; i < l; i++) {\n    item = target[i];\n\n    if (item && typeof item === 'object') {\n      var tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = i;\n      }\n    }\n  }\n\n  var changes = [{\n    type: SHUFFLE,\n    path: [],\n    object: this\n  }];\n  callObservers(oMeta, changes);\n  return this;\n},\n    proxiedFill = function proxiedFill(filVal, start, end) {\n  var oMeta = this[oMetaKey],\n      target = oMeta.target,\n      changes = [],\n      tarLen = target.length,\n      prev = target.slice(0);\n  start = start === undefined ? 0 : start < 0 ? Math.max(tarLen + start, 0) : Math.min(start, tarLen);\n  end = end === undefined ? tarLen : end < 0 ? Math.max(tarLen + end, 0) : Math.min(end, tarLen);\n\n  if (start < tarLen && end > start) {\n    target.fill(filVal, start, end);\n    var tmpObserved;\n\n    for (var i = start, item, tmpTarget; i < end; i++) {\n      item = target[i];\n      target[i] = getObservedOf(item, i, oMeta);\n\n      if (prev.hasOwnProperty(i)) {\n        tmpTarget = prev[i];\n\n        if (tmpTarget && typeof tmpTarget === 'object') {\n          tmpObserved = tmpTarget[oMetaKey];\n\n          if (tmpObserved) {\n            tmpTarget = tmpObserved.detach();\n          }\n        }\n\n        changes.push({\n          type: UPDATE,\n          path: [i],\n          value: target[i],\n          oldValue: tmpTarget,\n          object: this\n        });\n      } else {\n        changes.push({\n          type: INSERT,\n          path: [i],\n          value: target[i],\n          object: this\n        });\n      }\n    }\n\n    callObservers(oMeta, changes);\n  }\n\n  return this;\n},\n    proxiedCopyWithin = function proxiedCopyWithin(dest, start, end) {\n  var oMeta = this[oMetaKey],\n      target = oMeta.target,\n      tarLen = target.length;\n  dest = dest < 0 ? Math.max(tarLen + dest, 0) : dest;\n  start = start === undefined ? 0 : start < 0 ? Math.max(tarLen + start, 0) : Math.min(start, tarLen);\n  end = end === undefined ? tarLen : end < 0 ? Math.max(tarLen + end, 0) : Math.min(end, tarLen);\n  var len = Math.min(end - start, tarLen - dest);\n\n  if (dest < tarLen && dest !== start && len > 0) {\n    var prev = target.slice(0),\n        changes = [];\n    target.copyWithin(dest, start, end);\n\n    for (var i = dest, nItem, oItem, tmpObserved; i < dest + len; i++) {\n      //\tupdate newly placed observables, if any\n      nItem = target[i];\n\n      if (nItem && typeof nItem === 'object') {\n        nItem = getObservedOf(nItem, i, oMeta);\n        target[i] = nItem;\n      } //\tdetach overridden observables, if any\n\n\n      oItem = prev[i];\n\n      if (oItem && typeof oItem === 'object') {\n        tmpObserved = oItem[oMetaKey];\n\n        if (tmpObserved) {\n          oItem = tmpObserved.detach();\n        }\n      }\n\n      if (typeof nItem !== 'object' && nItem === oItem) {\n        continue;\n      }\n\n      changes.push({\n        type: UPDATE,\n        path: [i],\n        value: nItem,\n        oldValue: oItem,\n        object: this\n      });\n    }\n\n    callObservers(oMeta, changes);\n  }\n\n  return this;\n},\n    proxiedSplice = function proxiedSplice() {\n  var oMeta = this[oMetaKey],\n      target = oMeta.target,\n      splLen = arguments.length,\n      spliceContent = new Array(splLen),\n      tarLen = target.length; //\tobservify the newcomers\n\n  for (var _i2 = 0; _i2 < splLen; _i2++) {\n    spliceContent[_i2] = getObservedOf(arguments[_i2], _i2, oMeta);\n  } //\tcalculate pointers\n\n\n  var startIndex = splLen === 0 ? 0 : spliceContent[0] < 0 ? tarLen + spliceContent[0] : spliceContent[0],\n      removed = splLen < 2 ? tarLen - startIndex : spliceContent[1],\n      inserted = Math.max(splLen - 2, 0),\n      spliceResult = Reflect.apply(target.splice, target, spliceContent),\n      newTarLen = target.length; //\treindex the paths\n\n  var tmpObserved;\n\n  for (var _i3 = 0, _item; _i3 < newTarLen; _i3++) {\n    _item = target[_i3];\n\n    if (_item && typeof _item === 'object') {\n      tmpObserved = _item[oMetaKey];\n\n      if (tmpObserved) {\n        tmpObserved.ownKey = _i3;\n      }\n    }\n  } //\tdetach removed objects\n\n\n  var i, l, item;\n\n  for (i = 0, l = spliceResult.length; i < l; i++) {\n    item = spliceResult[i];\n\n    if (item && typeof item === 'object') {\n      tmpObserved = item[oMetaKey];\n\n      if (tmpObserved) {\n        spliceResult[i] = tmpObserved.detach();\n      }\n    }\n  }\n\n  var changes = [];\n  var index;\n\n  for (index = 0; index < removed; index++) {\n    if (index < inserted) {\n      changes.push({\n        type: UPDATE,\n        path: [startIndex + index],\n        value: target[startIndex + index],\n        oldValue: spliceResult[index],\n        object: this\n      });\n    } else {\n      changes.push({\n        type: DELETE,\n        path: [startIndex + index],\n        oldValue: spliceResult[index],\n        object: this\n      });\n    }\n  }\n\n  for (; index < inserted; index++) {\n    changes.push({\n      type: INSERT,\n      path: [startIndex + index],\n      value: target[startIndex + index],\n      object: this\n    });\n  }\n\n  callObservers(oMeta, changes);\n  return spliceResult;\n},\n    proxiedTypedArraySet = function proxiedTypedArraySet(source, offset) {\n  var oMeta = this[oMetaKey],\n      target = oMeta.target,\n      souLen = source.length,\n      prev = target.slice(0);\n  offset = offset || 0;\n  target.set(source, offset);\n  var changes = new Array(souLen);\n\n  for (var i = offset; i < souLen + offset; i++) {\n    changes[i - offset] = {\n      type: UPDATE,\n      path: [i],\n      value: target[i],\n      oldValue: prev[i],\n      object: this\n    };\n  }\n\n  callObservers(oMeta, changes);\n},\n    proxiedArrayMethods = {\n  pop: proxiedPop,\n  push: proxiedPush,\n  shift: proxiedShift,\n  unshift: proxiedUnshift,\n  reverse: proxiedReverse,\n  sort: proxiedSort,\n  fill: proxiedFill,\n  copyWithin: proxiedCopyWithin,\n  splice: proxiedSplice\n},\n    proxiedTypedArrayMethods = {\n  reverse: proxiedReverse,\n  sort: proxiedSort,\n  fill: proxiedFill,\n  copyWithin: proxiedCopyWithin,\n  set: proxiedTypedArraySet\n};\n\nvar OMetaBase = /*#__PURE__*/function () {\n  function OMetaBase(properties, cloningFunction) {\n    _classCallCheck(this, OMetaBase);\n\n    var target = properties.target,\n        parent = properties.parent,\n        ownKey = properties.ownKey;\n\n    if (parent && ownKey !== undefined) {\n      this.parent = parent;\n      this.ownKey = ownKey;\n    } else {\n      this.parent = null;\n      this.ownKey = null;\n    }\n\n    var targetClone = cloningFunction(target, this);\n    this.observers = [];\n    this.revocable = Proxy.revocable(targetClone, this);\n    this.proxy = this.revocable.proxy;\n    this.target = targetClone;\n    this.options = this.processOptions(properties.options);\n  }\n\n  _createClass(OMetaBase, [{\n    key: \"processOptions\",\n    value: function processOptions(options) {\n      if (options) {\n        if (typeof options !== 'object') {\n          throw new Error(\"Observable options if/when provided, MAY only be an object, got '\".concat(options, \"'\"));\n        }\n\n        var invalidOptions = Object.keys(options).filter(function (option) {\n          return !validObservableOptionKeys.hasOwnProperty(option);\n        });\n\n        if (invalidOptions.length) {\n          throw new Error(\"'\".concat(invalidOptions.join(', '), \"' is/are not a valid Observable option/s\"));\n        }\n\n        return Object.assign({}, options);\n      } else {\n        return {};\n      }\n    }\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      this.parent = null;\n      return this.target;\n    }\n  }, {\n    key: \"set\",\n    value: function set(target, key, value) {\n      var oldValue = target[key];\n\n      if (value !== oldValue) {\n        var newValue = getObservedOf(value, key, this);\n        target[key] = newValue;\n\n        if (oldValue && typeof oldValue === 'object') {\n          var tmpObserved = oldValue[oMetaKey];\n\n          if (tmpObserved) {\n            oldValue = tmpObserved.detach();\n          }\n        }\n\n        var changes = oldValue === undefined ? [{\n          type: INSERT,\n          path: [key],\n          value: newValue,\n          object: this.proxy\n        }] : [{\n          type: UPDATE,\n          path: [key],\n          value: newValue,\n          oldValue: oldValue,\n          object: this.proxy\n        }];\n        callObservers(this, changes);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"deleteProperty\",\n    value: function deleteProperty(target, key) {\n      var oldValue = target[key];\n      delete target[key];\n\n      if (oldValue && typeof oldValue === 'object') {\n        var tmpObserved = oldValue[oMetaKey];\n\n        if (tmpObserved) {\n          oldValue = tmpObserved.detach();\n        }\n      }\n\n      var changes = [{\n        type: DELETE,\n        path: [key],\n        oldValue: oldValue,\n        object: this.proxy\n      }];\n      callObservers(this, changes);\n      return true;\n    }\n  }]);\n\n  return OMetaBase;\n}();\n\nvar ObjectOMeta = /*#__PURE__*/function (_OMetaBase) {\n  _inherits(ObjectOMeta, _OMetaBase);\n\n  var _super = _createSuper(ObjectOMeta);\n\n  function ObjectOMeta(properties) {\n    _classCallCheck(this, ObjectOMeta);\n\n    return _super.call(this, properties, prepareObject);\n  }\n\n  return ObjectOMeta;\n}(OMetaBase);\n\nvar ArrayOMeta = /*#__PURE__*/function (_OMetaBase2) {\n  _inherits(ArrayOMeta, _OMetaBase2);\n\n  var _super2 = _createSuper(ArrayOMeta);\n\n  function ArrayOMeta(properties) {\n    _classCallCheck(this, ArrayOMeta);\n\n    return _super2.call(this, properties, prepareArray);\n  }\n\n  _createClass(ArrayOMeta, [{\n    key: \"get\",\n    value: function get(target, key) {\n      if (proxiedArrayMethods.hasOwnProperty(key)) {\n        return proxiedArrayMethods[key];\n      } else {\n        return target[key];\n      }\n    }\n  }]);\n\n  return ArrayOMeta;\n}(OMetaBase);\n\nvar TypedArrayOMeta = /*#__PURE__*/function (_OMetaBase3) {\n  _inherits(TypedArrayOMeta, _OMetaBase3);\n\n  var _super3 = _createSuper(TypedArrayOMeta);\n\n  function TypedArrayOMeta(properties) {\n    _classCallCheck(this, TypedArrayOMeta);\n\n    return _super3.call(this, properties, prepareTypedArray);\n  }\n\n  _createClass(TypedArrayOMeta, [{\n    key: \"get\",\n    value: function get(target, key) {\n      if (proxiedTypedArrayMethods.hasOwnProperty(key)) {\n        return proxiedTypedArrayMethods[key];\n      } else {\n        return target[key];\n      }\n    }\n  }]);\n\n  return TypedArrayOMeta;\n}(OMetaBase);\n\nvar Observable = /*#__PURE__*/function () {\n  function Observable() {\n    _classCallCheck(this, Observable);\n\n    throw new Error('Observable MAY NOT be created via constructor, see \"Observable.from\" API');\n  }\n\n  _createClass(Observable, null, [{\n    key: \"from\",\n    value: function from(target, options) {\n      if (!target || typeof target !== 'object') {\n        throw new Error('observable MAY ONLY be created from a non-null object');\n      } else if (target[oMetaKey]) {\n        return target;\n      } else if (Array.isArray(target)) {\n        return new ArrayOMeta({\n          target: target,\n          ownKey: null,\n          parent: null,\n          options: options\n        }).proxy;\n      } else if (ArrayBuffer.isView(target)) {\n        return new TypedArrayOMeta({\n          target: target,\n          ownKey: null,\n          parent: null,\n          options: options\n        }).proxy;\n      } else if (target instanceof Date || target instanceof Error) {\n        throw new Error(\"\".concat(target, \" found to be one of a on-observable types\"));\n      } else {\n        return new ObjectOMeta({\n          target: target,\n          ownKey: null,\n          parent: null,\n          options: options\n        }).proxy;\n      }\n    }\n  }, {\n    key: \"isObservable\",\n    value: function isObservable(input) {\n      return !!(input && input[oMetaKey]);\n    }\n  }]);\n\n  return Observable;\n}();\n\nObject.freeze(Observable);\nvar imageExtensions = [\"ase\", \"art\", \"bmp\", \"blp\", \"cd5\", \"cit\", \"cpt\", \"cr2\", \"cut\", \"dds\", \"dib\", \"djvu\", \"egt\", \"exif\", \"gif\", \"gpl\", \"grf\", \"icns\", \"ico\", \"iff\", \"jng\", \"jpeg\", \"jpg\", \"jfif\", \"jp2\", \"jps\", \"lbm\", \"max\", \"miff\", \"mng\", \"msp\", \"nitf\", \"ota\", \"pbm\", \"pc1\", \"pc2\", \"pc3\", \"pcf\", \"pcx\", \"pdn\", \"pgm\", \"PI1\", \"PI2\", \"PI3\", \"pict\", \"pct\", \"pnm\", \"pns\", \"ppm\", \"psb\", \"psd\", \"pdd\", \"psp\", \"px\", \"pxm\", \"pxr\", \"qfx\", \"raw\", \"rle\", \"sct\", \"sgi\", \"rgb\", \"int\", \"bw\", \"tga\", \"tiff\", \"tif\", \"vtf\", \"xbm\", \"xcf\", \"xpm\", \"3dv\", \"amf\", \"ai\", \"awg\", \"cgm\", \"cdr\", \"cmx\", \"dxf\", \"e2d\", \"egt\", \"eps\", \"fs\", \"gbr\", \"odg\", \"svg\", \"stl\", \"vrml\", \"x3d\", \"sxd\", \"v2d\", \"vnd\", \"wmf\", \"emf\", \"art\", \"xar\", \"png\", \"webp\", \"jxr\", \"hdp\", \"wdp\", \"cur\", \"ecw\", \"iff\", \"lbm\", \"liff\", \"nrrd\", \"pam\", \"pcx\", \"pgf\", \"sgi\", \"rgb\", \"rgba\", \"bw\", \"int\", \"inta\", \"sid\", \"ras\", \"sun\", \"tga\"];\nvar videoExtensions = [\"3g2\", \"3gp\", \"aaf\", \"asf\", \"avchd\", \"avi\", \"drc\", \"flv\", \"m2v\", \"m4p\", \"m4v\", \"mkv\", \"mng\", \"mov\", \"mp2\", \"mp4\", \"mpe\", \"mpeg\", \"mpg\", \"mpv\", \"mxf\", \"nsv\", \"ogg\", \"ogv\", \"qt\", \"rm\", \"rmvb\", \"roq\", \"svi\", \"vob\", \"webm\", \"wmv\", \"yuv\"];\n\nfunction utilsFactory(globals) {\n  var g = globals || _g;\n\n  var generateBareUrl = function generateBareUrl(type, integrationID) {\n    return \"https://api.easybase.io/\".concat(type, \"/\").concat(integrationID);\n  };\n\n  var generateAuthBody = function generateAuthBody() {\n    var stamp = Date.now();\n    return {\n      token: g.token,\n      token_time: ~~(g.session / (stamp % 64)),\n      now: stamp\n    };\n  };\n\n  function log() {\n    if (g.options.logging) {\n      var _console;\n\n      for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n        params[_key] = arguments[_key];\n      }\n\n      (_console = console).log.apply(_console, [\"EASYBASE — \"].concat(params));\n    }\n  }\n\n  return {\n    generateAuthBody: generateAuthBody,\n    generateBareUrl: generateBareUrl,\n    log: log\n  };\n}\n\nfunction authFactory(globals) {\n  var g = globals || _g;\n\n  var _utilsFactory = utilsFactory(g),\n      generateBareUrl = _utilsFactory.generateBareUrl,\n      generateAuthBody = _utilsFactory.generateAuthBody,\n      log = _utilsFactory.log;\n\n  var getUserAttributes = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var attrsRes;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return tokenPost(POST_TYPES.USER_ATTRIBUTES);\n\n            case 3:\n              attrsRes = _context.sent;\n              return _context.abrupt(\"return\", attrsRes.data);\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function getUserAttributes() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var setUserAttribute = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(key, value) {\n      var setAttrsRes;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return tokenPost(POST_TYPES.SET_ATTRIBUTE, {\n                key: key,\n                value: value\n              });\n\n            case 3:\n              setAttrsRes = _context2.sent;\n              return _context2.abrupt(\"return\", {\n                success: setAttrsRes.success,\n                message: JSON.stringify(setAttrsRes.data)\n              });\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", {\n                success: false,\n                message: \"Error\",\n                error: _context2.t0\n              });\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function setUserAttribute(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var signUp = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(newUserID, password, userAttributes) {\n      var signUpRes;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return tokenPost(POST_TYPES.SIGN_UP, {\n                newUserID: newUserID,\n                password: password,\n                userAttributes: userAttributes\n              });\n\n            case 3:\n              signUpRes = _context3.sent;\n              return _context3.abrupt(\"return\", {\n                success: signUpRes.success,\n                message: signUpRes.data\n              });\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              return _context3.abrupt(\"return\", {\n                success: false,\n                message: \"Error\",\n                error: _context3.t0\n              });\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function signUp(_x3, _x4, _x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var signIn = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(userID, password) {\n      var t1, integrationType, res, resData, validTokenRes, elapsed;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              t1 = Date.now();\n              g.session = Math.floor(100000000 + Math.random() * 900000000);\n              integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n              _context4.prev = 3;\n              _context4.next = 6;\n              return fetch(generateBareUrl(integrationType, g.integrationID), {\n                method: \"POST\",\n                headers: {\n                  'Eb-Post-Req': POST_TYPES.HANDSHAKE,\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  version: g.ebconfig.version,\n                  session: g.session,\n                  instance: g.instance,\n                  userID: userID,\n                  password: password\n                })\n              });\n\n            case 6:\n              res = _context4.sent;\n              _context4.next = 9;\n              return res.json();\n\n            case 9:\n              resData = _context4.sent;\n\n              if (!resData.token) {\n                _context4.next = 27;\n                break;\n              }\n\n              g.token = resData.token;\n              g.refreshToken = resData.refreshToken;\n              g.newTokenCallback();\n              g.mounted = true;\n              _context4.next = 17;\n              return tokenPost(POST_TYPES.VALID_TOKEN);\n\n            case 17:\n              validTokenRes = _context4.sent;\n              elapsed = Date.now() - t1;\n\n              if (!validTokenRes.success) {\n                _context4.next = 24;\n                break;\n              }\n\n              log(\"Valid auth initiation in \" + elapsed + \"ms\");\n              return _context4.abrupt(\"return\", {\n                success: true,\n                message: \"Successfully signed in user\"\n              });\n\n            case 24:\n              return _context4.abrupt(\"return\", {\n                success: false,\n                message: \"Could not sign in user\"\n              });\n\n            case 25:\n              _context4.next = 28;\n              break;\n\n            case 27:\n              return _context4.abrupt(\"return\", {\n                success: false,\n                message: \"Could not sign in user\"\n              });\n\n            case 28:\n              _context4.next = 34;\n              break;\n\n            case 30:\n              _context4.prev = 30;\n              _context4.t0 = _context4[\"catch\"](3);\n              console.error(_context4.t0);\n              return _context4.abrupt(\"return\", {\n                success: false,\n                message: _context4.t0,\n                error: _context4.t0\n              });\n\n            case 34:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[3, 30]]);\n    }));\n\n    return function signIn(_x6, _x7) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var resetUserPassword = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(newPassword) {\n      var setAttrsRes;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(typeof newPassword !== \"string\" || newPassword.length < 100)) {\n                _context5.next = 2;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", {\n                success: false,\n                message: \"newPassword must be of type string\"\n              });\n\n            case 2:\n              _context5.prev = 2;\n              _context5.next = 5;\n              return tokenPost(POST_TYPES.RESET_PASSWORD, {\n                newPassword: newPassword\n              });\n\n            case 5:\n              setAttrsRes = _context5.sent;\n              return _context5.abrupt(\"return\", {\n                success: setAttrsRes.success,\n                message: JSON.stringify(setAttrsRes.data)\n              });\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](2);\n              return _context5.abrupt(\"return\", {\n                success: false,\n                message: \"Error\",\n                error: _context5.t0\n              });\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[2, 9]]);\n    }));\n\n    return function resetUserPassword(_x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var isUserSignedIn = function isUserSignedIn() {\n    return g.token.length > 0;\n  };\n\n  var signOut = function signOut() {\n    g.token = \"\";\n    g.newTokenCallback();\n  };\n\n  var initAuth = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var t1, integrationType, res, resData, validTokenRes, elapsed;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              t1 = Date.now();\n              g.session = Math.floor(100000000 + Math.random() * 900000000);\n              log(\"Handshaking on\".concat(g.instance, \" instance\"));\n              integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n              _context6.prev = 4;\n              _context6.next = 7;\n              return fetch(generateBareUrl(integrationType, g.integrationID), {\n                method: \"POST\",\n                headers: {\n                  'Eb-Post-Req': POST_TYPES.HANDSHAKE,\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  version: g.ebconfig.version,\n                  tt: g.ebconfig.tt,\n                  session: g.session,\n                  instance: g.instance\n                })\n              });\n\n            case 7:\n              res = _context6.sent;\n              _context6.next = 10;\n              return res.json();\n\n            case 10:\n              resData = _context6.sent;\n\n              if (!resData.token) {\n                _context6.next = 26;\n                break;\n              }\n\n              g.token = resData.token;\n              g.mounted = true;\n              _context6.next = 16;\n              return tokenPost(POST_TYPES.VALID_TOKEN);\n\n            case 16:\n              validTokenRes = _context6.sent;\n              elapsed = Date.now() - t1;\n\n              if (!validTokenRes.success) {\n                _context6.next = 23;\n                break;\n              }\n\n              log(\"Valid auth initiation in \" + elapsed + \"ms\");\n              return _context6.abrupt(\"return\", true);\n\n            case 23:\n              return _context6.abrupt(\"return\", false);\n\n            case 24:\n              _context6.next = 27;\n              break;\n\n            case 26:\n              return _context6.abrupt(\"return\", false);\n\n            case 27:\n              _context6.next = 33;\n              break;\n\n            case 29:\n              _context6.prev = 29;\n              _context6.t0 = _context6[\"catch\"](4);\n              console.error(_context6.t0);\n              return _context6.abrupt(\"return\", false);\n\n            case 33:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[4, 29]]);\n    }));\n\n    return function initAuth() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var tokenPost = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(postType, body) {\n      var integrationType, res, resData, req_res;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (g.mounted) {\n                _context7.next = 3;\n                break;\n              }\n\n              _context7.next = 3;\n              return initAuth();\n\n            case 3:\n              integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n              _context7.prev = 4;\n              _context7.next = 7;\n              return fetch(generateBareUrl(integrationType, g.integrationID), {\n                method: \"POST\",\n                headers: {\n                  'Eb-Post-Req': postType,\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(_extends({\n                  _auth: generateAuthBody()\n                }, body))\n              });\n\n            case 7:\n              res = _context7.sent;\n              _context7.next = 10;\n              return res.json();\n\n            case 10:\n              resData = _context7.sent;\n\n              if (!({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code'))) {\n                _context7.next = 35;\n                break;\n              }\n\n              if (!(resData.code === \"JWT EXPIRED\")) {\n                _context7.next = 32;\n                break;\n              }\n\n              if (!(integrationType === \"PROJECT\")) {\n                _context7.next = 29;\n                break;\n              }\n\n              _context7.next = 16;\n              return tokenPost(POST_TYPES.REQUEST_TOKEN, {\n                refreshToken: g.refreshToken,\n                token: g.token\n              });\n\n            case 16:\n              req_res = _context7.sent;\n\n              if (!req_res.success) {\n                _context7.next = 23;\n                break;\n              }\n\n              g.token = req_res.data.token;\n              g.newTokenCallback();\n              return _context7.abrupt(\"return\", tokenPost(postType, body));\n\n            case 23:\n              g.token = \"\";\n              g.refreshToken = \"\";\n              g.newTokenCallback();\n              return _context7.abrupt(\"return\", {\n                success: false,\n                data: req_res.data\n              });\n\n            case 27:\n              _context7.next = 31;\n              break;\n\n            case 29:\n              _context7.next = 31;\n              return initAuth();\n\n            case 31:\n              return _context7.abrupt(\"return\", tokenPost(postType, body));\n\n            case 32:\n              return _context7.abrupt(\"return\", {\n                success: false,\n                data: resData.body\n              });\n\n            case 35:\n              return _context7.abrupt(\"return\", {\n                success: resData.success,\n                data: resData.body\n              });\n\n            case 36:\n              _context7.next = 41;\n              break;\n\n            case 38:\n              _context7.prev = 38;\n              _context7.t0 = _context7[\"catch\"](4);\n              return _context7.abrupt(\"return\", {\n                success: false,\n                data: _context7.t0\n              });\n\n            case 41:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[4, 38]]);\n    }));\n\n    return function tokenPost(_x9, _x10) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var tokenPostAttachment = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(formData, customHeaders) {\n      var regularAuthbody, attachmentAuth, integrationType, res, resData, req_res;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (g.mounted) {\n                _context8.next = 3;\n                break;\n              }\n\n              _context8.next = 3;\n              return initAuth();\n\n            case 3:\n              regularAuthbody = generateAuthBody();\n              attachmentAuth = {\n                'Eb-token': regularAuthbody.token,\n                'Eb-token-time': regularAuthbody.token_time,\n                'Eb-now': regularAuthbody.now\n              };\n              integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n              _context8.prev = 6;\n              _context8.next = 9;\n              return fetch(generateBareUrl(integrationType, g.integrationID), {\n                method: \"POST\",\n                headers: _extends({\n                  'Eb-Post-Req': POST_TYPES.UPLOAD_ATTACHMENT\n                }, customHeaders, attachmentAuth),\n                body: formData\n              });\n\n            case 9:\n              res = _context8.sent;\n              _context8.next = 12;\n              return res.json();\n\n            case 12:\n              resData = _context8.sent;\n\n              if (!({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code'))) {\n                _context8.next = 37;\n                break;\n              }\n\n              if (!(resData.code === \"JWT EXPIRED\")) {\n                _context8.next = 34;\n                break;\n              }\n\n              if (!(integrationType === \"PROJECT\")) {\n                _context8.next = 31;\n                break;\n              }\n\n              _context8.next = 18;\n              return tokenPost(POST_TYPES.REQUEST_TOKEN, {\n                refreshToken: g.refreshToken,\n                token: g.token\n              });\n\n            case 18:\n              req_res = _context8.sent;\n\n              if (!req_res.success) {\n                _context8.next = 25;\n                break;\n              }\n\n              g.token = req_res.data.token;\n              g.newTokenCallback();\n              return _context8.abrupt(\"return\", tokenPostAttachment(formData, customHeaders));\n\n            case 25:\n              g.token = \"\";\n              g.refreshToken = \"\";\n              g.newTokenCallback();\n              return _context8.abrupt(\"return\", {\n                success: false,\n                data: req_res.data\n              });\n\n            case 29:\n              _context8.next = 33;\n              break;\n\n            case 31:\n              _context8.next = 33;\n              return initAuth();\n\n            case 33:\n              return _context8.abrupt(\"return\", tokenPostAttachment(formData, customHeaders));\n\n            case 34:\n              return _context8.abrupt(\"return\", {\n                success: false,\n                data: resData.body\n              });\n\n            case 37:\n              return _context8.abrupt(\"return\", {\n                success: resData.success,\n                data: resData.body\n              });\n\n            case 38:\n              _context8.next = 43;\n              break;\n\n            case 40:\n              _context8.prev = 40;\n              _context8.t0 = _context8[\"catch\"](6);\n              return _context8.abrupt(\"return\", {\n                success: false,\n                data: _context8.t0\n              });\n\n            case 43:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[6, 40]]);\n    }));\n\n    return function tokenPostAttachment(_x11, _x12) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  return {\n    initAuth: initAuth,\n    tokenPost: tokenPost,\n    tokenPostAttachment: tokenPostAttachment,\n    signUp: signUp,\n    setUserAttribute: setUserAttribute,\n    getUserAttributes: getUserAttributes,\n    isUserSignedIn: isUserSignedIn,\n    signIn: signIn,\n    signOut: signOut,\n    resetUserPassword: resetUserPassword\n  };\n}\n\nfunction tableFactory(globals) {\n  var g = globals || _g;\n\n  var _authFactory = authFactory(g),\n      tokenPost = _authFactory.tokenPost;\n\n  var Query = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(options) {\n      var defaultOptions, fullOptions, res;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              defaultOptions = {\n                queryName: \"\"\n              };\n              fullOptions = _extends({}, defaultOptions, options);\n              _context9.prev = 2;\n              _context9.next = 5;\n              return tokenPost(POST_TYPES.GET_QUERY, fullOptions);\n\n            case 5:\n              res = _context9.sent;\n              return _context9.abrupt(\"return\", res.data);\n\n            case 9:\n              _context9.prev = 9;\n              _context9.t0 = _context9[\"catch\"](2);\n              return _context9.abrupt(\"return\", []);\n\n            case 12:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[2, 9]]);\n    }));\n\n    return function Query(_x13) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  function fullTableSize(_x14) {\n    return _fullTableSize.apply(this, arguments);\n  }\n\n  function _fullTableSize() {\n    _fullTableSize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(tableName) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return tokenPost(POST_TYPES.TABLE_SIZE, tableName ? {\n                tableName: tableName\n              } : {});\n\n            case 2:\n              res = _context10.sent;\n\n              if (!res.success) {\n                _context10.next = 7;\n                break;\n              }\n\n              return _context10.abrupt(\"return\", res.data);\n\n            case 7:\n              return _context10.abrupt(\"return\", 0);\n\n            case 8:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n    return _fullTableSize.apply(this, arguments);\n  }\n\n  function tableTypes(_x15) {\n    return _tableTypes.apply(this, arguments);\n  }\n\n  function _tableTypes() {\n    _tableTypes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(tableName) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return tokenPost(POST_TYPES.COLUMN_TYPES, tableName ? {\n                tableName: tableName\n              } : {});\n\n            case 2:\n              res = _context11.sent;\n\n              if (!res.success) {\n                _context11.next = 7;\n                break;\n              }\n\n              return _context11.abrupt(\"return\", res.data);\n\n            case 7:\n              return _context11.abrupt(\"return\", {});\n\n            case 8:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n    return _tableTypes.apply(this, arguments);\n  }\n\n  return {\n    Query: Query,\n    fullTableSize: fullTableSize,\n    tableTypes: tableTypes\n  };\n}\n\nfunction dbFactory(globals) {\n  var g = globals || _g;\n\n  var _authFactory2 = authFactory(g),\n      tokenPost = _authFactory2.tokenPost;\n\n  var _listenerIndex = 0;\n  var _listeners = {};\n\n  function _runListeners() {\n    for (var _i8 = 0, _Object$values = Object.values(_listeners); _i8 < _Object$values.length; _i8++) {\n      var cb = _Object$values[_i8];\n      cb.apply(void 0, arguments);\n    }\n  }\n\n  var dbEventListener = function dbEventListener(callback) {\n    var currKey = '' + _listenerIndex++;\n    _listeners[currKey] = callback;\n    return function () {\n      delete _listeners[currKey];\n    };\n  };\n\n  var allCallback = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(trx, tableName, userAssociatedRecordsOnly) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              trx.count = \"all\";\n              trx.tableName = tableName;\n              if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n\n              _runListeners(DB_STATUS.PENDING, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n\n              _context12.next = 6;\n              return tokenPost(POST_TYPES.EASY_QB, trx);\n\n            case 6:\n              res = _context12.sent;\n\n              if (!res.success) {\n                _context12.next = 12;\n                break;\n              }\n\n              _runListeners(DB_STATUS.SUCCESS, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null, res.data);\n\n              return _context12.abrupt(\"return\", res.data);\n\n            case 12:\n              _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n\n              return _context12.abrupt(\"return\", res);\n\n            case 14:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function allCallback(_x16, _x17, _x18) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  var oneCallback = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(trx, tableName, userAssociatedRecordsOnly) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              trx.count = \"one\";\n              trx.tableName = tableName;\n              if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n\n              _runListeners(DB_STATUS.PENDING, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n\n              _context13.next = 6;\n              return tokenPost(POST_TYPES.EASY_QB, trx);\n\n            case 6:\n              res = _context13.sent;\n\n              if (!res.success) {\n                _context13.next = 12;\n                break;\n              }\n\n              _runListeners(DB_STATUS.SUCCESS, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null, res.data);\n\n              return _context13.abrupt(\"return\", res.data);\n\n            case 12:\n              _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n\n              return _context13.abrupt(\"return\", res);\n\n            case 14:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    return function oneCallback(_x19, _x20, _x21) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var db = function db(tableName, userAssociatedRecordsOnly) {\n    if (tableName && typeof tableName === \"string\") {\n      return easyqb({\n        allCallback: allCallback,\n        oneCallback: oneCallback,\n        userAssociatedRecordsOnly: userAssociatedRecordsOnly,\n        tableName: tableName.toUpperCase()\n      })(tableName.replace(/[^0-9a-zA-Z]/g, '_').toUpperCase());\n    } else {\n      return easyqb({\n        allCallback: allCallback,\n        oneCallback: oneCallback,\n        userAssociatedRecordsOnly: userAssociatedRecordsOnly,\n        tableName: \"untable\"\n      })(\"untable\");\n    }\n  };\n\n  return {\n    db: db,\n    dbEventListener: dbEventListener,\n    e: easyqb().e\n  };\n}\n\nfunction EasybaseProvider(_ref12) {\n  var ebconfig = _ref12.ebconfig,\n      options = _ref12.options;\n  var g = gFactory();\n\n  var _authFactory3 = authFactory(g),\n      tokenPost = _authFactory3.tokenPost,\n      tokenPostAttachment = _authFactory3.tokenPostAttachment,\n      signUp = _authFactory3.signUp,\n      setUserAttribute = _authFactory3.setUserAttribute,\n      getUserAttributes = _authFactory3.getUserAttributes,\n      isUserSignedIn = _authFactory3.isUserSignedIn,\n      signIn = _authFactory3.signIn,\n      signOut = _authFactory3.signOut,\n      resetUserPassword = _authFactory3.resetUserPassword;\n\n  var _tableFactory = tableFactory(g),\n      Query = _tableFactory.Query,\n      fullTableSize = _tableFactory.fullTableSize,\n      tableTypes = _tableFactory.tableTypes;\n\n  var _dbFactory = dbFactory(g),\n      db = _dbFactory.db,\n      dbEventListener = _dbFactory.dbEventListener,\n      e = _dbFactory.e;\n\n  var _utilsFactory2 = utilsFactory(g),\n      log = _utilsFactory2.log;\n\n  if (typeof ebconfig !== 'object' || ebconfig === null || ebconfig === undefined) {\n    console.error(\"No ebconfig object passed. do `import ebconfig from \\\"ebconfig.js\\\"` and pass it to the Easybase provider\");\n    return;\n  } else if (!ebconfig.integration) {\n    console.error(\"Invalid ebconfig object passed. Download ebconfig.js from Easybase.io and try again.\");\n    return;\n  } // eslint-disable-next-line dot-notation\n\n\n  var isIE = typeof document !== 'undefined' && !!document['documentMode'];\n\n  if (isIE) {\n    console.error(\"EASYBASE — easybasejs does not support Internet Explorer. Please use a different browser.\");\n  }\n\n  g.options = _extends({}, options);\n  g.integrationID = ebconfig.integration;\n  g.ebconfig = ebconfig;\n\n  if (g.ebconfig.tt && g.ebconfig.integration.split(\"-\")[0].toUpperCase() !== \"PROJECT\") {\n    g.mounted = false;\n  } else {\n    g.mounted = true;\n  }\n\n  g.instance = \"Node\";\n  var _isFrameInitialized = true;\n  var _frameConfiguration = {\n    offset: 0,\n    limit: 0\n  };\n  var _observedChangeStack = [];\n\n  var _recordIdMap = new WeakMap();\n\n  var _observableFrame = {\n    observe: function observe(_) {},\n    unobserve: function unobserve() {}\n  };\n  var _frame = [];\n  var isSyncing = false;\n\n  function Frame(index) {\n    if (typeof index === \"number\") {\n      return _observableFrame[index];\n    } else {\n      return _observableFrame;\n    }\n  }\n\n  var _recordIDExists = function _recordIDExists(record) {\n    return !!_recordIdMap.get(record);\n  };\n\n  var configureFrame = function configureFrame(options) {\n    _frameConfiguration = _extends({}, _frameConfiguration);\n    if (options.limit !== undefined) _frameConfiguration.limit = options.limit;\n    if (options.offset !== undefined && options.offset >= 0) _frameConfiguration.offset = options.offset;\n    if (options.tableName !== undefined) _frameConfiguration.tableName = options.tableName;\n    _isFrameInitialized = false;\n    return {\n      message: \"Successfully configured frame. Run sync() for changes to be shown in frame\",\n      success: true\n    };\n  };\n\n  var currentConfiguration = function currentConfiguration() {\n    return _extends({}, _frameConfiguration);\n  };\n\n  var deleteRecord = /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(options) {\n      var _frameRecord, res, _res;\n\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _frameRecord = _frame.find(function (ele) {\n                return deepEqual(ele, options.record);\n              });\n\n              if (!(_frameRecord && _recordIdMap.get(_frameRecord))) {\n                _context14.next = 8;\n                break;\n              }\n\n              _context14.next = 4;\n              return tokenPost(POST_TYPES.SYNC_DELETE, {\n                _id: _recordIdMap.get(_frameRecord),\n                tableName: options.tableName\n              });\n\n            case 4:\n              res = _context14.sent;\n              return _context14.abrupt(\"return\", {\n                success: res.success,\n                message: res.data\n              });\n\n            case 8:\n              _context14.prev = 8;\n              _context14.next = 11;\n              return tokenPost(POST_TYPES.SYNC_DELETE, {\n                record: options.record,\n                tableName: options.tableName\n              });\n\n            case 11:\n              _res = _context14.sent;\n              return _context14.abrupt(\"return\", {\n                success: _res.success,\n                message: _res.data\n              });\n\n            case 15:\n              _context14.prev = 15;\n              _context14.t0 = _context14[\"catch\"](8);\n              console.error(\"Easybase Error: deleteRecord failed \", _context14.t0);\n              return _context14.abrupt(\"return\", {\n                success: false,\n                message: \"Easybase Error: deleteRecord failed \" + _context14.t0,\n                error: _context14.t0\n              });\n\n            case 19:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[8, 15]]);\n    }));\n\n    return function deleteRecord(_x22) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  var addRecord = /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(options) {\n      var defaultValues, fullOptions, res;\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              defaultValues = {\n                insertAtEnd: false,\n                newRecord: {},\n                tableName: undefined\n              };\n              fullOptions = _extends({}, defaultValues, options);\n              _context15.prev = 2;\n              _context15.next = 5;\n              return tokenPost(POST_TYPES.SYNC_INSERT, fullOptions);\n\n            case 5:\n              res = _context15.sent;\n              return _context15.abrupt(\"return\", {\n                message: res.data,\n                success: res.success\n              });\n\n            case 9:\n              _context15.prev = 9;\n              _context15.t0 = _context15[\"catch\"](2);\n              console.error(\"Easybase Error: addRecord failed \", _context15.t0);\n              return _context15.abrupt(\"return\", {\n                message: \"Easybase Error: addRecord failed \" + _context15.t0,\n                success: false,\n                error: _context15.t0\n              });\n\n            case 13:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, null, [[2, 9]]);\n    }));\n\n    return function addRecord(_x23) {\n      return _ref14.apply(this, arguments);\n    };\n  }(); // Only allow the deletion of one element at a time\n  // First handle shifting of the array size. Then iterate\n\n\n  var sync = /*#__PURE__*/function () {\n    var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n      var _realignFrames, res, _res2;\n\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _realignFrames = function _realignFrames(newData) {\n                var isNewDataTheSame = true;\n\n                if (newData.length !== _frame.length) {\n                  isNewDataTheSame = false;\n                } else {\n                  for (var i = 0; i < newData.length; i++) {\n                    var newDataNoId = _extends({}, newData[i]);\n\n                    delete newDataNoId._id;\n\n                    if (!deepEqual(newDataNoId, _frame[i])) {\n                      isNewDataTheSame = false;\n                      break;\n                    }\n                  }\n                }\n\n                if (!isNewDataTheSame) {\n                  var oldframe = _toConsumableArray(_frame);\n\n                  oldframe.length = newData.length;\n                  _recordIdMap = new WeakMap();\n\n                  for (var _i9 = 0; _i9 < newData.length; _i9++) {\n                    var currNewEle = newData[_i9];\n\n                    _recordIdMap.set(currNewEle, currNewEle._id);\n\n                    delete currNewEle._id;\n                    oldframe[_i9] = currNewEle;\n                  }\n\n                  _frame = oldframe;\n\n                  _observableFrame.unobserve();\n\n                  _observableFrame = Observable.from(_frame);\n\n                  _observableFrame.observe(function (allChanges) {\n                    allChanges.forEach(function (change) {\n                      _observedChangeStack.push({\n                        type: change.type,\n                        path: change.path,\n                        value: change.value,\n                        _id: _recordIdMap.get(_frame[Number(change.path[0])]) // Not bringing change.object or change.oldValue\n\n                      });\n\n                      log(JSON.stringify({\n                        type: change.type,\n                        path: change.path,\n                        value: change.value,\n                        _id: _recordIdMap.get(_frame[Number(change.path[0])]) // Not bringing change.object or change.oldValue\n\n                      }));\n                    });\n                  });\n                }\n              };\n\n              if (!isSyncing) {\n                _context16.next = 3;\n                break;\n              }\n\n              return _context16.abrupt(\"return\", {\n                success: false,\n                message: \"Easybase Error: the provider is currently syncing, use 'await sync()' before calling sync() again\"\n              });\n\n            case 3:\n              isSyncing = true;\n\n              if (!_isFrameInitialized) {\n                _context16.next = 11;\n                break;\n              }\n\n              if (!(_observedChangeStack.length > 0)) {\n                _context16.next = 11;\n                break;\n              }\n\n              log(\"Stack change: \", _observedChangeStack);\n              _context16.next = 9;\n              return tokenPost(POST_TYPES.SYNC_STACK, _extends({\n                stack: _observedChangeStack\n              }, _frameConfiguration));\n\n            case 9:\n              res = _context16.sent;\n\n              if (res.success) {\n                _observedChangeStack.length = 0;\n              }\n\n            case 11:\n              _context16.prev = 11;\n              _context16.next = 14;\n              return tokenPost(POST_TYPES.GET_FRAME, _frameConfiguration);\n\n            case 14:\n              _res2 = _context16.sent;\n\n              if (!(_res2.success === false)) {\n                _context16.next = 21;\n                break;\n              }\n\n              console.error(_res2.data);\n              isSyncing = false;\n              return _context16.abrupt(\"return\", {\n                success: false,\n                message: \"\" + _res2.data\n              });\n\n            case 21:\n              _isFrameInitialized = true;\n\n              _realignFrames(_res2.data);\n\n              isSyncing = false;\n              return _context16.abrupt(\"return\", {\n                message: 'Success. Call frame for data',\n                success: true\n              });\n\n            case 25:\n              _context16.next = 32;\n              break;\n\n            case 27:\n              _context16.prev = 27;\n              _context16.t0 = _context16[\"catch\"](11);\n              console.error(\"Easybase Error: get failed \", _context16.t0);\n              isSyncing = false;\n              return _context16.abrupt(\"return\", {\n                success: false,\n                message: \"Easybase Error: get failed \" + _context16.t0,\n                error: _context16.t0\n              });\n\n            case 32:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[11, 27]]);\n    }));\n\n    return function sync() {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n\n  var updateRecordImage = /*#__PURE__*/function () {\n    var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(options) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.next = 2;\n              return _updateRecordAttachment(options, \"image\");\n\n            case 2:\n              res = _context17.sent;\n              return _context17.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17);\n    }));\n\n    return function updateRecordImage(_x24) {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n\n  var updateRecordVideo = /*#__PURE__*/function () {\n    var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(options) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return _updateRecordAttachment(options, \"video\");\n\n            case 2:\n              res = _context18.sent;\n              return _context18.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18);\n    }));\n\n    return function updateRecordVideo(_x25) {\n      return _ref17.apply(this, arguments);\n    };\n  }();\n\n  var updateRecordFile = /*#__PURE__*/function () {\n    var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(options) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.next = 2;\n              return _updateRecordAttachment(options, \"file\");\n\n            case 2:\n              res = _context19.sent;\n              return _context19.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19);\n    }));\n\n    return function updateRecordFile(_x26) {\n      return _ref18.apply(this, arguments);\n    };\n  }();\n\n  var _updateRecordAttachment = /*#__PURE__*/function () {\n    var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(options, type) {\n      var _frameRecord, ext, isFileFromURI, formData, customHeaders, res;\n\n      return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              isFileFromURI = function _isFileFromURI(f) {\n                return f.uri !== undefined;\n              };\n\n              _frameRecord = _frame.find(function (ele) {\n                return deepEqual(ele, options.record);\n              });\n\n              if (!(_frameRecord === undefined || !_recordIDExists(_frameRecord))) {\n                _context20.next = 5;\n                break;\n              }\n\n              log(\"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\");\n              return _context20.abrupt(\"return\", {\n                success: false,\n                message: \"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\"\n              });\n\n            case 5:\n              ext = options.attachment.name.split(\".\").pop().toLowerCase();\n              log(ext);\n\n              if (!(type === \"image\" && !imageExtensions.includes(ext))) {\n                _context20.next = 9;\n                break;\n              }\n\n              return _context20.abrupt(\"return\", {\n                success: false,\n                message: \"Image files must have a proper image extension in the file name\"\n              });\n\n            case 9:\n              if (!(type === \"video\" && !videoExtensions.includes(ext))) {\n                _context20.next = 11;\n                break;\n              }\n\n              return _context20.abrupt(\"return\", {\n                success: false,\n                message: \"Video files must have a proper video extension in the file name\"\n              });\n\n            case 11:\n              formData = new FormData();\n\n              if (isFileFromURI(options.attachment)) {\n                formData.append(\"file\", options.attachment);\n                formData.append(\"name\", options.attachment.name);\n              } else {\n                formData.append(\"file\", options.attachment);\n                formData.append(\"name\", options.attachment.name);\n              }\n\n              customHeaders = {\n                'Eb-upload-type': type,\n                'Eb-column-name': options.columnName,\n                'Eb-record-id': _recordIdMap.get(_frameRecord),\n                'Eb-table-name': options.tableName\n              };\n              _context20.next = 16;\n              return tokenPostAttachment(formData, customHeaders);\n\n            case 16:\n              res = _context20.sent;\n              _context20.next = 19;\n              return sync();\n\n            case 19:\n              return _context20.abrupt(\"return\", {\n                message: res.data,\n                success: res.success\n              });\n\n            case 20:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }));\n\n    return function _updateRecordAttachment(_x27, _x28) {\n      return _ref19.apply(this, arguments);\n    };\n  }();\n\n  var c = {\n    /** +++ Will be deprecated */\n    configureFrame: configureFrame,\n    addRecord: addRecord,\n    deleteRecord: deleteRecord,\n    sync: sync,\n    Frame: Frame,\n    currentConfiguration: currentConfiguration,\n\n    /** --- */\n    updateRecordImage: updateRecordImage,\n    updateRecordVideo: updateRecordVideo,\n    updateRecordFile: updateRecordFile,\n    fullTableSize: fullTableSize,\n    tableTypes: tableTypes,\n    Query: Query,\n    isUserSignedIn: isUserSignedIn,\n    signIn: signIn,\n    signOut: signOut,\n    signUp: signUp,\n    resetUserPassword: resetUserPassword,\n    setUserAttribute: setUserAttribute,\n    getUserAttributes: getUserAttributes,\n    db: db,\n    dbEventListener: dbEventListener,\n    e: e\n  };\n  return c;\n}\n\nvar generateBareUrl = function generateBareUrl(type, integrationID) {\n  return \"https://api.easybase.io/\".concat(type, \"/\").concat(integrationID);\n};\n\nvar isBadInt = function isBadInt(my_int) {\n  return my_int !== undefined && my_int !== null && Math.floor(my_int) !== my_int;\n};\n\nvar isBadString = function isBadString(my_string) {\n  return my_string !== undefined && my_string !== null && typeof my_string !== \"string\";\n};\n\nvar isBadIntegrationID = function isBadIntegrationID(my_string) {\n  return my_string === undefined || my_string === null || typeof my_string !== \"string\";\n};\n\nvar isBadObject = function isBadObject(my_obj) {\n  return my_obj !== undefined && my_obj !== null && typeof my_obj !== \"object\";\n};\n\nvar isBadBool = function isBadBool(my_bool) {\n  return my_bool !== undefined && my_bool !== null && typeof my_bool !== \"boolean\";\n};\n/**\r\n *\r\n * @param {GetOptions} options GetOptions.\r\n * @returns {Promise<Array>} Array of records.\r\n *\r\n */\n\n\nfunction get(options) {\n  var defaultOptions = {\n    integrationID: \"\",\n    offset: undefined,\n    limit: undefined,\n    authentication: undefined,\n    customQuery: undefined\n  };\n\n  var _extends2 = _extends({}, defaultOptions, options),\n      integrationID = _extends2.integrationID,\n      offset = _extends2.offset,\n      limit = _extends2.limit,\n      authentication = _extends2.authentication,\n      customQuery = _extends2.customQuery;\n\n  if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n  if (isBadInt(offset)) throw new Error(\"offset must be an integer\");\n  if (isBadInt(limit)) throw new Error(\"limit must be an integer\");\n  if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n  if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n  return new Promise(function (resolve, reject) {\n    try {\n      var fetch_body = {};\n      if (typeof customQuery === \"object\") fetch_body = _extends({}, customQuery);\n      if (offset !== undefined) fetch_body.offset = offset;\n      if (limit !== undefined) fetch_body.limit = limit;\n      if (authentication !== undefined) fetch_body.authentication = authentication;\n      fetch(generateBareUrl('get', integrationID), {\n        method: \"POST\",\n        body: JSON.stringify(fetch_body),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if ({}.hasOwnProperty.call(resData, 'ErrorCode')) {\n          console.error(resData.message);\n          resolve([resData.message]);\n        } else resolve(resData);\n      });\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n/**\r\n *\r\n * @param {PostOptions} options PostOptions\r\n * @returns {Promise<String>} Post status.\r\n *\r\n */\n\n\nfunction post(options) {\n  var defaultValues = {\n    integrationID: \"\",\n    newRecord: undefined,\n    authentication: undefined,\n    insertAtEnd: undefined\n  };\n\n  var _extends3 = _extends({}, defaultValues, options),\n      integrationID = _extends3.integrationID,\n      newRecord = _extends3.newRecord,\n      authentication = _extends3.authentication,\n      insertAtEnd = _extends3.insertAtEnd;\n\n  if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n  if (isBadObject(newRecord)) throw new Error(\"newRecord is required and must be a string\");\n  if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n  if (isBadBool(insertAtEnd)) throw new Error(\"insertAtEnd must be a boolean or null\");\n  return new Promise(function (resolve, reject) {\n    try {\n      var fetch_body = _extends({}, newRecord);\n\n      if (authentication !== undefined) fetch_body.authentication = authentication;\n      if (insertAtEnd !== undefined) fetch_body.insertAtEnd = insertAtEnd;\n      fetch(generateBareUrl('post', integrationID), {\n        method: \"POST\",\n        body: JSON.stringify(fetch_body),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if ({}.hasOwnProperty.call(resData, 'ErrorCode')) console.error(resData.message);\n        resolve(resData);\n      });\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n/**\r\n *\r\n * @param {UpdateOptions} options UpdateOptions\r\n * @returns {Promise<String>} Update status.\r\n */\n\n\nfunction update(options) {\n  var defaultValues = {\n    integrationID: \"\",\n    updateValues: undefined,\n    authentication: undefined,\n    customQuery: undefined\n  };\n\n  var _extends4 = _extends({}, defaultValues, options),\n      integrationID = _extends4.integrationID,\n      updateValues = _extends4.updateValues,\n      authentication = _extends4.authentication,\n      customQuery = _extends4.customQuery;\n\n  if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n  if (isBadObject(updateValues) || updateValues === undefined) throw new Error(\"updateValues is required and must be a string\");\n  if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n  if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n  return new Promise(function (resolve, reject) {\n    try {\n      var fetch_body = _extends({\n        updateValues: updateValues\n      }, customQuery);\n\n      if (authentication !== undefined) fetch_body.authentication = authentication;\n      fetch(generateBareUrl('update', integrationID), {\n        method: \"POST\",\n        body: JSON.stringify(fetch_body),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if ({}.hasOwnProperty.call(resData, 'ErrorCode')) console.error(resData.message);\n        resolve(resData.message);\n      });\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n/**\r\n *\r\n * @param {DeleteOptions} options DeleteOptions\r\n * @return {Promise<String>} Delete status.\r\n */\n\n\nfunction Delete(options) {\n  var defaultValues = {\n    integrationID: \"\",\n    authentication: undefined,\n    customQuery: undefined\n  };\n\n  var _extends5 = _extends({}, defaultValues, options),\n      integrationID = _extends5.integrationID,\n      authentication = _extends5.authentication,\n      customQuery = _extends5.customQuery;\n\n  if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n  if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n  if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n  return new Promise(function (resolve, reject) {\n    try {\n      var fetch_body = _extends({}, customQuery);\n\n      if (authentication !== undefined) fetch_body.authentication = authentication;\n      fetch(generateBareUrl('delete', integrationID), {\n        method: \"POST\",\n        body: JSON.stringify(fetch_body),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if ({}.hasOwnProperty.call(resData, 'ErrorCode')) console.error(resData.message);\n        resolve(resData.message);\n      });\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n/**\r\n * @async\r\n * Call a cloud function, created in Easybase interface.\r\n * @param {string} route Route as detailed in Easybase. Found under 'Deploy'. Will be in the form of ####...####-function-name.\r\n * @param {Record<string, any>} postBody Optional object to pass as the body of the POST request. This object will available in your cloud function's event.body.\r\n * @return {Promise<string>} Response from your cloud function. Detailed with a call to 'return context.succeed(\"RESPONSE\")'.\r\n */\n\n\nfunction callFunction(_x29, _x30) {\n  return _callFunction.apply(this, arguments);\n}\n\nfunction _callFunction() {\n  _callFunction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(route, postBody) {\n    var res, rawDataText;\n    return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            _context21.next = 2;\n            return fetch(generateBareUrl('function', route.split(\"/\").pop()), {\n              method: \"POST\",\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(postBody) || \"\"\n            });\n\n          case 2:\n            res = _context21.sent;\n            _context21.next = 5;\n            return res.text();\n\n          case 5:\n            rawDataText = _context21.sent;\n            return _context21.abrupt(\"return\", rawDataText);\n\n          case 7:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, _callee21);\n  }));\n  return _callFunction.apply(this, arguments);\n}\n\nexport { Delete, EasybaseProvider, callFunction, get, post, update };","map":{"version":3,"sources":["../src/EasybaseProvider/types.ts","../src/EasybaseProvider/g.ts","../src/EasybaseProvider/object-observer.js","../src/EasybaseProvider/utils.ts","../src/EasybaseProvider/auth.ts","../src/EasybaseProvider/table.ts","../src/EasybaseProvider/db.ts","../src/EasybaseProvider/EasybaseProvider.ts","../src/index.ts"],"names":["POST_TYPES","DB_STATUS","EXECUTE_COUNT","GlobalNamespace","_g","gFactory","INSERT","UPDATE","DELETE","REVERSE","SHUFFLE","oMetaKey","Symbol","validObservableOptionKeys","async","validObserverOptionKeys","path","pathsOf","pathsFrom","processObserveOptions","result","options","n","invalidOptions","Object","option","observe","oMeta","observers","o","opts","console","unobserve","ol","al","arguments","i","propertiesBluePrint","value","prepareObject","target","key","getObservedOf","source","prepareArray","l","prepareTypedArray","filterChanges","oPath","changes","change","oPathsOf","oPathsFrom","callObserverSafe","listener","callObserversFromMT","batches","callObservers","currentObservable","relevantChanges","queueMicrotask","rb","b","Array","tmpa","tmp","newPath","type","oldValue","object","ownKey","parent","ArrayBuffer","item","proxiedPop","poppedIndex","popResult","tmpObserved","proxiedPush","pushContent","initialLength","pushResult","Reflect","proxiedShift","shiftResult","proxiedUnshift","unshiftContent","unshiftResult","proxiedReverse","proxiedSort","proxiedFill","tarLen","prev","start","Math","end","tmpTarget","proxiedCopyWithin","dest","len","nItem","oItem","proxiedSplice","splLen","spliceContent","startIndex","removed","inserted","spliceResult","newTarLen","index","proxiedTypedArraySet","souLen","offset","proxiedArrayMethods","pop","push","shift","unshift","reverse","sort","fill","copyWithin","splice","proxiedTypedArrayMethods","set","constructor","targetClone","cloningFunction","Proxy","properties","processOptions","detach","newValue","proxy","deleteProperty","get","input","utilsFactory","globals","g","generateBareUrl","generateAuthBody","stamp","Date","token","token_time","now","log","authFactory","getUserAttributes","attrsRes","tokenPost","setUserAttribute","setAttrsRes","success","message","JSON","error","signUp","signUpRes","newUserID","password","userAttributes","data","signIn","t1","integrationType","res","fetch","method","headers","body","version","session","instance","userID","resData","validTokenRes","elapsed","resetUserPassword","newPassword","isUserSignedIn","signOut","initAuth","tt","_auth","req_res","refreshToken","tokenPostAttachment","regularAuthbody","attachmentAuth","UPLOAD_ATTACHMENT","formData","tableFactory","Query","defaultOptions","queryName","fullOptions","tableName","fullTableSize","tableTypes","dbFactory","_listenerIndex","_listeners","cb","dbEventListener","callback","currKey","allCallback","trx","_runListeners","oneCallback","db","userAssociatedRecordsOnly","e","easyqb","EasybaseProvider","ebconfig","isIE","document","_isFrameInitialized","_frameConfiguration","limit","_observedChangeStack","_recordIdMap","_observableFrame","_","_frame","isSyncing","_recordIDExists","record","configureFrame","currentConfiguration","deleteRecord","_frameRecord","ele","deepEqual","_id","addRecord","defaultValues","insertAtEnd","newRecord","undefined","sync","_realignFrames","newData","isNewDataTheSame","newDataNoId","oldframe","currNewEle","Observable","allChanges","Number","stack","updateRecordImage","_updateRecordAttachment","updateRecordVideo","updateRecordFile","ext","imageExtensions","videoExtensions","f","isFileFromURI","customHeaders","c","Frame","isBadInt","my_int","isBadString","my_string","isBadIntegrationID","isBadObject","my_obj","isBadBool","my_bool","integrationID","authentication","customQuery","fetch_body","resolve","reject","post","update","updateValues","Delete","route","rawDataText"],"mappings":"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","sourcesContent":["import { SQW } from \"EasyQB/types/sq\";\nimport { NewExpression } from \"EasyQB/types/expression\";\n\nexport interface ConfigureFrameOptions {\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Set to -1 or null to return all records. Can be used in combination with offset. */\n    limit?: number | null;\n    /** Table to sync frame with. (Projects only) */\n    tableName?: string;\n}\n\nexport interface EasybaseProviderPropsOptions {\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** Log Easybase react status and events to console. */\n    logging?: boolean;\n}\n\nexport interface EasybaseProviderProps {\n    /** EasyBase ebconfig object. Can be downloaded in the integration drawer next to 'React Token'. This is automatically generated.  */\n    ebconfig: Ebconfig;\n    /** Optional configuration parameters. */\n    options?: EasybaseProviderPropsOptions\n}\n\nexport interface FrameConfiguration {\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset: number;\n    /** Limit the amount of records to be retrieved. Set to -1 or null to return all records. Can be used in combination with offset. */\n    limit: number | null;\n    /** Table to sync frame with. (Projects only) */\n    tableName?: string;\n}\n\nexport interface Ebconfig {\n    tt?: string,\n    integration: string,\n    version: string\n}\n\nexport interface AddRecordOptions {\n    /** If true, record will be inserted at the end of the collection rather than the front. Overwrites absoluteIndex. */\n    insertAtEnd?: boolean;\n    /** Values to post to EasyBase collection. Format is { column name: value } */\n    newRecord: Record<string, any>;\n    /** Table to post new record to. (Projects only) */\n    tableName?: string;\n}\n\nexport interface DeleteRecordOptions {\n    record: Record<string, any>;\n    /** Table to delete record from. (Projects only) */\n    tableName?: string;\n}\n\nexport interface QueryOptions {\n    /** Name of the query saved in Easybase's Visual Query Builder */\n    queryName: string;\n    /** If you would like to sort the order of your query by a column. Pass the name of that column here */\n    sortBy?: string;\n    /** By default, columnToSortBy will sort your query by ascending value (1, 2, 3...). To sort by descending set this to true */\n    descending?: boolean;\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Can be used in combination with offset. */\n    limit?: number;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. Read more: https://easybase.io/about/2020/09/15/Customizing-query-values/ */\n    customQuery?: Record<string, any>;\n    /** Table to query. (Projects only) */\n    tableName?: string;\n}\n\nexport interface FileFromURI {\n    /** Path on local device to the attachment. Usually received from react-native-image-picker or react-native-document-picker */\n    uri: string,\n    /** Name of the file with proper extension */\n    name: string,\n    /** File MIME type */\n    type: string\n}\n\nexport interface UpdateRecordAttachmentOptions {\n    /** EasyBase Record to attach this attachment to */\n    record: Record<string, any>;\n    /** The name of the column that is of type file/image/video */\n    columnName: string;\n    /** Either an HTML File element containing the correct type of attachment or a FileFromURI object for React Native instances.\n     * For React Native use libraries such as react-native-image-picker and react-native-document-picker.\n     * The file name must have a proper file extension corresponding to the attachment. \n     */\n    attachment: File | FileFromURI;\n    /** Table to post attachment to. (Projects only) */\n    tableName?: string;\n}\n\nexport interface StatusResponse {\n    /** Returns true if the operation was successful */\n    success: boolean;\n    /** Readable description of the the operation's status */\n    message: string;\n    /** Will represent a corresponding error if an error was thrown during the operation. */\n    error?: Error;\n}\n\nexport enum POST_TYPES {\n    UPLOAD_ATTACHMENT = \"upload_attachment\",\n    HANDSHAKE = \"handshake\",\n    VALID_TOKEN = \"valid_token\",\n    GET_FRAME = \"get_frame\",\n    TABLE_SIZE = \"table_size\",\n    COLUMN_TYPES = \"column_types\",\n    SYNC_STACK = \"sync_stack\",\n    SYNC_DELETE = \"sync_delete\",\n    SYNC_INSERT = \"sync_insert\",\n    GET_QUERY = \"get_query\",\n    USER_ATTRIBUTES = \"user_attributes\",\n    SET_ATTRIBUTE = \"set_attribute\",\n    SIGN_UP = \"sign_up\",\n    REQUEST_TOKEN = \"request_token\",\n    EASY_QB = \"easyqb\",\n    RESET_PASSWORD = \"reset_password\"\n}\n\nexport enum DB_STATUS {\n    ERROR = \"error\",\n    PENDING = \"pending\",\n    SUCCESS = \"success\"\n}\n\nexport enum EXECUTE_COUNT {\n    ALL = \"all\",\n    ONE = \"one\"\n}\n\nexport interface AuthPostResponse {\n    success: boolean;\n    data: any;\n}\n\nexport interface ContextValue {\n    /**\n     * Check if a user is currently signed in.\n     */\n    isUserSignedIn(): boolean;\n    /**\n     * Signs out the current user.\n     */\n    signOut(): void;\n    /**\n     * Retrieve the currently signed in users attribute object.\n     * @async\n     * @return {Promise<Record<string, string>>} Promise<Record<string, string>>\n     */\n    getUserAttributes(): Promise<Record<string, string>>;\n    /**\n     * Set a single attribute of the currently signed in user. Can also be updated visually in the Easybase 'Users' tab.\n     * @async\n     * @abstract\n     * @param key Object key. Can be a new key or existing key.\n     * @param value attribute value.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    setUserAttribute(key: string, value: string): Promise<StatusResponse>;\n    /**\n     * Reset the currently signed-in user's password to a new string.\n     * @async\n     * @param {string} newPassword New user password\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    resetUserPassword(newPassword: string): Promise<StatusResponse>;\n    /**\n     * Sign in a user that already exists for a project.\n     * @abstract\n     * @async\n     * @param userID unique identifier for new user. Usually an email or phone number.\n     * @param password user password.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    signIn(userID: string, password: string): Promise<StatusResponse>;\n    /**\n     * Create a new user for your project. You must still call signIn() after signing up.\n     * @abstract\n     * @async\n     * @param newUserID unique identifier for new user. Usually an email or phone number.\n     * @param password user password. Must be at least 8 characters long.\n     * @param userAttributes Optional object to store user attributes. Can also be edited visually in the Easybase 'Users' tab.\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    signUp(newUserID: string, password: string, userAttributes?: Record<string, string>): Promise<StatusResponse>;\n    /**\n     * Configure the current frame size. Set the offset and amount of records to retreive assume you don't want to receive\n     * your entire collection. This is useful for paging.\n     * @abstract\n     * @param {ConfigureFrameOptions} options ConfigureFrameOptions\n     * @return {StatusResponse} StatusResponse\n     */\n    configureFrame(options: ConfigureFrameOptions): StatusResponse;\n    /**\n     * Manually add a record to your collection regardless of your current frame. You must call sync() after this to see updated response.\n     * @abstract\n     * @async\n     * @param {AddRecordOptions} options AddRecordOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    addRecord(options: AddRecordOptions): Promise<StatusResponse>;\n    /**\n     * Manually delete a record from your collection regardless of your current frame. You must call sync() after this to see updated response.\n     * @abstract\n     * @async\n     * @param {Record<string, any>} record \n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    deleteRecord(options: DeleteRecordOptions): Promise<StatusResponse>;\n    /**\n     * Call this method to syncronize your current changes with your database. Delections, additions, and changes will all be reflected by your \n     * backend after calling this method. Call Frame() after this to get a normalized array of the freshest data.\n     * @abstract\n     * @async\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    sync(): Promise<StatusResponse>;\n    /**\n     * Upload an image to your backend and attach it to a specific record. columnName must reference a column of type 'image'.\n     * The file must have an extension of an image. \n     * Call sync() for fresh data with propery attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordImage(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * Upload a video to your backend and attach it to a specific record. columnName must reference a column of type 'video'. \n     * The file must have an extension of a video.\n     * Call sync() for fresh data with propery attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordVideo(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * Upload a file to your backend and attach it to a specific record. columnName must reference a column of type 'file'. \n     * Call sync() for fresh data with propery attachment links to cloud hosting.\n     * @abstract\n     * @async\n     * @param {UpdateRecordAttachmentOptions} options UpdateRecordAttachmentOptions\n     * @return {Promise<StatusResponse>} Promise<StatusResponse>\n     */\n    updateRecordFile(options: UpdateRecordAttachmentOptions): Promise<StatusResponse>;\n    /**\n     * This function is how you access your current frame. This function does not get new data or push changes to EasyBase. If you \n     * want to syncronize your frame and EasyBase, call sync() then Frame().\n     * @abstract\n     * @return {Record<string, any>[]} Array of records corresponding to the current frame. Call sync() to push changes that you have made to this array.\n     * \n     */\n    Frame(): Record<string, any>[];\n    /**\n     * This function is how you access a single object your current frame. This function does not get new data or push changes to EasyBase. If you \n     * want to syncronize your frame and EasyBase, call sync() then Frame().\n     * @abstract\n     * @param {number} [index] Passing an index will only return the object at that index in your Frame, rather than the entire array. This is useful for editing single objects based on an index.\n     * @return {Record<string, any>} Single record corresponding to that object within the current frame. Call sync() to push changes that you have made to this object.\n     * \n     */\n    Frame(index: number): Record<string, any>;\n    /**\n     * Gets the number of records in your table.\n     * @async\n     * @returns {Promise<number>} The the number of records in your table.\n     */\n    fullTableSize(): Promise<number>;\n    /**\n     * Gets the number of records in your table.\n     * @async\n     * @param {string} [tableName] Name of table to get the sizes of. (Projects only)\n     * @returns {Promise<number>} The the number of records in your table.\n     */\n    fullTableSize(tableName: string): Promise<number>;\n    /**\n     * Retrieve an object detailing the columns in your table mapped to their corresponding type.\n     * @async\n     * @returns {Promise<Record<string, any>>} Object detailing the columns in your table mapped to their corresponding type.\n     */\n    tableTypes(): Promise<Record<string, any>>;\n    /**\n     * Retrieve an object detailing the columns in your table mapped to their corresponding type.\n     * @async\n     * @param {string} [tableName] Name of table to get the types of. (Projects only)\n     * @returns {Promise<Record<string, any>>} Object detailing the columns in your table mapped to their corresponding type.\n     */\n    tableTypes(tableName: string): Promise<Record<string, any>>;\n    /**\n     * View your frames current configuration\n     * @returns {Record<string, any>} Object contains the `offset` and `length` of your current frame.\n     */\n    currentConfiguration(): FrameConfiguration;\n    /**\n     * @async\n     * View a query by name. This returns an isolated array that has no effect on your frame or frame configuration. sync() and Frame() have no \n     * relationship with a Query(). An edited Query cannot be synced with your database, use Frame() for realtime \n     * database array features.\n     * @param {QueryOptions} options QueryOptions\n     * @return {Promise<Record<string, any>[]>} Isolated array of records in the same form as Frame(). Editing this array has no effect and cannot be synced with your database. Use Frame() for realtime database features.\n     */\n    Query(options: QueryOptions): Promise<Record<string, any>[]>;\n    /**\n     * Instantiate EasyQB instance for dynamic CRUD query building: https://easybase.github.io/EasyQB/\n     * @param {string} [tableName] Name of your table.\n     * @param {boolean} [userAssociatedRecordsOnly] **PROJECTS ONLY** Operations will only be performed on records already associated to the currently signed-in user. Inserted records will automatically be associate to the user.\n     * @returns {SQW} EasyQB object for dynamic querying: https://easybase.github.io/EasyQB/\n     */\n    db(tableName?: string, userAssociatedRecordsOnly?: boolean): SQW;\n    /**\n     * Subscribe to db events, invoked by calling `.all` or `.one`: https://easybase.github.io/EasyQB/\n     * @param {function(status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any):void} [callback] Callback function to execute on db operations.\n     * @returns {function():void} Calling this function unsubscribes your callback function from events.\n     */\n    dbEventListener(callback: (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void): () => void;\n    /**\n     * Expressions and operations builder for `.db()`, used to create complex conditions, aggregators, and clauses. https://easybase.github.io/EasyQB/docs/operations.html\n     */\n    e: NewExpression;\n}\n\nexport interface Globals {\n    ebconfig: Ebconfig;\n    token: string;\n    refreshToken: string;\n    integrationID: string;\n    session: number;\n    options: EasybaseProviderPropsOptions;\n    instance: string;\n    mounted: boolean;\n    newTokenCallback(): void;\n}\n","import { Ebconfig, EasybaseProviderPropsOptions, Globals } from \"./types\";\n\nnamespace GlobalNamespace {\n    export let ebconfig: Ebconfig;\n    export let token: string;\n    export let refreshToken: string;\n    export let integrationID: string;\n    export let session: number;\n    export let options: EasybaseProviderPropsOptions;\n    export let instance: string;\n    export let mounted: boolean;\n    export let newTokenCallback: () => {};\n}\n\nconst _g: Globals = { ...GlobalNamespace };\n\nexport default _g;\n \nexport function gFactory(): Globals {\n    return { ...GlobalNamespace } as Globals;\n}\n","const\n\tINSERT = 'insert',\n\tUPDATE = 'update',\n\tDELETE = 'delete',\n\tREVERSE = 'reverse',\n\tSHUFFLE = 'shuffle',\n\toMetaKey = Symbol('observable-meta-key'),\n\tvalidObservableOptionKeys = { async: 1 },\n\tvalidObserverOptionKeys = { path: 1, pathsOf: 1, pathsFrom: 1 },\n\tprocessObserveOptions = function processObserveOptions(options) {\n\t\tconst result = {};\n\t\tif (options.path !== undefined) {\n\t\t\tif (typeof options.path !== 'string' || options.path === '') {\n\t\t\t\tthrow new Error('\"path\" option, if/when provided, MUST be a non-empty string');\n\t\t\t}\n\t\t\tresult.path = options.path;\n\t\t}\n\t\tif (options.pathsOf !== undefined) {\n\t\t\tif (options.path) {\n\t\t\t\tthrow new Error('\"pathsOf\" option MAY NOT be specified together with \"path\" option');\n\t\t\t}\n\t\t\tif (typeof options.pathsOf !== 'string') {\n\t\t\t\tthrow new Error('\"pathsOf\" option, if/when provided, MUST be a string (MAY be empty)');\n\t\t\t}\n\t\t\tresult.pathsOf = options.pathsOf.split('.').filter(n => n);\n\t\t}\n\t\tif (options.pathsFrom !== undefined) {\n\t\t\tif (options.path || options.pathsOf) {\n\t\t\t\tthrow new Error('\"pathsFrom\" option MAY NOT be specified together with \"path\"/\"pathsOf\"  option/s');\n\t\t\t}\n\t\t\tif (typeof options.pathsFrom !== 'string' || options.pathsFrom === '') {\n\t\t\t\tthrow new Error('\"pathsFrom\" option, if/when provided, MUST be a non-empty string');\n\t\t\t}\n\t\t\tresult.pathsFrom = options.pathsFrom;\n\t\t}\n\t\tconst invalidOptions = Object.keys(options).filter(option => !validObserverOptionKeys.hasOwnProperty(option));\n\t\tif (invalidOptions.length) {\n\t\t\tthrow new Error(`'${invalidOptions.join(', ')}' is/are not a valid observer option/s`);\n\t\t}\n\t\treturn result;\n\t},\n\tobserve = function observe(observer, options) {\n\t\tif (typeof observer !== 'function') {\n\t\t\tthrow new Error(`observer MUST be a function, got '${observer}'`);\n\t\t}\n\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\tobservers = oMeta.observers;\n\t\tif (!observers.some(o => o[0] === observer)) {\n\t\t\tlet opts;\n\t\t\tif (options) {\n\t\t\t\topts = processObserveOptions(options);\n\t\t\t} else {\n\t\t\t\topts = {};\n\t\t\t}\n\t\t\tobservers.push([observer, opts]);\n\t\t} else {\n\t\t\tconsole.warn('observer may be bound to an observable only once; will NOT rebind');\n\t\t}\n\t},\n\tunobserve = function unobserve() {\n\t\tconst oMeta = this[oMetaKey];\n\t\tconst observers = oMeta.observers;\n\t\tlet ol = observers.length;\n\t\tif (ol) {\n\t\t\tlet al = arguments.length;\n\t\t\tif (al) {\n\t\t\t\twhile (al--) {\n\t\t\t\t\tlet i = ol;\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tif (observers[i][0] === arguments[al]) {\n\t\t\t\t\t\t\tobservers.splice(i, 1);\n\t\t\t\t\t\t\tol--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tobservers.splice(0);\n\t\t\t}\n\t\t}\n\t},\n\tpropertiesBluePrint = { [oMetaKey]: { value: null }, observe: { value: observe }, unobserve: { value: unobserve } },\n\tprepareObject = function prepareObject(source, oMeta) {\n\t\tpropertiesBluePrint[oMetaKey].value = oMeta;\n\t\tconst target = Object.defineProperties({}, propertiesBluePrint);\n\t\tfor (const key of Object.keys(source)) {\n\t\t\ttarget[key] = getObservedOf(source[key], key, oMeta);\n\t\t}\n\t\treturn target;\n\t},\n\tprepareArray = function prepareArray(source, oMeta) {\n\t\tlet i = 0, l = source.length;\n\t\tpropertiesBluePrint[oMetaKey].value = oMeta;\n\t\tconst target = Object.defineProperties(new Array(l), propertiesBluePrint);\n\t\tfor (; i < l; i++) {\n\t\t\ttarget[i] = getObservedOf(source[i], i, oMeta);\n\t\t}\n\t\treturn target;\n\t},\n\tprepareTypedArray = function prepareTypedArray(source, oMeta) {\n\t\tpropertiesBluePrint[oMetaKey].value = oMeta;\n\t\tObject.defineProperties(source, propertiesBluePrint);\n\t\treturn source;\n\t},\n\tfilterChanges = function filterChanges(options, changes) {\n\t\tlet result = changes;\n\t\tif (options.path) {\n\t\t\tconst oPath = options.path;\n\t\t\tresult = changes.filter(change =>\n\t\t\t\tchange.path.join('.') === oPath\n\t\t\t);\n\t\t} else if (options.pathsOf) {\n\t\t\tconst oPathsOf = options.pathsOf;\n\t\t\tresult = changes.filter(change =>\n\t\t\t\tchange.path.length === oPathsOf.length + 1 ||\n\t\t\t\t(change.path.length === oPathsOf.length && (change.type === REVERSE || change.type === SHUFFLE))\n\t\t\t);\n\t\t} else if (options.pathsFrom) {\n\t\t\tconst oPathsFrom = options.pathsFrom;\n\t\t\tresult = changes.filter(change =>\n\t\t\t\tchange.path.join('.').startsWith(oPathsFrom)\n\t\t\t);\n\t\t}\n\t\treturn result;\n\t},\n\tcallObserverSafe = function callObserverSafe(listener, changes) {\n\t\ttry {\n\t\t\tlistener(changes);\n\t\t} catch (e) {\n\t\t\tconsole.error(`failed to notify listener ${listener} with ${changes}`, e);\n\t\t}\n\t},\n\tcallObserversFromMT = function callObserversFromMT() {\n\t\tconst batches = this.batches;\n\t\tthis.batches = null;\n\t\tfor (const [listener, options] of batches) {\n\t\t\tcallObserverSafe(listener, options);\n\t\t}\n\t},\n\tcallObservers = function callObservers(oMeta, changes) {\n\t\tlet currentObservable = oMeta;\n\t\tlet observers, target, options, relevantChanges, i, newPath, tmp;\n\t\tconst l = changes.length;\n\t\tdo {\n\t\t\tobservers = currentObservable.observers;\n\t\t\ti = observers.length;\n\t\t\twhile (i--) {\n\t\t\t\t[target, options] = observers[i];\n\t\t\t\trelevantChanges = filterChanges(options, changes);\n\n\t\t\t\tif (relevantChanges.length) {\n\t\t\t\t\tif (currentObservable.options.async) {\n\t\t\t\t\t\t//\tthis is the async dispatch handling\n\t\t\t\t\t\tif (!currentObservable.batches) {\n\t\t\t\t\t\t\tcurrentObservable.batches = [];\n\t\t\t\t\t\t\tqueueMicrotask(callObserversFromMT.bind(currentObservable));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet rb = currentObservable.batches.find(b => b[0] === target);\n\t\t\t\t\t\tif (!rb) {\n\t\t\t\t\t\t\trb = [target, []];\n\t\t\t\t\t\t\tcurrentObservable.batches.push(rb);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tArray.prototype.push.apply(rb[1], relevantChanges);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//\tthis is the naive straight forward synchronous dispatch\n\t\t\t\t\t\tcallObserverSafe(target, relevantChanges);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet tmpa;\n\t\t\tif (currentObservable.parent) {\n\t\t\t\ttmpa = new Array(l);\n\t\t\t\tfor (let i = 0; i < l; i++) {\n\t\t\t\t\ttmp = changes[i];\n\t\t\t\t\tnewPath = [currentObservable.ownKey, ...tmp.path];\n\t\t\t\t\ttmpa[i] = {\n\t\t\t\t\t\ttype: tmp.type,\n\t\t\t\t\t\tpath: newPath,\n\t\t\t\t\t\tvalue: tmp.value,\n\t\t\t\t\t\toldValue: tmp.oldValue,\n\t\t\t\t\t\tobject: tmp.object\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tchanges = tmpa;\n\t\t\t\tcurrentObservable = currentObservable.parent;\n\t\t\t} else {\n\t\t\t\tcurrentObservable = null;\n\t\t\t}\n\t\t} while (currentObservable);\n\t},\n\tgetObservedOf = function getObservedOf(item, key, parent) {\n\t\tif (!item || typeof item !== 'object') {\n\t\t\treturn item;\n\t\t} else if (Array.isArray(item)) {\n\t\t\treturn new ArrayOMeta({ target: item, ownKey: key, parent: parent }).proxy;\n\t\t} else if (ArrayBuffer.isView(item)) {\n\t\t\treturn new TypedArrayOMeta({ target: item, ownKey: key, parent: parent }).proxy;\n\t\t} else if (item instanceof Date || item instanceof Error) {\n\t\t\treturn item;\n\t\t} else {\n\t\t\treturn new ObjectOMeta({ target: item, ownKey: key, parent: parent }).proxy;\n\t\t}\n\t},\n\tproxiedPop = function proxiedPop() {\n\t\tconst oMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tpoppedIndex = target.length - 1;\n\n\t\tlet popResult = target.pop();\n\t\tif (popResult && typeof popResult === 'object') {\n\t\t\tconst tmpObserved = popResult[oMetaKey];\n\t\t\tif (tmpObserved) {\n\t\t\t\tpopResult = tmpObserved.detach();\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: DELETE, path: [poppedIndex], oldValue: popResult, object: this }];\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn popResult;\n\t},\n\tproxiedPush = function proxiedPush() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tl = arguments.length,\n\t\t\tpushContent = new Array(l),\n\t\t\tinitialLength = target.length;\n\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tpushContent[i] = getObservedOf(arguments[i], initialLength + i, oMeta);\n\t\t}\n\t\tconst pushResult = Reflect.apply(target.push, target, pushContent);\n\n\t\tconst changes = [];\n\t\tfor (let i = initialLength, l = target.length; i < l; i++) {\n\t\t\tchanges[i - initialLength] = { type: INSERT, path: [i], value: target[i], object: this };\n\t\t}\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn pushResult;\n\t},\n\tproxiedShift = function proxiedShift() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target;\n\t\tlet shiftResult, i, l, item, tmpObserved;\n\n\t\tshiftResult = target.shift();\n\t\tif (shiftResult && typeof shiftResult === 'object') {\n\t\t\ttmpObserved = shiftResult[oMetaKey];\n\t\t\tif (tmpObserved) {\n\t\t\t\tshiftResult = tmpObserved.detach();\n\t\t\t}\n\t\t}\n\n\t\t//\tupdate indices of the remaining items\n\t\tfor (i = 0, l = target.length; i < l; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\ttmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: DELETE, path: [0], oldValue: shiftResult, object: this }];\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn shiftResult;\n\t},\n\tproxiedUnshift = function proxiedUnshift() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tal = arguments.length,\n\t\t\tunshiftContent = new Array(al);\n\n\t\tfor (let i = 0; i < al; i++) {\n\t\t\tunshiftContent[i] = getObservedOf(arguments[i], i, oMeta);\n\t\t}\n\t\tconst unshiftResult = Reflect.apply(target.unshift, target, unshiftContent);\n\n\t\tfor (let i = 0, l = target.length, item; i < l; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tconst tmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//\tpublish changes\n\t\tconst l = unshiftContent.length;\n\t\tconst changes = new Array(l);\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tchanges[i] = { type: INSERT, path: [i], value: target[i], object: this };\n\t\t}\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn unshiftResult;\n\t},\n\tproxiedReverse = function proxiedReverse() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target;\n\t\tlet i, l, item;\n\n\t\ttarget.reverse();\n\t\tfor (i = 0, l = target.length; i < l; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tconst tmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: REVERSE, path: [], object: this }];\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn this;\n\t},\n\tproxiedSort = function proxiedSort(comparator) {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target;\n\t\tlet i, l, item;\n\n\t\ttarget.sort(comparator);\n\t\tfor (i = 0, l = target.length; i < l; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tconst tmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: SHUFFLE, path: [], object: this }];\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn this;\n\t},\n\tproxiedFill = function proxiedFill(filVal, start, end) {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tchanges = [],\n\t\t\ttarLen = target.length,\n\t\t\tprev = target.slice(0);\n\t\tstart = start === undefined ? 0 : (start < 0 ? Math.max(tarLen + start, 0) : Math.min(start, tarLen));\n\t\tend = end === undefined ? tarLen : (end < 0 ? Math.max(tarLen + end, 0) : Math.min(end, tarLen));\n\n\t\tif (start < tarLen && end > start) {\n\t\t\ttarget.fill(filVal, start, end);\n\n\t\t\tlet tmpObserved;\n\t\t\tfor (let i = start, item, tmpTarget; i < end; i++) {\n\t\t\t\titem = target[i];\n\t\t\t\ttarget[i] = getObservedOf(item, i, oMeta);\n\t\t\t\tif (prev.hasOwnProperty(i)) {\n\t\t\t\t\ttmpTarget = prev[i];\n\t\t\t\t\tif (tmpTarget && typeof tmpTarget === 'object') {\n\t\t\t\t\t\ttmpObserved = tmpTarget[oMetaKey];\n\t\t\t\t\t\tif (tmpObserved) {\n\t\t\t\t\t\t\ttmpTarget = tmpObserved.detach();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tchanges.push({ type: UPDATE, path: [i], value: target[i], oldValue: tmpTarget, object: this });\n\t\t\t\t} else {\n\t\t\t\t\tchanges.push({ type: INSERT, path: [i], value: target[i], object: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcallObservers(oMeta, changes);\n\t\t}\n\n\t\treturn this;\n\t},\n\tproxiedCopyWithin = function proxiedCopyWithin(dest, start, end) {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\ttarLen = target.length;\n\t\tdest = dest < 0 ? Math.max(tarLen + dest, 0) : dest;\n\t\tstart = start === undefined ? 0 : (start < 0 ? Math.max(tarLen + start, 0) : Math.min(start, tarLen));\n\t\tend = end === undefined ? tarLen : (end < 0 ? Math.max(tarLen + end, 0) : Math.min(end, tarLen));\n\t\tconst len = Math.min(end - start, tarLen - dest);\n\n\t\tif (dest < tarLen && dest !== start && len > 0) {\n\t\t\tconst\n\t\t\t\tprev = target.slice(0),\n\t\t\t\tchanges = [];\n\n\t\t\ttarget.copyWithin(dest, start, end);\n\n\t\t\tfor (let i = dest, nItem, oItem, tmpObserved; i < dest + len; i++) {\n\t\t\t\t//\tupdate newly placed observables, if any\n\t\t\t\tnItem = target[i];\n\t\t\t\tif (nItem && typeof nItem === 'object') {\n\t\t\t\t\tnItem = getObservedOf(nItem, i, oMeta);\n\t\t\t\t\ttarget[i] = nItem;\n\t\t\t\t}\n\n\t\t\t\t//\tdetach overridden observables, if any\n\t\t\t\toItem = prev[i];\n\t\t\t\tif (oItem && typeof oItem === 'object') {\n\t\t\t\t\ttmpObserved = oItem[oMetaKey];\n\t\t\t\t\tif (tmpObserved) {\n\t\t\t\t\t\toItem = tmpObserved.detach();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (typeof nItem !== 'object' && nItem === oItem) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tchanges.push({ type: UPDATE, path: [i], value: nItem, oldValue: oItem, object: this });\n\t\t\t}\n\n\t\t\tcallObservers(oMeta, changes);\n\t\t}\n\n\t\treturn this;\n\t},\n\tproxiedSplice = function proxiedSplice() {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tsplLen = arguments.length,\n\t\t\tspliceContent = new Array(splLen),\n\t\t\ttarLen = target.length;\n\n\t\t//\tobservify the newcomers\n\t\tfor (let i = 0; i < splLen; i++) {\n\t\t\tspliceContent[i] = getObservedOf(arguments[i], i, oMeta);\n\t\t}\n\n\t\t//\tcalculate pointers\n\t\tconst\n\t\t\tstartIndex = splLen === 0 ? 0 : (spliceContent[0] < 0 ? tarLen + spliceContent[0] : spliceContent[0]),\n\t\t\tremoved = splLen < 2 ? tarLen - startIndex : spliceContent[1],\n\t\t\tinserted = Math.max(splLen - 2, 0),\n\t\t\tspliceResult = Reflect.apply(target.splice, target, spliceContent),\n\t\t\tnewTarLen = target.length;\n\n\t\t//\treindex the paths\n\t\tlet tmpObserved;\n\t\tfor (let i = 0, item; i < newTarLen; i++) {\n\t\t\titem = target[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\ttmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\ttmpObserved.ownKey = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//\tdetach removed objects\n\t\tlet i, l, item;\n\t\tfor (i = 0, l = spliceResult.length; i < l; i++) {\n\t\t\titem = spliceResult[i];\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\ttmpObserved = item[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\tspliceResult[i] = tmpObserved.detach();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [];\n\t\tlet index;\n\t\tfor (index = 0; index < removed; index++) {\n\t\t\tif (index < inserted) {\n\t\t\t\tchanges.push({ type: UPDATE, path: [startIndex + index], value: target[startIndex + index], oldValue: spliceResult[index], object: this });\n\t\t\t} else {\n\t\t\t\tchanges.push({ type: DELETE, path: [startIndex + index], oldValue: spliceResult[index], object: this });\n\t\t\t}\n\t\t}\n\t\tfor (; index < inserted; index++) {\n\t\t\tchanges.push({ type: INSERT, path: [startIndex + index], value: target[startIndex + index], object: this });\n\t\t}\n\t\tcallObservers(oMeta, changes);\n\n\t\treturn spliceResult;\n\t},\n\tproxiedTypedArraySet = function proxiedTypedArraySet(source, offset) {\n\t\tconst\n\t\t\toMeta = this[oMetaKey],\n\t\t\ttarget = oMeta.target,\n\t\t\tsouLen = source.length,\n\t\t\tprev = target.slice(0);\n\t\toffset = offset || 0;\n\n\t\ttarget.set(source, offset);\n\t\tconst changes = new Array(souLen);\n\t\tfor (let i = offset; i < (souLen + offset); i++) {\n\t\t\tchanges[i - offset] = { type: UPDATE, path: [i], value: target[i], oldValue: prev[i], object: this };\n\t\t}\n\n\t\tcallObservers(oMeta, changes);\n\t},\n\tproxiedArrayMethods = {\n\t\tpop: proxiedPop,\n\t\tpush: proxiedPush,\n\t\tshift: proxiedShift,\n\t\tunshift: proxiedUnshift,\n\t\treverse: proxiedReverse,\n\t\tsort: proxiedSort,\n\t\tfill: proxiedFill,\n\t\tcopyWithin: proxiedCopyWithin,\n\t\tsplice: proxiedSplice\n\t},\n\tproxiedTypedArrayMethods = {\n\t\treverse: proxiedReverse,\n\t\tsort: proxiedSort,\n\t\tfill: proxiedFill,\n\t\tcopyWithin: proxiedCopyWithin,\n\t\tset: proxiedTypedArraySet\n\t};\n\nclass OMetaBase {\n\tconstructor(properties, cloningFunction) {\n\t\tconst { target, parent, ownKey } = properties;\n\t\tif (parent && ownKey !== undefined) {\n\t\t\tthis.parent = parent;\n\t\t\tthis.ownKey = ownKey;\n\t\t} else {\n\t\t\tthis.parent = null;\n\t\t\tthis.ownKey = null;\n\t\t}\n\t\tconst targetClone = cloningFunction(target, this);\n\t\tthis.observers = [];\n\t\tthis.revocable = Proxy.revocable(targetClone, this);\n\t\tthis.proxy = this.revocable.proxy;\n\t\tthis.target = targetClone;\n\t\tthis.options = this.processOptions(properties.options);\n\t}\n\n\tprocessOptions(options) {\n\t\tif (options) {\n\t\t\tif (typeof options !== 'object') {\n\t\t\t\tthrow new Error(`Observable options if/when provided, MAY only be an object, got '${options}'`);\n\t\t\t}\n\t\t\tconst invalidOptions = Object.keys(options).filter(option => !validObservableOptionKeys.hasOwnProperty(option));\n\t\t\tif (invalidOptions.length) {\n\t\t\t\tthrow new Error(`'${invalidOptions.join(', ')}' is/are not a valid Observable option/s`);\n\t\t\t}\n\t\t\treturn Object.assign({}, options);\n\t\t} else {\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tdetach() {\n\t\tthis.parent = null;\n\t\treturn this.target;\n\t}\n\n\tset(target, key, value) {\n\t\tlet oldValue = target[key];\n\n\t\tif (value !== oldValue) {\n\t\t\tconst newValue = getObservedOf(value, key, this);\n\t\t\ttarget[key] = newValue;\n\n\t\t\tif (oldValue && typeof oldValue === 'object') {\n\t\t\t\tconst tmpObserved = oldValue[oMetaKey];\n\t\t\t\tif (tmpObserved) {\n\t\t\t\t\toldValue = tmpObserved.detach();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst changes = oldValue === undefined\n\t\t\t\t? [{ type: INSERT, path: [key], value: newValue, object: this.proxy }]\n\t\t\t\t: [{ type: UPDATE, path: [key], value: newValue, oldValue: oldValue, object: this.proxy }];\n\t\t\tcallObservers(this, changes);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tdeleteProperty(target, key) {\n\t\tlet oldValue = target[key];\n\n\t\tdelete target[key];\n\n\t\tif (oldValue && typeof oldValue === 'object') {\n\t\t\tconst tmpObserved = oldValue[oMetaKey];\n\t\t\tif (tmpObserved) {\n\t\t\t\toldValue = tmpObserved.detach();\n\t\t\t}\n\t\t}\n\n\t\tconst changes = [{ type: DELETE, path: [key], oldValue: oldValue, object: this.proxy }];\n\t\tcallObservers(this, changes);\n\n\t\treturn true;\n\t}\n}\n\nclass ObjectOMeta extends OMetaBase {\n\tconstructor(properties) {\n\t\tsuper(properties, prepareObject);\n\t}\n}\n\nclass ArrayOMeta extends OMetaBase {\n\tconstructor(properties) {\n\t\tsuper(properties, prepareArray);\n\t}\n\n\tget(target, key) {\n\t\tif (proxiedArrayMethods.hasOwnProperty(key)) {\n\t\t\treturn proxiedArrayMethods[key];\n\t\t} else {\n\t\t\treturn target[key];\n\t\t}\n\t}\n}\n\nclass TypedArrayOMeta extends OMetaBase {\n\tconstructor(properties) {\n\t\tsuper(properties, prepareTypedArray);\n\t}\n\n\tget(target, key) {\n\t\tif (proxiedTypedArrayMethods.hasOwnProperty(key)) {\n\t\t\treturn proxiedTypedArrayMethods[key];\n\t\t} else {\n\t\t\treturn target[key];\n\t\t}\n\t}\n}\n\nclass Observable {\n\tconstructor() {\n\t\tthrow new Error('Observable MAY NOT be created via constructor, see \"Observable.from\" API');\n\t}\n\n\tstatic from(target, options) {\n\t\tif (!target || typeof target !== 'object') {\n\t\t\tthrow new Error('observable MAY ONLY be created from a non-null object');\n\t\t} else if (target[oMetaKey]) {\n\t\t\treturn target;\n\t\t} else if (Array.isArray(target)) {\n\t\t\treturn new ArrayOMeta({ target: target, ownKey: null, parent: null, options: options }).proxy;\n\t\t} else if (ArrayBuffer.isView(target)) {\n\t\t\treturn new TypedArrayOMeta({ target: target, ownKey: null, parent: null, options: options }).proxy;\n\t\t} else if (target instanceof Date || target instanceof Error) {\n\t\t\tthrow new Error(`${target} found to be one of a on-observable types`);\n\t\t} else {\n\t\t\treturn new ObjectOMeta({ target: target, ownKey: null, parent: null, options: options }).proxy;\n\t\t}\n\t}\n\n\tstatic isObservable(input) {\n\t\treturn !!(input && input[oMetaKey]);\n\t}\n}\n\nObject.freeze(Observable);\n\nexport { Observable };","import _g from \"./g\";\nimport { Globals } from \"./types\";\n\nexport default function utilsFactory(globals?: Globals): any {\n    const g = globals || _g;\n\n    const generateBareUrl = (type: string, integrationID: string): string => `https://api.easybase.io/${type}/${integrationID}`;\n\n    const generateAuthBody = (): any => {\n        const stamp = Date.now();\n        return {\n            token: g.token,\n            token_time: ~~(g.session / (stamp % 64)),\n            now: stamp\n        }\n    }\n    \n    function log(...params: any): void {\n        if (g.options.logging) {\n            console.log(\"EASYBASE — \", ...params);\n        }\n    }\n\n    return {\n        generateAuthBody,\n        generateBareUrl,\n        log\n    }\n}\n","import { POST_TYPES, AuthPostResponse, Globals, StatusResponse } from \"./types\";\nimport _g from \"./g\";\nimport utilsFactory from \"./utils\";\nimport fetch from 'cross-fetch';\n\nexport default function authFactory(globals?: Globals): any {\n    const g = globals || _g;\n\n    const { generateBareUrl, generateAuthBody, log } = utilsFactory(g);\n\n    const getUserAttributes = async (): Promise<Record<string, string>> => {\n        try {\n            const attrsRes = await tokenPost(POST_TYPES.USER_ATTRIBUTES);\n            return attrsRes.data;   \n        } catch (error) {\n            return error;\n        }\n    }\n\n    const setUserAttribute = async (key: string, value: string): Promise<StatusResponse> => {\n        try {\n            const setAttrsRes = await tokenPost(POST_TYPES.SET_ATTRIBUTE, {\n                key,\n                value\n            });\n\n            return {\n                success: setAttrsRes.success,\n                message: JSON.stringify(setAttrsRes.data)\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: \"Error\",\n                error\n            };\n        }\n    }\n\n    const signUp = async (newUserID: string, password: string, userAttributes?: Record<string, string>): Promise<StatusResponse> => {\n        try {\n            const signUpRes = await tokenPost(POST_TYPES.SIGN_UP, {\n                newUserID,\n                password,\n                userAttributes\n            });\n            return {\n                success: signUpRes.success,\n                message: signUpRes.data\n            }   \n        } catch (error) {\n            return {\n                success: false,\n                message: \"Error\",\n                error\n            }\n        }\n    }\n\n    const signIn = async (userID: string, password: string): Promise<StatusResponse> => {\n        const t1 = Date.now();\n        g.session = Math.floor(100000000 + Math.random() * 900000000);\n    \n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        try {\n            const res = await fetch(generateBareUrl(integrationType, g.integrationID), {\n                method: \"POST\",\n                headers: {\n                    'Eb-Post-Req': POST_TYPES.HANDSHAKE,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    version: g.ebconfig.version,\n                    session: g.session,\n                    instance: g.instance,\n                    userID,\n                    password\n                })\n            });\n\n            const resData = await res.json();\n    \n            if (resData.token) {\n                g.token = resData.token;\n                g.refreshToken = resData.refreshToken;\n                g.newTokenCallback();\n                g.mounted = true;\n                const validTokenRes = await tokenPost(POST_TYPES.VALID_TOKEN);\n                const elapsed = Date.now() - t1;\n                if (validTokenRes.success) {\n                    log(\"Valid auth initiation in \" + elapsed + \"ms\");\n                    return {\n                        success: true,\n                        message: \"Successfully signed in user\"\n                    };\n                } else {\n                    return {\n                        success: false,\n                        message: \"Could not sign in user\"\n                    };\n                }\n            } else {\n                return {\n                    success: false,\n                    message: \"Could not sign in user\"\n                };\n            }\n        } catch (error) {\n            console.error(error);\n            return {\n                success: false,\n                message: error,\n                error\n            };\n        }\n    }\n\n    const resetUserPassword = async (newPassword: string): Promise<StatusResponse> => {\n        if (typeof newPassword !== \"string\" || newPassword.length < 100) {\n            return {\n                success: false,\n                message: \"newPassword must be of type string\"\n            };\n        }\n        \n        try {\n            const setAttrsRes = await tokenPost(POST_TYPES.RESET_PASSWORD, { newPassword });\n\n            return {\n                success: setAttrsRes.success,\n                message: JSON.stringify(setAttrsRes.data)\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: \"Error\",\n                error\n            };\n        }\n    }\n    \n    const isUserSignedIn = (): boolean => g.token.length > 0;\n\n    const signOut = (): void => {\n        g.token = \"\";\n        g.newTokenCallback();\n    }\n\n    const initAuth = async (): Promise<boolean> => {\n        const t1 = Date.now();\n        g.session = Math.floor(100000000 + Math.random() * 900000000);\n    \n        log(`Handshaking on${g.instance} instance`);\n    \n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        try {\n\n            const res = await fetch(generateBareUrl(integrationType, g.integrationID), {\n                method: \"POST\",\n                headers: {\n                    'Eb-Post-Req': POST_TYPES.HANDSHAKE,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    version: g.ebconfig.version,\n                    tt: g.ebconfig.tt,\n                    session: g.session,\n                    instance: g.instance\n                })\n            });\n\n            const resData = await res.json();\n    \n            if (resData.token) {\n                g.token = resData.token;\n                g.mounted = true;\n                const validTokenRes = await tokenPost(POST_TYPES.VALID_TOKEN);\n                const elapsed = Date.now() - t1;\n                if (validTokenRes.success) {\n                    log(\"Valid auth initiation in \" + elapsed + \"ms\");\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        } catch (error) {\n            console.error(error);\n            return false;\n        }\n    }\n    \n    const tokenPost = async (postType: POST_TYPES, body?: {}): Promise<AuthPostResponse> => {\n        if (!g.mounted) {\n            await initAuth();\n        }\n\n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        try {\n            const res = await fetch(generateBareUrl(integrationType, g.integrationID), {\n                method: \"POST\",\n                headers: {\n                    'Eb-Post-Req': postType,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    _auth: generateAuthBody(),\n                    ...body\n                })\n            });\n\n            const resData = await res.json();\n\n            if ({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code')) {\n                if (resData.code === \"JWT EXPIRED\") {\n                    if (integrationType === \"PROJECT\") {\n                        const req_res = await tokenPost(POST_TYPES.REQUEST_TOKEN, {\n                            refreshToken: g.refreshToken,\n                            token: g.token\n                        });\n\n                        if (req_res.success) {\n                            g.token = req_res.data.token\n                            g.newTokenCallback();\n                            return tokenPost(postType, body);\n                        } else {\n                            g.token = \"\";\n                            g.refreshToken = \"\";\n                            g.newTokenCallback();\n                            return {\n                                success: false,\n                                data: req_res.data\n                            }\n                        }\n                    } else {\n                        await initAuth();\n                    }\n                    return tokenPost(postType, body);\n                }\n    \n                return {\n                    success: false,\n                    data: resData.body\n                }\n            } else {\n                return {\n                    success: resData.success,\n                    data: resData.body\n                }\n            }\n        } catch (error) {\n            return {\n                success: false,\n                data: error\n            }\n        }\n    }\n    \n    const tokenPostAttachment = async (formData: FormData, customHeaders: {}): Promise<AuthPostResponse> => {\n\n        if (!g.mounted) {\n            await initAuth();\n        }\n\n        const regularAuthbody = generateAuthBody();\n    \n        const attachmentAuth = {\n            'Eb-token': regularAuthbody.token,\n            'Eb-token-time': regularAuthbody.token_time,\n            'Eb-now': regularAuthbody.now\n        };\n    \n        const integrationType = g.ebconfig.integration.split(\"-\")[0].toUpperCase() === \"PROJECT\" ? \"PROJECT\" : \"REACT\";\n\n        try {\n            const res = await fetch(generateBareUrl(integrationType, g.integrationID), {\n                method: \"POST\",\n                headers: {\n                    'Eb-Post-Req': POST_TYPES.UPLOAD_ATTACHMENT,\n                    ...customHeaders,\n                    ...attachmentAuth\n                },\n                body: formData\n            });\n\n            const resData = await res.json();\n\n            if ({}.hasOwnProperty.call(resData, 'ErrorCode') || {}.hasOwnProperty.call(resData, 'code')) {\n                if (resData.code === \"JWT EXPIRED\") {\n                    if (integrationType === \"PROJECT\") {\n                        const req_res = await tokenPost(POST_TYPES.REQUEST_TOKEN, {\n                            refreshToken: g.refreshToken,\n                            token: g.token\n                        });\n\n                        if (req_res.success) {\n                            g.token = req_res.data.token\n                            g.newTokenCallback();\n                            return tokenPostAttachment(formData, customHeaders);\n                        } else {\n                            g.token = \"\";\n                            g.refreshToken = \"\";\n                            g.newTokenCallback();\n                            return {\n                                success: false,\n                                data: req_res.data\n                            }\n                        }\n                    } else {\n                        await initAuth();\n                    }\n                    return tokenPostAttachment(formData, customHeaders);\n                }\n    \n                return {\n                    success: false,\n                    data: resData.body\n                }\n            } else {\n                return {\n                    success: resData.success,\n                    data: resData.body\n                }\n            }\n        } catch (error) {\n            return {\n                success: false,\n                data: error\n            }\n        }\n    }\n    \n    return {\n        initAuth,\n        tokenPost,\n        tokenPostAttachment,\n        signUp,\n        setUserAttribute,\n        getUserAttributes,\n        isUserSignedIn,\n        signIn,\n        signOut,\n        resetUserPassword\n    }\n}\n","import {\n    POST_TYPES,\n    QueryOptions,\n    Globals\n} from \"./types\";\nimport _g from \"./g\";\n\nimport authFactory from \"./auth\";\n\nexport default function tableFactory(globals?: Globals): any {\n\n    const g = globals || _g;\n\n    const { tokenPost } = authFactory(g);\n\n    const Query = async (options: QueryOptions): Promise<Record<string, any>[]> => {\n        const defaultOptions: QueryOptions = {\n            queryName: \"\"\n        }\n    \n        const fullOptions: QueryOptions = { ...defaultOptions, ...options };\n    \n        try {\n            const res = await tokenPost(POST_TYPES.GET_QUERY, fullOptions);\n            return res.data\n        } catch (error) {\n            return [];\n        }\n    }\n\n    async function fullTableSize(): Promise<number>;\n    async function fullTableSize(tableName: string): Promise<number>;\n    async function fullTableSize(tableName?: string): Promise<number> {\n        const res = await tokenPost(POST_TYPES.TABLE_SIZE, tableName ? { tableName } : {});\n        if (res.success) {\n            return res.data;\n        } else {\n            return 0;\n        }\n    }\n\n    async function tableTypes(): Promise<Record<string, any>>;\n    async function tableTypes(tableName: string): Promise<Record<string, any>>\n    async function tableTypes(tableName?: string): Promise<Record<string, any>> {\n        const res = await tokenPost(POST_TYPES.COLUMN_TYPES, tableName ? { tableName } : {});\n        if (res.success) {\n            return res.data;\n        } else {\n            return {};\n        }\n    }\n\n    return {\n        Query,\n        fullTableSize,\n        tableTypes\n    };\n}","import _g from \"./g\";\nimport easyqb from 'EasyQB';\nimport { SQW } from \"EasyQB/types/sq\";\nimport { NewExpression } from \"EasyQB/types/expression\";\nimport authFactory from \"./auth\";\nimport { POST_TYPES, DB_STATUS, Globals, EXECUTE_COUNT } from \"./types\";\n\ninterface IdbFactory {\n    db: (tableName?: string, userAssociatedRecordsOnly?: boolean) => SQW;\n    dbEventListener: (callback: (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void) => () => void;\n    e: NewExpression;\n}\n\nexport default function dbFactory(globals?: Globals): IdbFactory {\n    const g = globals || _g;\n    const { tokenPost } = authFactory(g);\n    let _listenerIndex = 0;\n\n    const _listeners: Record<string, (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void> = {};\n\n    function _runListeners(...params: any[]) {\n        for (const cb of Object.values(_listeners)) {\n            cb(...params)\n        }\n    }\n\n    const dbEventListener = (callback: (status?: DB_STATUS, queryType?: string, executeCount?: EXECUTE_COUNT, tableName?: string | null, returned?: any) => void): () => void => {\n        const currKey = '' + _listenerIndex++;\n        _listeners[currKey] = callback;\n        return () => {\n            delete _listeners[currKey]\n        }\n    }\n\n    const allCallback = async (trx: any, tableName: string, userAssociatedRecordsOnly?: boolean): Promise<Record<string, any>[] | number[]> => {\n        trx.count = \"all\";\n        trx.tableName = tableName;\n        if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n        _runListeners(DB_STATUS.PENDING, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n        const res = await tokenPost(POST_TYPES.EASY_QB, trx);\n        if (res.success) {\n            _runListeners(DB_STATUS.SUCCESS, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null, res.data);\n            return res.data;\n        } else {\n            _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ALL, tableName !== \"untable\" ? tableName : null);\n            return res;\n        }\n    }\n\n    const oneCallback = async (trx: any, tableName: string, userAssociatedRecordsOnly?: boolean): Promise<Record<string, any> | number> => {\n        trx.count = \"one\";\n        trx.tableName = tableName;\n        if (userAssociatedRecordsOnly) trx.userAssociatedRecordsOnly = userAssociatedRecordsOnly;\n        _runListeners(DB_STATUS.PENDING, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n        const res = await tokenPost(POST_TYPES.EASY_QB, trx);\n        if (res.success) {\n            _runListeners(DB_STATUS.SUCCESS, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null, res.data);\n            return res.data;\n        } else {\n            _runListeners(DB_STATUS.ERROR, trx.type, EXECUTE_COUNT.ONE, tableName !== \"untable\" ? tableName : null);\n            return res;\n        }\n    }\n\n    const db = (tableName?: string, userAssociatedRecordsOnly?: boolean) => {\n        if (tableName && typeof tableName === \"string\") {\n            return easyqb({ allCallback, oneCallback, userAssociatedRecordsOnly, tableName: tableName.toUpperCase() })(tableName.replace(/[^0-9a-zA-Z]/g, '_').toUpperCase());\n        } else {\n            return easyqb({ allCallback, oneCallback, userAssociatedRecordsOnly, tableName: \"untable\" })(\"untable\");\n        }\n    }\n    \n    return {\n        db,\n        dbEventListener,\n        e: easyqb().e\n    }\n}\n","import {\n    EasybaseProviderProps,\n    FrameConfiguration,\n    POST_TYPES,\n    FileFromURI,\n    ContextValue,\n    AddRecordOptions,\n    StatusResponse,\n    ConfigureFrameOptions,\n    UpdateRecordAttachmentOptions,\n    DeleteRecordOptions\n} from \"./types\";\nimport { gFactory } from \"./g\";\nimport deepEqual from \"fast-deep-equal\";\nimport { Observable } from \"./object-observer\";\nimport imageExtensions from \"./assets/image-extensions.json\";\nimport videoExtensions from \"./assets/video-extensions.json\";\nimport authFactory from \"./auth\";\nimport utilsFactory from \"./utils\";\nimport tableFactory from \"./table\";\nimport dbFactory from './db';\n\nexport default function EasybaseProvider({ ebconfig, options }: EasybaseProviderProps): ContextValue {\n\n    const g = gFactory();\n\n    const {\n        tokenPost,\n        tokenPostAttachment,\n        signUp,\n        setUserAttribute,\n        getUserAttributes,\n        isUserSignedIn,\n        signIn,\n        signOut,\n        resetUserPassword\n    } = authFactory(g);\n\n    const {\n        Query,\n        fullTableSize,\n        tableTypes\n    } = tableFactory(g);\n\n    const {\n        db,\n        dbEventListener,\n        e\n    } = dbFactory(g);\n\n    const { log } = utilsFactory(g);\n\n    if (typeof ebconfig !== 'object' || ebconfig === null || ebconfig === undefined) {\n        console.error(\"No ebconfig object passed. do `import ebconfig from \\\"ebconfig.js\\\"` and pass it to the Easybase provider\");\n        return;\n    } else if (!ebconfig.integration) {\n        console.error(\"Invalid ebconfig object passed. Download ebconfig.js from Easybase.io and try again.\");\n        return;\n    }\n\n    // eslint-disable-next-line dot-notation\n    const isIE = typeof document !== 'undefined' && !!document['documentMode'];\n\n    if (isIE) {\n        console.error(\"EASYBASE — easybasejs does not support Internet Explorer. Please use a different browser.\");\n    }\n\n    g.options = { ...options };\n    g.integrationID = ebconfig.integration;\n    g.ebconfig = ebconfig;\n    if (g.ebconfig.tt && g.ebconfig.integration.split(\"-\")[0].toUpperCase() !== \"PROJECT\") {\n        g.mounted = false;\n    } else {\n        g.mounted = true;\n    }\n    g.instance = \"Node\";\n\n    let _isFrameInitialized = true;\n    let _frameConfiguration: FrameConfiguration = {\n        offset: 0,\n        limit: 0\n    };\n    const _observedChangeStack: Record<string, any>[] = [];\n    let _recordIdMap: WeakMap<Record<string, any>, \"string\"> = new WeakMap();\n    let _observableFrame = {\n        observe: (_) => { },\n        unobserve: () => { }\n    }\n    let _frame: Record<string, any>[] = [];\n\n    let isSyncing = false;\n\n    function Frame(): Record<string, any>[];\n    function Frame(index: number): Record<string, any>;\n    function Frame(index?: number): Record<string, any>[] | Record<string, any> {\n        if (typeof index === \"number\") {\n            return _observableFrame[index];\n        } else {\n            return _observableFrame;\n        }\n    }\n\n    const _recordIDExists = (record: Record<string, any>): Boolean => !!_recordIdMap.get(record);\n\n    const configureFrame = (options: ConfigureFrameOptions): StatusResponse => {\n        _frameConfiguration = { ..._frameConfiguration };\n\n        if (options.limit !== undefined) _frameConfiguration.limit = options.limit;\n        if (options.offset !== undefined && options.offset >= 0) _frameConfiguration.offset = options.offset;\n        if (options.tableName !== undefined) _frameConfiguration.tableName = options.tableName;\n\n        _isFrameInitialized = false;\n        return {\n            message: \"Successfully configured frame. Run sync() for changes to be shown in frame\",\n            success: true\n        }\n    }\n\n    const currentConfiguration = (): FrameConfiguration => ({ ..._frameConfiguration });\n\n    const deleteRecord = async (options: DeleteRecordOptions): Promise<StatusResponse> => {\n        const _frameRecord = _frame.find(ele => deepEqual(ele, options.record));\n\n        if (_frameRecord && _recordIdMap.get(_frameRecord)) {\n            const res = await tokenPost(POST_TYPES.SYNC_DELETE, {\n                _id: _recordIdMap.get(_frameRecord),\n                tableName: options.tableName\n            });\n            return {\n                success: res.success,\n                message: res.data\n            }\n        } else {\n            try {\n                const res = await tokenPost(POST_TYPES.SYNC_DELETE, {\n                    record: options.record,\n                    tableName: options.tableName\n                });\n                return {\n                    success: res.success,\n                    message: res.data\n                }\n            } catch (err) {\n                console.error(\"Easybase Error: deleteRecord failed \", err);\n                return {\n                    success: false,\n                    message: \"Easybase Error: deleteRecord failed \" + err,\n                    error: err\n                }\n            }\n        }\n    }\n\n    const addRecord = async (options: AddRecordOptions): Promise<StatusResponse> => {\n        const defaultValues: AddRecordOptions = {\n            insertAtEnd: false,\n            newRecord: {},\n            tableName: undefined\n        }\n\n        const fullOptions: AddRecordOptions = { ...defaultValues, ...options };\n\n        try {\n            const res = await tokenPost(POST_TYPES.SYNC_INSERT, fullOptions);\n            return {\n                message: res.data,\n                success: res.success\n            }\n        } catch (err) {\n            console.error(\"Easybase Error: addRecord failed \", err);\n            return {\n                message: \"Easybase Error: addRecord failed \" + err,\n                success: false,\n                error: err\n            }\n        }\n    }\n\n    // Only allow the deletion of one element at a time\n    // First handle shifting of the array size. Then iterate\n    const sync = async (): Promise<StatusResponse> => {\n        const _realignFrames = (newData: Record<string, any>[]) => {\n            let isNewDataTheSame = true;\n\n            if (newData.length !== _frame.length) {\n                isNewDataTheSame = false;\n            } else {\n                for (let i = 0; i < newData.length; i++) {\n                    const newDataNoId = { ...newData[i] };\n                    delete newDataNoId._id;\n                    if (!deepEqual(newDataNoId, _frame[i])) {\n                        isNewDataTheSame = false;\n                        break;\n                    }\n                }\n            }\n\n            if (!isNewDataTheSame) {\n                const oldframe = [..._frame];\n                oldframe.length = newData.length;\n                _recordIdMap = new WeakMap();\n                for (let i = 0; i < newData.length; i++) {\n                    const currNewEle = newData[i];\n                    _recordIdMap.set(currNewEle, currNewEle._id);\n                    delete currNewEle._id;\n                    oldframe[i] = currNewEle;\n                }\n                _frame = oldframe;\n                _observableFrame.unobserve();\n                _observableFrame = Observable.from(_frame);\n\n                _observableFrame.observe((allChanges: any[]) => {\n                    allChanges.forEach((change: any) => {\n                        _observedChangeStack.push({\n                            type: change.type,\n                            path: change.path,\n                            value: change.value,\n                            _id: _recordIdMap.get(_frame[Number(change.path[0])])\n                            // Not bringing change.object or change.oldValue\n                        });\n                        log(JSON.stringify({\n                            type: change.type,\n                            path: change.path,\n                            value: change.value,\n                            _id: _recordIdMap.get(_frame[Number(change.path[0])])\n                            // Not bringing change.object or change.oldValue\n                        }))\n                    });\n                });\n            }\n        }\n\n        if (isSyncing) {\n            return {\n                success: false,\n                message: \"Easybase Error: the provider is currently syncing, use 'await sync()' before calling sync() again\"\n            };\n        }\n\n        isSyncing = true;\n\n        if (_isFrameInitialized) {\n            if (_observedChangeStack.length > 0) {\n                log(\"Stack change: \", _observedChangeStack);\n                const res = await tokenPost(POST_TYPES.SYNC_STACK, {\n                    stack: _observedChangeStack,\n                    ..._frameConfiguration\n                });\n                if (res.success) {\n                    _observedChangeStack.length = 0;\n                }\n            }\n        }\n\n        try {\n            const res = await tokenPost(POST_TYPES.GET_FRAME, _frameConfiguration);\n\n            // Check if the array recieved from db is the same as frame\n            // If not, update it and send useFrameEffect\n\n            if (res.success === false) {\n                console.error(res.data);\n                isSyncing = false;\n                return {\n                    success: false,\n                    message: \"\" + res.data\n                }\n            } else {\n                _isFrameInitialized = true;\n                _realignFrames(res.data);\n                isSyncing = false;\n                return {\n                    message: 'Success. Call frame for data',\n                    success: true\n                }\n            }\n        } catch (err) {\n            console.error(\"Easybase Error: get failed \", err);\n            isSyncing = false;\n            return {\n                success: false,\n                message: \"Easybase Error: get failed \" + err,\n                error: err\n            }\n        }\n    }\n\n    const updateRecordImage = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"image\");\n        return res;\n    }\n    const updateRecordVideo = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"video\");\n        return res;\n    }\n    const updateRecordFile = async (options: UpdateRecordAttachmentOptions): Promise<StatusResponse> => {\n        const res = await _updateRecordAttachment(options, \"file\");\n        return res;\n    }\n\n    const _updateRecordAttachment = async (options: UpdateRecordAttachmentOptions, type: string): Promise<StatusResponse> => {\n        const _frameRecord: Record<string, any> | undefined = _frame.find(ele => deepEqual(ele, options.record));\n\n        if (_frameRecord === undefined || !_recordIDExists(_frameRecord)) {\n            log(\"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\");\n            return {\n                success: false,\n                message: \"Attempting to add attachment to a new record that has not been synced. Please sync() before trying to add attachment.\"\n            }\n        }\n\n        const ext: string = options.attachment.name.split(\".\").pop()!.toLowerCase();\n\n        log(ext);\n\n        if (type === \"image\" && !imageExtensions.includes(ext)) {\n            return {\n                success: false,\n                message: \"Image files must have a proper image extension in the file name\"\n            };\n        }\n\n        if (type === \"video\" && !videoExtensions.includes(ext)) {\n            return {\n                success: false,\n                message: \"Video files must have a proper video extension in the file name\"\n            };\n        }\n\n        function isFileFromURI(f: File | FileFromURI): f is FileFromURI {\n            return (f as FileFromURI).uri !== undefined;\n        }\n\n        const formData = new FormData();\n\n        if (isFileFromURI(options.attachment)) {\n            formData.append(\"file\", options.attachment as any);\n            formData.append(\"name\", options.attachment.name);\n        } else {\n            formData.append(\"file\", options.attachment);\n            formData.append(\"name\", options.attachment.name);\n        }\n\n        const customHeaders = {\n            'Eb-upload-type': type,\n            'Eb-column-name': options.columnName,\n            'Eb-record-id': _recordIdMap.get(_frameRecord),\n            'Eb-table-name': options.tableName\n        }\n\n        const res = await tokenPostAttachment(formData, customHeaders);\n\n        await sync();\n\n        return {\n            message: res.data,\n            success: res.success\n        };\n    }\n\n    const c: ContextValue = {\n        /** +++ Will be deprecated */\n        configureFrame,\n        addRecord,\n        deleteRecord,\n        sync,\n        Frame,\n        currentConfiguration,\n        /** --- */\n        updateRecordImage,\n        updateRecordVideo,\n        updateRecordFile,\n        fullTableSize,\n        tableTypes,\n        Query,\n        isUserSignedIn,\n        signIn,\n        signOut,\n        signUp,\n        resetUserPassword,\n        setUserAttribute,\n        getUserAttributes,\n        db,\n        dbEventListener,\n        e\n    }\n\n    return c;\n}\n","import fetch from 'cross-fetch';\n\nexport { default as EasybaseProvider } from \"./EasybaseProvider/EasybaseProvider\";\n\nconst generateBareUrl = (type, integrationID) => `https://api.easybase.io/${type}/${integrationID}`;\nconst isBadInt = (my_int) => my_int !== undefined && my_int !== null && Math.floor(my_int) !== my_int;\nconst isBadString = (my_string) => my_string !== undefined && my_string !== null && typeof my_string !== \"string\";\nconst isBadIntegrationID = (my_string) => my_string === undefined || my_string === null || typeof my_string !== \"string\";\nconst isBadObject = (my_obj) => my_obj !== undefined && my_obj !== null && typeof my_obj !== \"object\";\nconst isBadBool = (my_bool) => my_bool !== undefined && my_bool !== null && typeof my_bool !== \"boolean\";\n\ninterface GetOptions {\n    /** EasyBase integration ID. Can be found by expanding the integration menu. This id is automatically generated.  */\n    integrationID: string;\n    /** Edit starting index from which records will be retrieved from. Useful for paging. */\n    offset?: number;\n    /** Limit the amount of records to be retrieved. Can be used in combination with offset. */\n    limit?: number;\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. */\n    customQuery?: Record<string, unknown>;\n}\n\n/**\n * \n * @param {GetOptions} options GetOptions.\n * @returns {Promise<Array>} Array of records.\n * \n */\nexport function get(options: GetOptions): Promise<Array<Record<string, unknown>>> {\n\n    const defaultOptions: GetOptions = {\n        integrationID: \"\",\n        offset: undefined,\n        limit: undefined,\n        authentication: undefined,\n        customQuery: undefined\n    }\n    const { integrationID, offset, limit, authentication, customQuery } = { ...defaultOptions, ...options };\n\n    if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n    if (isBadInt(offset)) throw new Error(\"offset must be an integer\");\n    if (isBadInt(limit)) throw new Error(\"limit must be an integer\");\n    if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n    if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n\n    return new Promise((resolve, reject) => {\n        try {\n            let fetch_body: any = {};\n            if (typeof customQuery === \"object\") fetch_body = { ...customQuery };\n            if (offset !== undefined) fetch_body.offset = offset;\n            if (limit !== undefined) fetch_body.limit = limit;\n            if (authentication !== undefined) fetch_body.authentication = authentication;\n\n            fetch(generateBareUrl('get', integrationID), {\n                method: \"POST\",\n                body: JSON.stringify(fetch_body),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(res => res.json())\n                .then(resData => {\n                    if ({}.hasOwnProperty.call(resData, 'ErrorCode')) {\n                        console.error(resData.message);\n                        resolve([resData.message]);\n                    } else resolve(resData);\n                });\n        }\n        catch (err) { reject(err); }\n    });\n}\n\n\n\ninterface PostOptions {\n    /** EasyBase integration ID. Can be found by expanding the integration menu. This id is automatically generated.  */\n    integrationID: string;\n    /** Values to post to EasyBase collection. Format is { column name: value } */\n    newRecord: Record<string, unknown>;\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** If true, record will be inserted at the end of the collection rather than the front. */\n    insertAtEnd?: boolean;\n}\n\n/**\n * \n * @param {PostOptions} options PostOptions\n * @returns {Promise<String>} Post status.\n * \n */\nexport function post(options: PostOptions): Promise<string> {\n\n    const defaultValues: PostOptions = {\n        integrationID: \"\",\n        newRecord: undefined,\n        authentication: undefined,\n        insertAtEnd: undefined\n    }\n\n    const { integrationID, newRecord, authentication, insertAtEnd } = { ...defaultValues, ...options };\n\n    if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n    if (isBadObject(newRecord)) throw new Error(\"newRecord is required and must be a string\");\n    if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n    if (isBadBool(insertAtEnd)) throw new Error(\"insertAtEnd must be a boolean or null\");\n\n    return new Promise((resolve, reject) => {\n        try {\n            const fetch_body: any = { ...newRecord };\n            if (authentication !== undefined) fetch_body.authentication = authentication;\n            if (insertAtEnd !== undefined) fetch_body.insertAtEnd = insertAtEnd;\n\n            fetch(generateBareUrl('post', integrationID), {\n                method: \"POST\",\n                body: JSON.stringify(fetch_body),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(res => res.json())\n                .then(resData => {\n                    if ({}.hasOwnProperty.call(resData, 'ErrorCode')) console.error(resData.message);\n                    resolve(resData);\n                });\n        }\n        catch (err) { reject(err); }\n    });\n}\n\n\ninterface UpdateOptions {\n    /** EasyBase integration ID. Can be found by expanding the integration menu. This id is automatically generated.  */\n    integrationID: string;\n    /** Values to update records with. Format is { column_name: new value } */\n    updateValues: Record<string, unknown>;\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. */\n    customQuery?: Record<string, unknown>;\n}\n\n/**\n * \n * @param {UpdateOptions} options UpdateOptions\n * @returns {Promise<String>} Update status.\n */\nexport function update(options: UpdateOptions): Promise<string> {\n    const defaultValues: UpdateOptions = {\n        integrationID: \"\",\n        updateValues: undefined,\n        authentication: undefined,\n        customQuery: undefined\n    }\n\n    const { integrationID, updateValues, authentication, customQuery } = { ...defaultValues, ...options };\n\n    if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n    if (isBadObject(updateValues) || updateValues === undefined) throw new Error(\"updateValues is required and must be a string\");\n    if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n    if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n\n    return new Promise((resolve, reject) => {\n        try {\n            const fetch_body: any = { updateValues, ...customQuery };\n            if (authentication !== undefined) fetch_body.authentication = authentication;\n\n            fetch(generateBareUrl('update', integrationID), {\n                method: \"POST\",\n                body: JSON.stringify(fetch_body),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(res => res.json())\n                .then(resData => {\n                    if ({}.hasOwnProperty.call(resData, 'ErrorCode')) console.error(resData.message);\n                    resolve(resData.message);\n                });\n        }\n        catch (err) { reject(err); }\n    });\n}\n\ninterface DeleteOptions {\n    /** EasyBase integration ID. Can be found by expanding the integration menu. This id is automatically generated.  */\n    integrationID: string;\n    /** Custom authentication string. Can be set in integration menu. If it is set, it is required to access integration. This acts as an extra layer of security and extensibility. */\n    authentication?: string;\n    /** This object can be set to overwrite the query values as set in the integration menu. If your query is setup to find records where 'age' >= 0, passing in { age: 50 } will query where 'age' >= 50. */\n    customQuery?: Record<string, unknown>;\n}\n\n\n/**\n * \n * @param {DeleteOptions} options DeleteOptions\n * @return {Promise<String>} Delete status.\n */\nexport function Delete(options: DeleteOptions): Promise<string> {\n\n    const defaultValues: DeleteOptions = {\n        integrationID: \"\",\n        authentication: undefined,\n        customQuery: undefined\n    }\n\n    const { integrationID, authentication, customQuery } = { ...defaultValues, ...options };\n\n    if (isBadIntegrationID(integrationID)) throw new Error(\"integrationID is required and must be a string\");\n    if (isBadString(authentication)) throw new Error(\"authentication must be a string or null\");\n    if (isBadObject(customQuery)) throw new Error(\"customQuery must be an object or null\");\n\n    return new Promise((resolve, reject) => {\n        try {\n            const fetch_body: any = { ...customQuery };\n            if (authentication !== undefined) fetch_body.authentication = authentication;\n\n            fetch(generateBareUrl('delete', integrationID), {\n                method: \"POST\",\n                body: JSON.stringify(fetch_body),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(res => res.json())\n                .then(resData => {\n                    if ({}.hasOwnProperty.call(resData, 'ErrorCode')) console.error(resData.message);\n                    resolve(resData.message);\n                });\n        }\n        catch (err) { reject(err); }\n    });\n}\n\n/**\n * @async\n * Call a cloud function, created in Easybase interface.\n * @param {string} route Route as detailed in Easybase. Found under 'Deploy'. Will be in the form of ####...####-function-name.\n * @param {Record<string, any>} postBody Optional object to pass as the body of the POST request. This object will available in your cloud function's event.body.\n * @return {Promise<string>} Response from your cloud function. Detailed with a call to 'return context.succeed(\"RESPONSE\")'.\n */\nexport async function callFunction(route: string, postBody?: Record<string, any>): Promise<string> {\n\n    const res = await fetch(generateBareUrl('function', route.split(\"/\").pop()), {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postBody) || \"\"\n    });\n\n    const rawDataText = await res.text();\n    return rawDataText;\n}"]},"metadata":{},"sourceType":"module"}