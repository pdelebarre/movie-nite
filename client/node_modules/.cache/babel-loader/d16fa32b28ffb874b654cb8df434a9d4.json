{"ast":null,"code":"////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2016 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n'use strict';\n\nvar arrayPrototype = Array.prototype; // eslint-disable-next-line no-undef\n\nvar iteratorPrototype = {}; // These iterators should themselves be iterable.\n\nObject.defineProperty(iteratorPrototype, Symbol.iterator, {\n  value: function () {\n    return this;\n  }\n});\n['toString', 'toLocaleString', 'concat', 'join', 'slice', 'lastIndexOf', 'every', 'some', 'forEach', 'find', 'findIndex', 'map', 'filter', 'reduce', 'reduceRight'].forEach(function (methodName) {\n  var method = arrayPrototype[methodName];\n\n  if (method) {\n    exports[methodName] = {\n      value: method,\n      configurable: true,\n      writable: true\n    };\n  }\n});\n['entries', 'keys', 'values'].forEach(function (methodName) {\n  var method = function () {\n    var self = this.type === \"object\" ? this.snapshot() : this;\n    var index = 0;\n    return Object.create(iteratorPrototype, {\n      next: {\n        value: function () {\n          if (!self || index >= self.length) {\n            self = null;\n            return {\n              done: true,\n              value: undefined\n            };\n          }\n\n          var value;\n\n          switch (methodName) {\n            case 'entries':\n              value = [index, self[index]];\n              break;\n\n            case 'keys':\n              value = index;\n              break;\n\n            default:\n              value = self[index];\n          }\n\n          index++;\n          return {\n            done: false,\n            value: value\n          };\n        }\n      }\n    });\n  };\n\n  exports[methodName] = {\n    value: method,\n    configurable: true,\n    writable: true\n  };\n});\nexports[Symbol.iterator] = exports.values;","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/realm/lib/collection-methods.js"],"names":["arrayPrototype","Array","prototype","iteratorPrototype","Object","defineProperty","Symbol","iterator","value","forEach","methodName","method","exports","configurable","writable","self","type","snapshot","index","create","next","length","done","undefined","values"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,cAAc,GAAGC,KAAK,CAACC,SAA3B,C,CAEA;;AACA,IAAIC,iBAAiB,GAAG,EAAxB,C,CAEA;;AACAC,MAAM,CAACC,cAAP,CAAsBF,iBAAtB,EAAyCG,MAAM,CAACC,QAAhD,EAA0D;AACtDC,EAAAA,KAAK,EAAE,YAAW;AACd,WAAO,IAAP;AACH;AAHqD,CAA1D;AAMA,CACI,UADJ,EAEI,gBAFJ,EAGI,QAHJ,EAII,MAJJ,EAKI,OALJ,EAMI,aANJ,EAOI,OAPJ,EAQI,MARJ,EASI,SATJ,EAUI,MAVJ,EAWI,WAXJ,EAYI,KAZJ,EAaI,QAbJ,EAcI,QAdJ,EAeI,aAfJ,EAgBEC,OAhBF,CAgBU,UAASC,UAAT,EAAqB;AAC3B,MAAIC,MAAM,GAAGX,cAAc,CAACU,UAAD,CAA3B;;AACA,MAAIC,MAAJ,EAAY;AACRC,IAAAA,OAAO,CAACF,UAAD,CAAP,GAAsB;AAACF,MAAAA,KAAK,EAAEG,MAAR;AAAgBE,MAAAA,YAAY,EAAE,IAA9B;AAAoCC,MAAAA,QAAQ,EAAE;AAA9C,KAAtB;AACH;AACJ,CArBD;AAuBA,CAAC,SAAD,EAAY,MAAZ,EAAoB,QAApB,EAA8BL,OAA9B,CAAsC,UAASC,UAAT,EAAqB;AACvD,MAAIC,MAAM,GAAG,YAAW;AACpB,QAAII,IAAI,GAAI,KAAKC,IAAL,KAAc,QAAf,GAA2B,KAAKC,QAAL,EAA3B,GAA6C,IAAxD;AACA,QAAIC,KAAK,GAAG,CAAZ;AAEA,WAAOd,MAAM,CAACe,MAAP,CAAchB,iBAAd,EAAiC;AACpCiB,MAAAA,IAAI,EAAE;AACFZ,QAAAA,KAAK,EAAE,YAAW;AACd,cAAI,CAACO,IAAD,IAASG,KAAK,IAAIH,IAAI,CAACM,MAA3B,EAAmC;AAC/BN,YAAAA,IAAI,GAAG,IAAP;AACA,mBAAO;AAACO,cAAAA,IAAI,EAAE,IAAP;AAAad,cAAAA,KAAK,EAAEe;AAApB,aAAP;AACH;;AAED,cAAIf,KAAJ;;AACA,kBAAQE,UAAR;AACI,iBAAK,SAAL;AACIF,cAAAA,KAAK,GAAG,CAACU,KAAD,EAAQH,IAAI,CAACG,KAAD,CAAZ,CAAR;AACA;;AACJ,iBAAK,MAAL;AACIV,cAAAA,KAAK,GAAGU,KAAR;AACA;;AACJ;AACIV,cAAAA,KAAK,GAAGO,IAAI,CAACG,KAAD,CAAZ;AARR;;AAWAA,UAAAA,KAAK;AACL,iBAAO;AAACI,YAAAA,IAAI,EAAE,KAAP;AAAcd,YAAAA,KAAK,EAAEA;AAArB,WAAP;AACH;AArBC;AAD8B,KAAjC,CAAP;AAyBH,GA7BD;;AA+BAI,EAAAA,OAAO,CAACF,UAAD,CAAP,GAAsB;AAACF,IAAAA,KAAK,EAAEG,MAAR;AAAgBE,IAAAA,YAAY,EAAE,IAA9B;AAAoCC,IAAAA,QAAQ,EAAE;AAA9C,GAAtB;AACH,CAjCD;AAmCAF,OAAO,CAACN,MAAM,CAACC,QAAR,CAAP,GAA2BK,OAAO,CAACY,MAAnC","sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2016 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n'use strict';\n\nvar arrayPrototype = Array.prototype;\n\n// eslint-disable-next-line no-undef\nvar iteratorPrototype = {};\n\n// These iterators should themselves be iterable.\nObject.defineProperty(iteratorPrototype, Symbol.iterator, {\n    value: function() {\n        return this;\n    }\n});\n\n[\n    'toString',\n    'toLocaleString',\n    'concat',\n    'join',\n    'slice',\n    'lastIndexOf',\n    'every',\n    'some',\n    'forEach',\n    'find',\n    'findIndex',\n    'map',\n    'filter',\n    'reduce',\n    'reduceRight',\n].forEach(function(methodName) {\n    var method = arrayPrototype[methodName];\n    if (method) {\n        exports[methodName] = {value: method, configurable: true, writable: true};\n    }\n});\n\n['entries', 'keys', 'values'].forEach(function(methodName) {\n    var method = function() {\n        var self = (this.type === \"object\") ? this.snapshot() : this;\n        var index = 0;\n\n        return Object.create(iteratorPrototype, {\n            next: {\n                value: function() {\n                    if (!self || index >= self.length) {\n                        self = null;\n                        return {done: true, value: undefined};\n                    }\n\n                    var value;\n                    switch (methodName) {\n                        case 'entries':\n                            value = [index, self[index]];\n                            break;\n                        case 'keys':\n                            value = index;\n                            break;\n                        default:\n                            value = self[index];\n                    }\n\n                    index++;\n                    return {done: false, value: value};\n                }\n            }\n        });\n    };\n\n    exports[methodName] = {value: method, configurable: true, writable: true};\n});\n\nexports[Symbol.iterator] = exports.values;\n"]},"metadata":{},"sourceType":"script"}