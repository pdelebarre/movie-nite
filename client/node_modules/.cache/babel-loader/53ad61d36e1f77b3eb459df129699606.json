{"ast":null,"code":"////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\"use strict\";\n\nconst {\n  promisify\n} = require(\"./utils.js\");\n\nconst instanceMethods = {\n  create(name) {\n    return promisify(cb => this._create(name, cb));\n  },\n\n  fetch(id) {\n    return promisify(cb => this._fetch(id, cb));\n  },\n\n  fetchAll() {\n    return promisify(cb => this._fetchAll(cb));\n  },\n\n  delete(apiKeyId) {\n    return promisify(cb => this._delete(apiKeyId, cb));\n  },\n\n  enable(apiKeyId) {\n    return promisify(cb => this._enable(apiKeyId, cb));\n  },\n\n  disable(apiKeyId) {\n    return promisify(cb => this._disable(apiKeyId, cb));\n  }\n\n};\nconst staticMethods = {// none\n};\nmodule.exports = {\n  static: staticMethods,\n  instance: instanceMethods\n};","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/realm/lib/api-key-auth-methods.js"],"names":["promisify","require","instanceMethods","create","name","cb","_create","fetch","id","_fetch","fetchAll","_fetchAll","delete","apiKeyId","_delete","enable","_enable","disable","_disable","staticMethods","module","exports","static","instance"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;AAACA,EAAAA;AAAD,IAAcC,OAAO,CAAC,YAAD,CAA3B;;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACT,WAAOJ,SAAS,CAACK,EAAE,IAAI,KAAKC,OAAL,CAAaF,IAAb,EAAmBC,EAAnB,CAAP,CAAhB;AACH,GAHmB;;AAKpBE,EAAAA,KAAK,CAACC,EAAD,EAAK;AACN,WAAOR,SAAS,CAACK,EAAE,IAAI,KAAKI,MAAL,CAAYD,EAAZ,EAAgBH,EAAhB,CAAP,CAAhB;AACH,GAPmB;;AASpBK,EAAAA,QAAQ,GAAG;AACP,WAAOV,SAAS,CAACK,EAAE,IAAI,KAAKM,SAAL,CAAeN,EAAf,CAAP,CAAhB;AACH,GAXmB;;AAapBO,EAAAA,MAAM,CAACC,QAAD,EAAW;AACb,WAAOb,SAAS,CAACK,EAAE,IAAI,KAAKS,OAAL,CAAaD,QAAb,EAAuBR,EAAvB,CAAP,CAAhB;AACH,GAfmB;;AAiBpBU,EAAAA,MAAM,CAACF,QAAD,EAAW;AACb,WAAOb,SAAS,CAACK,EAAE,IAAI,KAAKW,OAAL,CAAaH,QAAb,EAAuBR,EAAvB,CAAP,CAAhB;AACH,GAnBmB;;AAqBpBY,EAAAA,OAAO,CAACJ,QAAD,EAAW;AACd,WAAOb,SAAS,CAACK,EAAE,IAAI,KAAKa,QAAL,CAAcL,QAAd,EAAwBR,EAAxB,CAAP,CAAhB;AACH;;AAvBmB,CAAxB;AA0BA,MAAMc,aAAa,GAAG,CAClB;AADkB,CAAtB;AAIAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,MAAM,EAAEH,aADK;AAEbI,EAAAA,QAAQ,EAAErB;AAFG,CAAjB","sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n\"use strict\";\n\nconst {promisify} = require(\"./utils.js\");\n\nconst instanceMethods = {\n    create(name) {\n        return promisify(cb => this._create(name, cb));\n    },\n\n    fetch(id) {\n        return promisify(cb => this._fetch(id, cb));\n    },\n\n    fetchAll() {\n        return promisify(cb => this._fetchAll(cb));\n    },\n\n    delete(apiKeyId) {\n        return promisify(cb => this._delete(apiKeyId, cb));\n    },\n\n    enable(apiKeyId) {\n        return promisify(cb => this._enable(apiKeyId, cb));\n    },\n\n    disable(apiKeyId) {\n        return promisify(cb => this._disable(apiKeyId, cb));\n    },\n};\n\nconst staticMethods = {\n    // none\n};\n\nmodule.exports = {\n    static: staticMethods,\n    instance: instanceMethods,\n};\n"]},"metadata":{},"sourceType":"script"}