{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SearchMovie from \"./Movie/SearchMovie\";\nimport classes from \"./Movies.module.css\";\nimport Movie from \"./Movie/Movie\";\nimport { useEasybase } from \"easybase-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const [refresh, setRefresh] = useState(false);\n  const {\n    e,\n    useReturn\n  } = useEasybase();\n  const table = useEasybase().db(\"MOVIES\");\n  const {\n    frame\n  } = useReturn(() => table.return().orderBy({\n    by: \"watched\",\n    sort: \"asc\"\n  }), [refresh]);\n\n  const headers = /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"watched\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n\n  const markWatched = async id => {\n    let singleRecord = await table().return().where(e.eq(\"id\", id)).one();\n    let watched = singleRecord.watched;\n    await table.where({\n      _key: singleRecord._key\n    }).set({\n      watched: !watched\n    }).one();\n    setRefresh(st => !st);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(SearchMovie, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: classes.movies,\n      children: [headers, /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: frame.map((movie, index) => {\n          return /*#__PURE__*/_jsxDEV(Movie, {\n            movie: movie,\n            markWatched: markWatched // index={movie[\"_key\"]}\n\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"cF4OyNvHKP1Ol9cwmTDyEsg2k9M=\", true, function () {\n  return [useEasybase, useEasybase];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movies.js"],"names":["React","useState","SearchMovie","classes","Movie","useEasybase","Movies","refresh","setRefresh","e","useReturn","table","db","frame","return","orderBy","by","sort","headers","markWatched","id","singleRecord","where","eq","one","watched","_key","set","st","container","movies","map","movie","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,SAASC,WAAT,QAA4B,gBAA5B;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM;AAAEQ,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAmBL,WAAW,EAApC;AAEA,QAAMM,KAAK,GAAGN,WAAW,GAAGO,EAAd,CAAiB,QAAjB,CAAd;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAYH,SAAS,CACzB,MAAMC,KAAK,CAACG,MAAN,GAAeC,OAAf,CAAuB;AAAEC,IAAAA,EAAE,EAAE,SAAN;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GAAvB,CADmB,EAEzB,CAACV,OAAD,CAFyB,CAA3B;;AAKA,QAAMW,OAAO,gBACX;AAAA,2BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAYA,QAAMC,WAAW,GAAG,MAAOC,EAAP,IAAc;AAChC,QAAIC,YAAY,GAAG,MAAMV,KAAK,GAAGG,MAAR,GAAiBQ,KAAjB,CAAuBb,CAAC,CAACc,EAAF,CAAK,IAAL,EAAWH,EAAX,CAAvB,EAAuCI,GAAvC,EAAzB;AACA,QAAIC,OAAO,GAAGJ,YAAY,CAACI,OAA3B;AAEA,UAAMd,KAAK,CACRW,KADG,CACG;AAAEI,MAAAA,IAAI,EAAEL,YAAY,CAACK;AAArB,KADH,EAEHC,GAFG,CAEC;AAAEF,MAAAA,OAAO,EAAE,CAACA;AAAZ,KAFD,EAGHD,GAHG,EAAN;AAKAhB,IAAAA,UAAU,CAAEoB,EAAD,IAAQ,CAACA,EAAV,CAAV;AACD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAEzB,OAAO,CAAC0B,SAAxB;AAAA,4BAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAO,MAAA,SAAS,EAAE1B,OAAO,CAAC2B,MAA1B;AAAA,iBACGZ,OADH,eAEE;AAAA,kBACGL,KAAK,CAACkB,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3B,8BACE,QAAC,KAAD;AAEE,YAAA,KAAK,EAAED,KAFT;AAGE,YAAA,WAAW,EAAEb,WAHf,CAIE;;AAJF,aACOa,KAAK,CAACZ,EADb;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA1DD;;GAAMd,M;UAGqBD,W,EAEXA,W;;;KALVC,M;AA4DN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport SearchMovie from \"./Movie/SearchMovie\";\nimport classes from \"./Movies.module.css\";\nimport Movie from \"./Movie/Movie\";\n\nimport { useEasybase } from \"easybase-react\";\n\n\nconst Movies = () => {\n  const [refresh, setRefresh] = useState(false);\n\n  const { e, useReturn } = useEasybase();\n\n  const table = useEasybase().db(\"MOVIES\");\n\n  const { frame } = useReturn(\n    () => table.return().orderBy({ by: \"watched\", sort: \"asc\" }),\n    [refresh]\n  );\n\n  const headers = (\n    <thead>\n      <tr>\n        <th>watched</th>\n        <th>title</th>\n        <th>genre</th>\n        <th>poster</th>\n        <th>delete</th>\n      </tr>\n    </thead>\n  );\n\n  const markWatched = async (id) => {\n    let singleRecord = await table().return().where(e.eq(\"id\", id)).one();\n    let watched = singleRecord.watched;\n\n    await table\n      .where({ _key: singleRecord._key })\n      .set({ watched: !watched })\n      .one();\n\n    setRefresh((st) => !st);\n  };\n\n  return (\n    <div className={classes.container}>\n      {/* TODO:fix first call and call when non empty */}\n      <SearchMovie  />\n\n      <table className={classes.movies}>\n        {headers}\n        <tbody>\n          {frame.map((movie, index) => {\n            return (\n              <Movie\n                key={movie.id}\n                movie={movie}\n                markWatched={markWatched}\n                // index={movie[\"_key\"]}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}