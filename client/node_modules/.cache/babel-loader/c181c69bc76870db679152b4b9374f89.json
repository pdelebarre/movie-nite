{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport Movies from \"./components/Movies\";\nimport MovieForm from \"./components/Movie/MovieForm\";\nimport SearchMovie from \"./components/Movie/SearchMovie\";\nimport DUMMY_MOVIES from \"./resources/dummy_movies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [movies, setMovies] = useState(DUMMY_MOVIES);\n\n  const addMovie = movie => {\n    console.log(`movie from App`, movie);\n    let newMovie = {\n      id: movie.id,\n      // uuidv4(),\n      title: movie.title,\n      genre: movie.genre,\n      // TODO lookup genre\n      watched: false\n    };\n    setMovies([...movies, newMovie]);\n  };\n\n  const delMovie = id => {\n    setMovies(movies.filter(movie => movie.id !== id));\n  };\n\n  const markWatched = id => {\n    setMovies(movies.map(movie => movie.id === id ? { ...movie,\n      watched: !movie.watched\n    } : movie));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchMovie, {\n      onSelect: addMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Movies, {\n      movies: movies,\n      delMovie: delMovie,\n      markWatched: markWatched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vhELJP0ZDTfJkV5nkXB5wT3sku4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/App.js"],"names":["useState","v4","uuidv4","Movies","MovieForm","SearchMovie","DUMMY_MOVIES","App","movies","setMovies","addMovie","movie","console","log","newMovie","id","title","genre","watched","delMovie","filter","markWatched","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACM,YAAD,CAApC;;AACA,QAAMI,QAAQ,GAAIC,KAAD,IAAW;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAb,EAA8BF,KAA9B;AACA,QAAIG,QAAQ,GAAG;AACbC,MAAAA,EAAE,EAAEJ,KAAK,CAACI,EADG;AACC;AACdC,MAAAA,KAAK,EAACL,KAAK,CAACK,KAFC;AAGbC,MAAAA,KAAK,EAACN,KAAK,CAACM,KAHC;AAGM;AACnBC,MAAAA,OAAO,EAAC;AAJK,KAAf;AAOAT,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYM,QAAZ,CAAD,CAAT;AACD,GAVD;;AAYA,QAAMK,QAAQ,GAAIJ,EAAD,IAAQ;AACvBN,IAAAA,SAAS,CAACD,MAAM,CAACY,MAAP,CAAeT,KAAD,IAAWA,KAAK,CAACI,EAAN,KAAaA,EAAtC,CAAD,CAAT;AACD,GAFD;;AAIA,QAAMM,WAAW,GAAIN,EAAD,IAAQ;AAC1BN,IAAAA,SAAS,CACPD,MAAM,CAACc,GAAP,CAAYX,KAAD,IACXA,KAAK,CAACI,EAAN,KAAaA,EAAb,GAAkB,EAAE,GAAGJ,KAAL;AAAYO,MAAAA,OAAO,EAAE,CAACP,KAAK,CAACO;AAA5B,KAAlB,GAA0DP,KAD1D,CADO,CAAT;AAKD,GAND;;AAQA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAED;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEF,MAAhB;AAAwB,MAAA,QAAQ,EAAEW,QAAlC;AAA4C,MAAA,WAAW,EAAEE;AAAzD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjCD;;GAAMd,G;;KAAAA,G;AAmCN,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport Movies from \"./components/Movies\";\nimport MovieForm from \"./components/Movie/MovieForm\";\nimport SearchMovie from \"./components/Movie/SearchMovie\";\nimport DUMMY_MOVIES from \"./resources/dummy_movies\";\n\nconst App = () => {\n  const [movies, setMovies] = useState(DUMMY_MOVIES);\n  const addMovie = (movie) => {\n    console.log(`movie from App`, movie)\n    let newMovie = {\n      id: movie.id, // uuidv4(),\n      title:movie.title,\n      genre:movie.genre, // TODO lookup genre\n      watched:false\n    };\n\n    setMovies([...movies, newMovie]);\n  };\n\n  const delMovie = (id) => {\n    setMovies(movies.filter((movie) => movie.id !== id));\n  };\n\n  const markWatched = (id) => {\n    setMovies(\n      movies.map((movie) =>\n      movie.id === id ? { ...movie, watched: !movie.watched } : movie\n      )\n    );\n  };\n\n  return (\n    <div>\n      <SearchMovie onSelect={addMovie}/>\n      {/* <MovieForm addMovie={addMovie} /> */}\n      <Movies movies={movies} delMovie={delMovie} markWatched={markWatched} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}