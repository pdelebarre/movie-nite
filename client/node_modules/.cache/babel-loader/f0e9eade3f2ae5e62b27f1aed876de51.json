{"ast":null,"code":"/** Returns a function the creates a new context */\nconst createNewContext = defaultContext => {\n  const {\n    parameterize,\n    escape,\n    mapKey,\n    build\n  } = defaultContext;\n  return (inherit = {}) => {\n    const {\n      params = [],\n      unparameterized = false\n    } = inherit;\n    const whr = [];\n    return {\n      // properties set by the EasyQB instance\n      parameterize,\n      escape,\n      mapKey,\n      build,\n      // properties inherited from the parent query\n      params,\n      unparameterized,\n      // properties of the current query\n      type: 'select',\n      // | sql' | 'select' | 'delete' | 'insert' | 'update'\n      target: whr,\n      join: undefined,\n      separator: ' ',\n      sql: [],\n      ret: [],\n      frm: [],\n      whr,\n      grp: [],\n      hav: [],\n      setop: [],\n      ord: [],\n      with: [],\n      set: [] // properties that may be added dynamically:\n      // userType\n      // distinct\n\n    };\n  };\n};\n\nmodule.exports = createNewContext;","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/EasyQB/src/builder-sq/context.js"],"names":["createNewContext","defaultContext","parameterize","escape","mapKey","build","inherit","params","unparameterized","whr","type","target","join","undefined","separator","sql","ret","frm","grp","hav","setop","ord","with","set","module","exports"],"mappings":"AAAA;AACA,MAAMA,gBAAgB,GAAGC,cAAc,IAAI;AACvC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA;AAAhC,MAA0CJ,cAAhD;AAEA,SAAO,CAACK,OAAO,GAAG,EAAX,KAAkB;AACrB,UAAM;AAAEC,MAAAA,MAAM,GAAG,EAAX;AAAeC,MAAAA,eAAe,GAAG;AAAjC,QAA2CF,OAAjD;AAEA,UAAMG,GAAG,GAAG,EAAZ;AACA,WAAO;AACH;AACAP,MAAAA,YAFG;AAGHC,MAAAA,MAHG;AAIHC,MAAAA,MAJG;AAKHC,MAAAA,KALG;AAOH;AACAE,MAAAA,MARG;AASHC,MAAAA,eATG;AAWH;AACAE,MAAAA,IAAI,EAAE,QAZH;AAaH;AACAC,MAAAA,MAAM,EAAEF,GAdL;AAeHG,MAAAA,IAAI,EAAEC,SAfH;AAgBHC,MAAAA,SAAS,EAAE,GAhBR;AAiBHC,MAAAA,GAAG,EAAE,EAjBF;AAkBHC,MAAAA,GAAG,EAAE,EAlBF;AAmBHC,MAAAA,GAAG,EAAE,EAnBF;AAoBHR,MAAAA,GApBG;AAqBHS,MAAAA,GAAG,EAAE,EArBF;AAsBHC,MAAAA,GAAG,EAAE,EAtBF;AAuBHC,MAAAA,KAAK,EAAE,EAvBJ;AAwBHC,MAAAA,GAAG,EAAE,EAxBF;AAyBHC,MAAAA,IAAI,EAAE,EAzBH;AA0BHC,MAAAA,GAAG,EAAE,EA1BF,CA4BH;AACA;AACA;;AA9BG,KAAP;AAgCH,GApCD;AAqCH,CAxCD;;AA0CAC,MAAM,CAACC,OAAP,GAAiBzB,gBAAjB","sourcesContent":["/** Returns a function the creates a new context */\nconst createNewContext = defaultContext => {\n    const { parameterize, escape, mapKey, build } = defaultContext\n\n    return (inherit = {}) => {\n        const { params = [], unparameterized = false } = inherit\n\n        const whr = []\n        return {\n            // properties set by the EasyQB instance\n            parameterize,\n            escape,\n            mapKey,\n            build,\n\n            // properties inherited from the parent query\n            params,\n            unparameterized,\n\n            // properties of the current query\n            type: 'select',\n            // | sql' | 'select' | 'delete' | 'insert' | 'update'\n            target: whr,\n            join: undefined,\n            separator: ' ',\n            sql: [],\n            ret: [],\n            frm: [],\n            whr,\n            grp: [],\n            hav: [],\n            setop: [],\n            ord: [],\n            with: [],\n            set: []\n\n            // properties that may be added dynamically:\n            // userType\n            // distinct\n        }\n    }\n}\n\nmodule.exports = createNewContext\n"]},"metadata":{},"sourceType":"script"}