{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/Store/MongoDB.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useRealmApp } from \"./RealmApp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MongoDBContext = /*#__PURE__*/React.createContext(null);\n\nconst MongoDB = ({\n  children\n}) => {\n  _s();\n\n  const {\n    user\n  } = useRealmApp();\n  const [db, setDb] = useState(null);\n  useEffect(() => {\n    if (user !== null) {\n      const realmService = user.mongoClient(\"mongodb-atlas\");\n      setDb(realmService.db(\"sample_mflix\"));\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(MongoDBContext.Provider, {\n    value: {\n      db\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MongoDB, \"1ncSkQWLx4/+nox9pNoLHwAfmzQ=\", false, function () {\n  return [useRealmApp];\n});\n\n_c = MongoDB;\nexport const useMongoDB = () => {\n  _s2();\n\n  const mdbContext = useContext(MongoDBContext);\n\n  if (mdbContext == null) {\n    throw new Error(\"useMongoDB() called outside of a MongoDB?\");\n  }\n\n  return mdbContext;\n};\n\n_s2(useMongoDB, \"I+pAemaBUHH0riHSlr0VD005Gh8=\");\n\nexport default MongoDB;\n\nvar _c;\n\n$RefreshReg$(_c, \"MongoDB\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/Store/MongoDB.js"],"names":["React","useContext","useEffect","useState","useRealmApp","MongoDBContext","createContext","MongoDB","children","user","db","setDb","realmService","mongoClient","useMongoDB","mdbContext","Error"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,MAAMC,cAAc,gBAAGL,KAAK,CAACM,aAAN,CAAoB,IAApB,CAAvB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAWL,WAAW,EAA5B;AACA,QAAM,CAACM,EAAD,EAAKC,KAAL,IAAcR,QAAQ,CAAC,IAAD,CAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,IAAI,KAAK,IAAb,EAAmB;AACf,YAAMG,YAAY,GAAGH,IAAI,CAACI,WAAL,CAAiB,eAAjB,CAArB;AACAF,MAAAA,KAAK,CAACC,YAAY,CAACF,EAAb,CAAgB,cAAhB,CAAD,CAAL;AACH;AACJ,GALQ,EAKN,CAACD,IAAD,CALM,CAAT;AAOA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA;AADG,KADX;AAAA,cAKKF;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CApBD;;GAAMD,O;UACeH,W;;;KADfG,O;AAsBN,OAAO,MAAMO,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAMC,UAAU,GAAGd,UAAU,CAACI,cAAD,CAA7B;;AACA,MAAIU,UAAU,IAAI,IAAlB,EAAwB;AACpB,UAAM,IAAIC,KAAJ,CAAU,2CAAV,CAAN;AACH;;AACD,SAAOD,UAAP;AACH,CANM;;IAAMD,U;;AAQb,eAAeP,OAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\"\n\nimport { useRealmApp } from \"./RealmApp\"\n\nconst MongoDBContext = React.createContext(null)\n\nconst MongoDB = ({ children }) => {\n    const { user } = useRealmApp()\n    const [db, setDb] = useState(null)\n\n    useEffect(() => {\n        if (user !== null) {\n            const realmService = user.mongoClient(\"mongodb-atlas\")\n            setDb(realmService.db(\"sample_mflix\"))\n        }\n    }, [user])\n\n    return (\n        <MongoDBContext.Provider\n            value={{\n                db,\n            }}\n        >\n            {children}\n        </MongoDBContext.Provider>\n    )\n}\n\nexport const useMongoDB = () => {\n    const mdbContext = useContext(MongoDBContext)\n    if (mdbContext == null) {\n        throw new Error(\"useMongoDB() called outside of a MongoDB?\")\n    }\n    return mdbContext\n}\n\nexport default MongoDB"]},"metadata":{},"sourceType":"module"}