{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movie/SearchMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AddMovieButton from '../../UI/AddMovieButton';\nimport classes from \"./SearchMovie.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortResults = results => {\n  results.sort((a, b) => b.vote_average - a.vote_average);\n  return results;\n};\n\nexport default function SearchMovie(props) {\n  _s();\n\n  const dropdownRef = useRef(null);\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(async () => {\n      console.log(query);\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n        setResults(data.results);\n        setIsVisible(true);\n      } catch (err) {\n        console.error(err);\n        setIsVisible(false);\n      }\n    }, [1000, query.length > 0]);\n    return () => clearTimeout(delayDebounceFn);\n  }, [query]);\n\n  const onChangeHandler = event => {\n    setQuery(event.target.value);\n  };\n\n  const onSelectHandler = movie => {\n    setIsVisible(st => !st);\n    return props.onSelect(movie);\n  };\n\n  useEffect(() => {\n    const pageClickEvent = e => {\n      console.log(e); // If the active element exists and is clicked outside of\n\n      if (dropdownRef.current !== null && !dropdownRef.current.contains(e.target)) {\n        setIsVisible(!isVisible);\n      }\n    }; // If the item is active (ie open) then listen for clicks\n\n\n    if (isVisible) {\n      window.addEventListener('click', pageClickEvent);\n    }\n\n    return () => {\n      window.removeEventListener('click', pageClickEvent);\n    };\n  }, [isVisible]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: classes[\"search-label\"],\n      htmlFor: \"query\",\n      children: \"Movie Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: classes[\"search-input\"],\n      type: \"text\",\n      name: \"query\",\n      placeholder: \"i.e. Jurassic Park\",\n      onChange: onChangeHandler,\n      value: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), isVisible && results && results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dropdown,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: sortResults(results).map(result => /*#__PURE__*/_jsxDEV(AddMovieButton, {\n            movie: result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchMovie, \"RzDaC+FFhWC77ADheYmRyaL9FOQ=\");\n\n_c = SearchMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovie\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movie/SearchMovie.js"],"names":["React","useState","useEffect","useRef","AddMovieButton","classes","sortResults","results","sort","a","b","vote_average","SearchMovie","props","dropdownRef","query","setQuery","setResults","isVisible","setIsVisible","delayDebounceFn","setTimeout","console","log","url","res","fetch","data","json","err","error","length","clearTimeout","onChangeHandler","event","target","value","onSelectHandler","movie","st","onSelect","pageClickEvent","e","current","contains","window","addEventListener","removeEventListener","container","dropdown","map","result"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useRef } from \"react\";\nimport AddMovieButton from '../../UI/AddMovieButton';\nimport classes from \"./SearchMovie.module.css\";\n\n\nconst sortResults = (results) => {\n  results.sort((a, b) => b.vote_average - a.vote_average);\n  return results;\n};\n\nexport default function SearchMovie(props) {\n  const dropdownRef = useRef(null);\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n\n  \n\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(async () => {\n\n      console.log(query);\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n      try{      \n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data)\n        setResults(data.results);\n        setIsVisible(true);\n      }\n        catch (err) {\n          console.error(err);\n          setIsVisible(false);\n        }\n    }, [1000, query.length > 0]);\n\n    return () => clearTimeout(delayDebounceFn);\n  }, [query]);\n\n  const onChangeHandler = (event) => {\n\n    setQuery(event.target.value);\n      \n  };\n\n  const onSelectHandler = (movie) => {\n    setIsVisible(st => !st);\n    return props.onSelect(movie);\n  };\n\n  useEffect(() => {\n    const pageClickEvent = (e) => {\n      console.log(e);\n        // If the active element exists and is clicked outside of\n  if (dropdownRef.current !== null && !dropdownRef.current.contains(e.target)) {\n    setIsVisible(!isVisible);\n  }\n    };\n    // If the item is active (ie open) then listen for clicks\n    if (isVisible) {\n      window.addEventListener('click', pageClickEvent);\n    }\n    return () => {\n      window.removeEventListener('click', pageClickEvent);\n    }\n  }, [isVisible]);\n\n  return (\n    <div className={classes.container}>\n        <label className={classes[\"search-label\"]} htmlFor=\"query\">\n          Movie Name\n        </label>\n        <input\n          className={classes[\"search-input\"]}\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"i.e. Jurassic Park\"\n          onChange={onChangeHandler}\n          value={query}\n        />\n\n      {isVisible && results && results.length > 0 &&\n      \n      (<div className={classes.dropdown}>\n      <ul>\n        <li>\n          {sortResults(results).map((result) => (\n            <AddMovieButton movie={result} />\n          ))}\n        </li>\n      </ul>\n    </div>)}\n      \n      \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}