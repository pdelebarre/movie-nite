{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport fuzzaldrin from 'fuzzaldrin-plus';\nimport PropTypes from 'prop-types';\nimport VirtualList from 'react-tiny-virtual-list';\nimport { SearchIcon } from '../../icons';\nimport { Image } from '../../image';\nimport { Pane } from '../../layers';\nimport SearchTableHeaderCell from '../../table/src/SearchTableHeaderCell';\nimport TableHead from '../../table/src/TableHead';\nimport { useTheme } from '../../theme';\nimport Option from './Option';\nimport OptionShapePropType from './OptionShapePropType';\n/**\n * Fuzzaldrin-plus is the default filter, but you can use your own\n * as long as they follow the following signature:\n * @param options <Array[String]> - ['label', 'label2', ...]\n * @param input <String>\n */\n\nvar fuzzyFilter = function fuzzyFilter(options, input, _ref) {\n  var key = _ref.key;\n  return fuzzaldrin.filter(options, input, {\n    key: key\n  });\n};\n\nvar noop = function noop() {};\n\nvar defaultRenderItem = function defaultRenderItem(props) {\n  return /*#__PURE__*/React.createElement(Option, props, props.icon && /*#__PURE__*/React.createElement(Image, {\n    src: props.icon,\n    width: 24,\n    marginRight: 8\n  }), props.label);\n};\n\ndefaultRenderItem.displayName = \"defaultRenderItem\";\nvar OptionsList = /*#__PURE__*/memo(function OptionsList(props) {\n  var _props$options = props.options,\n      originalOptions = _props$options === void 0 ? [] : _props$options,\n      _props$optionSize = props.optionSize,\n      optionSize = _props$optionSize === void 0 ? 33 : _props$optionSize,\n      close = props.close,\n      closeOnSelect = props.closeOnSelect,\n      _props$onSelect = props.onSelect,\n      onSelect = _props$onSelect === void 0 ? noop : _props$onSelect,\n      _props$onDeselect = props.onDeselect,\n      onDeselect = _props$onDeselect === void 0 ? noop : _props$onDeselect,\n      _props$onFilterChange = props.onFilterChange,\n      onFilterChange = _props$onFilterChange === void 0 ? noop : _props$onFilterChange,\n      hasFilter = props.hasFilter,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? [] : _props$selected,\n      optionsFilter = props.optionsFilter,\n      isMultiSelect = props.isMultiSelect,\n      height = props.height,\n      width = props.width,\n      _props$renderItem = props.renderItem,\n      _renderItem = _props$renderItem === void 0 ? defaultRenderItem : _props$renderItem,\n      _props$filterPlacehol = props.filterPlaceholder,\n      filterPlaceholder = _props$filterPlacehol === void 0 ? 'Filter...' : _props$filterPlacehol,\n      _props$filterIcon = props.filterIcon,\n      filterIcon = _props$filterIcon === void 0 ? SearchIcon : _props$filterIcon,\n      _props$defaultSearchV = props.defaultSearchValue,\n      defaultSearchValue = _props$defaultSearchV === void 0 ? '' : _props$defaultSearchV,\n      rest = _objectWithoutProperties(props, [\"options\", \"optionSize\", \"close\", \"closeOnSelect\", \"onSelect\", \"onDeselect\", \"onFilterChange\", \"hasFilter\", \"selected\", \"optionsFilter\", \"isMultiSelect\", \"height\", \"width\", \"renderItem\", \"filterPlaceholder\", \"filterIcon\", \"defaultSearchValue\"]);\n\n  var _useState = useState(defaultSearchValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchValue = _useState2[0],\n      setSearchValue = _useState2[1];\n\n  var _useState3 = useState(selected),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedOptions = _useState4[0],\n      setSelectedOptions = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchRef = _useState6[0],\n      setSearchRef = _useState6[1];\n\n  var requestId = useRef();\n  var theme = useTheme();\n  var tokens = theme.tokens;\n  var isSelected = useCallback(function (item) {\n    return Boolean(selectedOptions.find(function (selectedItem) {\n      return selectedItem === item.value;\n    }));\n  }, [selectedOptions]);\n  var search = useCallback(function (options) {\n    if (searchValue.trim() === '') {\n      return options;\n    } // Preserve backwards compatibility with allowing custom filters, which accept array of strings\n\n\n    if (typeof optionsFilter === 'function') {\n      return optionsFilter(options.map(function (item) {\n        return item.label;\n      }), searchValue).map(function (name) {\n        return options.find(function (item) {\n          return item.label === name;\n        });\n      });\n    }\n\n    return fuzzyFilter(options, searchValue, {\n      key: 'label'\n    });\n  }, [optionsFilter, searchValue]);\n  var options = search(originalOptions);\n  var getFilteredOptions = useCallback(function () {\n    return search(options);\n  }, [options]);\n  var getCurrentIndex = useCallback(function () {\n    var options = getFilteredOptions();\n    return options.findIndex(function (option) {\n      return option.value === selected[selected.length - 1];\n    });\n  }, [selected]);\n  var handleArrowUp = useCallback(function () {\n    var options = getFilteredOptions();\n    var nextIndex = getCurrentIndex() - 1;\n\n    if (nextIndex < 0) {\n      nextIndex = options.length - 1;\n    }\n\n    if (isSelected(options[nextIndex])) {\n      return;\n    }\n\n    onSelect(options[nextIndex]);\n  }, [onSelect]);\n  var handleArrowDown = useCallback(function () {\n    var options = getFilteredOptions();\n    var nextIndex = getCurrentIndex() + 1;\n\n    if (nextIndex === options.length) {\n      nextIndex = 0;\n    }\n\n    if (!isSelected(options[nextIndex])) {\n      onSelect(options[nextIndex]);\n    }\n  }, [onSelect]);\n  var handleChange = useCallback(function (searchValue) {\n    setSearchValue(searchValue);\n    onFilterChange(searchValue);\n  }, [onFilterChange]);\n  var handleSelect = useCallback(function (item) {\n    if (isSelected(item) && isMultiSelect) {\n      onDeselect(item);\n    } else {\n      onSelect(item);\n    }\n\n    if (!isMultiSelect && closeOnSelect) {\n      close();\n    }\n  }, [onDeselect, isMultiSelect, closeOnSelect]);\n  var handleEnter = useCallback(function () {\n    var isSelected = getCurrentIndex() !== -1;\n\n    if (isSelected) {\n      if (!isMultiSelect && closeOnSelect) {\n        close();\n      }\n    }\n  }, [isMultiSelect, close, closeOnSelect]);\n  var handleDeselect = useCallback(function (item) {\n    onDeselect(item);\n  }, [onDeselect]);\n  var handleKeyDown = useCallback(function (e) {\n    if (e.key === 'ArrowUp') {\n      handleArrowUp();\n    }\n\n    if (e.key === 'ArrowDown') {\n      handleArrowDown();\n    }\n\n    if (e.key === 'Enter') {\n      handleEnter();\n    }\n\n    if (e.key === 'Escape') {\n      close();\n    }\n  }, [close]);\n  useEffect(function () {\n    if (hasFilter) {\n      requestId.current = requestAnimationFrame(function () {\n        if (searchRef) {\n          searchRef.focus();\n        }\n      });\n      window.addEventListener('keydown', handleKeyDown);\n      return function () {\n        cancelAnimationFrame(requestId.current);\n        window.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n  }, [hasFilter, searchRef, handleKeyDown]);\n  useEffect(function () {\n    if (selected !== selectedOptions) {\n      setSelectedOptions(selected);\n    }\n  }, [selected]);\n  var listHeight = height - (hasFilter ? 32 : 0);\n  var currentIndex = getCurrentIndex();\n  var scrollToIndex = currentIndex === -1 ? 0 : currentIndex;\n  return /*#__PURE__*/React.createElement(Pane, _extends({\n    height: height,\n    width: width,\n    display: \"flex\",\n    flexDirection: \"column\"\n  }, rest), hasFilter && /*#__PURE__*/React.createElement(TableHead, {\n    height: 32,\n    backgroundColor: tokens.colors.gray50\n  }, /*#__PURE__*/React.createElement(SearchTableHeaderCell, {\n    onChange: handleChange,\n    ref: setSearchRef,\n    borderRight: null,\n    placeholder: filterPlaceholder,\n    icon: filterIcon\n  })), /*#__PURE__*/React.createElement(Pane, {\n    flex: 1\n  }, options.length > 0 && /*#__PURE__*/React.createElement(VirtualList, {\n    height: listHeight,\n    width: \"100%\",\n    itemSize: optionSize,\n    itemCount: options.length,\n    overscanCount: 20,\n    scrollToAlignment: \"auto\",\n    scrollToIndex: scrollToIndex || undefined,\n    renderItem: function renderItem(_ref2) {\n      var index = _ref2.index,\n          style = _ref2.style;\n      var item = options[index];\n      var isItemSelected = isSelected(item);\n      var itemProps = {\n        key: item.value,\n        label: item.label,\n        icon: item.icon,\n        item: item,\n        style: style,\n        height: optionSize,\n        onSelect: function onSelect() {\n          return handleSelect(item);\n        },\n        onDeselect: function onDeselect() {\n          return handleDeselect(item);\n        },\n        isSelectable: !isItemSelected || isMultiSelect,\n        isSelected: isItemSelected,\n        disabled: item.disabled,\n        tabIndex: 0\n      };\n      return _renderItem(itemProps);\n    }\n  })));\n});\nOptionsList.propTypes = {\n  options: PropTypes.arrayOf(OptionShapePropType),\n  close: PropTypes.func,\n  height: PropTypes.number,\n  width: PropTypes.number,\n\n  /**\n   * When true, multi select is accounted for.\n   */\n  isMultiSelect: PropTypes.bool,\n\n  /**\n   * When true, menu closes on option selection.\n   */\n  closeOnSelect: PropTypes.bool,\n\n  /**\n   * This holds the values of the options\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  onSelect: PropTypes.func,\n  onDeselect: PropTypes.func,\n  onFilterChange: PropTypes.func,\n  hasFilter: PropTypes.bool,\n  optionSize: PropTypes.number,\n  renderItem: PropTypes.func,\n  filterPlaceholder: PropTypes.string,\n  filterIcon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n  optionsFilter: PropTypes.func,\n  defaultSearchValue: PropTypes.string\n};\nexport default OptionsList;","map":{"version":3,"sources":["../../../src/select-menu/src/OptionsList.js"],"names":["fuzzyFilter","key","noop","defaultRenderItem","props","OptionsList","memo","originalOptions","optionSize","close","closeOnSelect","onSelect","onDeselect","onFilterChange","hasFilter","selected","optionsFilter","isMultiSelect","height","width","renderItem","filterPlaceholder","filterIcon","defaultSearchValue","rest","searchValue","setSearchValue","useState","selectedOptions","setSelectedOptions","searchRef","setSearchRef","requestId","useRef","theme","useTheme","tokens","isSelected","useCallback","Boolean","selectedItem","item","search","options","getFilteredOptions","getCurrentIndex","option","handleArrowUp","nextIndex","handleArrowDown","handleChange","handleSelect","handleEnter","handleDeselect","handleKeyDown","e","useEffect","requestAnimationFrame","window","cancelAnimationFrame","listHeight","currentIndex","scrollToIndex","gray50","index","style","isItemSelected","itemProps","label","icon","isSelectable","disabled","tabIndex","PropTypes","string"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useEffect, useRef, useState } from 'react'\nimport fuzzaldrin from 'fuzzaldrin-plus'\nimport PropTypes from 'prop-types'\nimport VirtualList from 'react-tiny-virtual-list'\nimport { SearchIcon } from '../../icons'\nimport { Image } from '../../image'\nimport { Pane } from '../../layers'\nimport SearchTableHeaderCell from '../../table/src/SearchTableHeaderCell'\nimport TableHead from '../../table/src/TableHead'\nimport { useTheme } from '../../theme'\nimport Option from './Option'\nimport OptionShapePropType from './OptionShapePropType'\n\n/**\n * Fuzzaldrin-plus is the default filter, but you can use your own\n * as long as they follow the following signature:\n * @param options <Array[String]> - ['label', 'label2', ...]\n * @param input <String>\n */\nconst fuzzyFilter = (options, input, { key }) => {\n  return fuzzaldrin.filter(options, input, { key })\n}\n\nconst noop = () => {}\n\nconst defaultRenderItem = props => {\n  return (\n    <Option {...props}>\n      {props.icon && <Image src={props.icon} width={24} marginRight={8} />}\n      {props.label}\n    </Option>\n  )\n}\n\nconst OptionsList = memo(function OptionsList(props) {\n  const {\n    options: originalOptions = [],\n    optionSize = 33,\n    close,\n    closeOnSelect,\n    onSelect = noop,\n    onDeselect = noop,\n    onFilterChange = noop,\n    hasFilter,\n    selected = [],\n    optionsFilter,\n    isMultiSelect,\n    height,\n    width,\n    renderItem = defaultRenderItem,\n    filterPlaceholder = 'Filter...',\n    filterIcon = SearchIcon,\n    defaultSearchValue = '',\n    ...rest\n  } = props\n\n  const [searchValue, setSearchValue] = useState(defaultSearchValue)\n  const [selectedOptions, setSelectedOptions] = useState(selected)\n  const [searchRef, setSearchRef] = useState(null)\n  const requestId = useRef()\n  const theme = useTheme()\n  const { tokens } = theme\n\n  const isSelected = useCallback(\n    item => {\n      return Boolean(selectedOptions.find(selectedItem => selectedItem === item.value))\n    },\n    [selectedOptions]\n  )\n\n  const search = useCallback(\n    options => {\n      if (searchValue.trim() === '') {\n        return options\n      }\n\n      // Preserve backwards compatibility with allowing custom filters, which accept array of strings\n      if (typeof optionsFilter === 'function') {\n        return optionsFilter(\n          options.map(item => item.label),\n          searchValue\n        ).map(name => options.find(item => item.label === name))\n      }\n\n      return fuzzyFilter(options, searchValue, { key: 'label' })\n    },\n    [optionsFilter, searchValue]\n  )\n\n  const options = search(originalOptions)\n\n  const getFilteredOptions = useCallback(() => {\n    return search(options)\n  }, [options])\n\n  const getCurrentIndex = useCallback(() => {\n    const options = getFilteredOptions()\n\n    return options.findIndex(option => option.value === selected[selected.length - 1])\n  }, [selected])\n\n  const handleArrowUp = useCallback(() => {\n    const options = getFilteredOptions()\n\n    let nextIndex = getCurrentIndex() - 1\n\n    if (nextIndex < 0) {\n      nextIndex = options.length - 1\n    }\n\n    if (isSelected(options[nextIndex])) {\n      return\n    }\n\n    onSelect(options[nextIndex])\n  }, [onSelect])\n\n  const handleArrowDown = useCallback(() => {\n    const options = getFilteredOptions()\n\n    let nextIndex = getCurrentIndex() + 1\n\n    if (nextIndex === options.length) {\n      nextIndex = 0\n    }\n\n    if (!isSelected(options[nextIndex])) {\n      onSelect(options[nextIndex])\n    }\n  }, [onSelect])\n\n  const handleChange = useCallback(\n    searchValue => {\n      setSearchValue(searchValue)\n      onFilterChange(searchValue)\n    },\n    [onFilterChange]\n  )\n\n  const handleSelect = useCallback(\n    item => {\n      if (isSelected(item) && isMultiSelect) {\n        onDeselect(item)\n      } else {\n        onSelect(item)\n      }\n\n      if (!isMultiSelect && closeOnSelect) {\n        close()\n      }\n    },\n    [onDeselect, isMultiSelect, closeOnSelect]\n  )\n\n  const handleEnter = useCallback(() => {\n    const isSelected = getCurrentIndex() !== -1\n\n    if (isSelected) {\n      if (!isMultiSelect && closeOnSelect) {\n        close()\n      }\n    }\n  }, [isMultiSelect, close, closeOnSelect])\n\n  const handleDeselect = useCallback(\n    item => {\n      onDeselect(item)\n    },\n    [onDeselect]\n  )\n\n  const handleKeyDown = useCallback(\n    e => {\n      if (e.key === 'ArrowUp') {\n        handleArrowUp()\n      }\n\n      if (e.key === 'ArrowDown') {\n        handleArrowDown()\n      }\n\n      if (e.key === 'Enter') {\n        handleEnter()\n      }\n\n      if (e.key === 'Escape') {\n        close()\n      }\n    },\n    [close]\n  )\n\n  useEffect(() => {\n    if (hasFilter) {\n      requestId.current = requestAnimationFrame(() => {\n        if (searchRef) {\n          searchRef.focus()\n        }\n      })\n\n      window.addEventListener('keydown', handleKeyDown)\n      return () => {\n        cancelAnimationFrame(requestId.current)\n        window.removeEventListener('keydown', handleKeyDown)\n      }\n    }\n  }, [hasFilter, searchRef, handleKeyDown])\n\n  useEffect(() => {\n    if (selected !== selectedOptions) {\n      setSelectedOptions(selected)\n    }\n  }, [selected])\n\n  const listHeight = height - (hasFilter ? 32 : 0)\n  const currentIndex = getCurrentIndex()\n  const scrollToIndex = currentIndex === -1 ? 0 : currentIndex\n\n  return (\n    <Pane height={height} width={width} display=\"flex\" flexDirection=\"column\" {...rest}>\n      {hasFilter && (\n        <TableHead height={32} backgroundColor={tokens.colors.gray50}>\n          <SearchTableHeaderCell\n            onChange={handleChange}\n            ref={setSearchRef}\n            borderRight={null}\n            placeholder={filterPlaceholder}\n            icon={filterIcon}\n          />\n        </TableHead>\n      )}\n      <Pane flex={1}>\n        {options.length > 0 && (\n          <VirtualList\n            height={listHeight}\n            width=\"100%\"\n            itemSize={optionSize}\n            itemCount={options.length}\n            overscanCount={20}\n            scrollToAlignment=\"auto\"\n            scrollToIndex={scrollToIndex || undefined}\n            renderItem={({ index, style }) => {\n              const item = options[index]\n              const isItemSelected = isSelected(item)\n\n              const itemProps = {\n                key: item.value,\n                label: item.label,\n                icon: item.icon,\n                item,\n                style,\n                height: optionSize,\n                onSelect: () => handleSelect(item),\n                onDeselect: () => handleDeselect(item),\n                isSelectable: !isItemSelected || isMultiSelect,\n                isSelected: isItemSelected,\n                disabled: item.disabled,\n                tabIndex: 0\n              }\n\n              return renderItem(itemProps)\n            }}\n          />\n        )}\n      </Pane>\n    </Pane>\n  )\n})\n\nOptionsList.propTypes = {\n  options: PropTypes.arrayOf(OptionShapePropType),\n  close: PropTypes.func,\n  height: PropTypes.number,\n  width: PropTypes.number,\n\n  /**\n   * When true, multi select is accounted for.\n   */\n  isMultiSelect: PropTypes.bool,\n\n  /**\n   * When true, menu closes on option selection.\n   */\n  closeOnSelect: PropTypes.bool,\n\n  /**\n   * This holds the values of the options\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  onSelect: PropTypes.func,\n  onDeselect: PropTypes.func,\n  onFilterChange: PropTypes.func,\n  hasFilter: PropTypes.bool,\n  optionSize: PropTypes.number,\n  renderItem: PropTypes.func,\n  filterPlaceholder: PropTypes.string,\n  filterIcon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n  optionsFilter: PropTypes.func,\n  defaultSearchValue: PropTypes.string\n}\n\nexport default OptionsList\n"]},"metadata":{},"sourceType":"module"}