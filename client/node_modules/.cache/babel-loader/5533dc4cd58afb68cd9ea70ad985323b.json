{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport './App.css';\nimport Movies from './components/Movies';\nimport MovieForm from './components/Movie/MovieForm';\nimport DUMMY_MOVIES from \"./resources/dummy_movies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movies, setMovies] = useState(DUMMY_MOVIES);\n\n  const addMovie = title => {\n    let newMovie = {\n      id: uuidv4(),\n      title\n    }; // [...] = spread operator (copy items)\n    // Used because we can't (and shouldn't) change state values directly\n\n    setMovie([...movies, newMovie]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MovieForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Movies, {\n      movies: DUMMY_MOVIES\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"3k+sGIli/fjA7HJvgs/QMFf9PH4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/App.js"],"names":["useState","v4","uuidv4","Movies","MovieForm","DUMMY_MOVIES","App","movies","setMovies","addMovie","title","newMovie","id","setMovie"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBR,QAAQ,CAACK,YAAD,CAAnC;;AACA,QAAMI,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAIC,QAAQ,GAAG;AACbC,MAAAA,EAAE,EAAEV,MAAM,EADG;AAEbQ,MAAAA;AAFa,KAAf,CAD0B,CAM1B;AACA;;AACAG,IAAAA,QAAQ,CAAC,CAAC,GAAGN,MAAJ,EAAYI,QAAZ,CAAD,CAAR;AACD,GATD;;AAWA,sBAAQ;AAAA,4BACV,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADU,eAEV,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEN;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFU;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAKD;;GAnBQC,G;;KAAAA,G;AAqBT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport './App.css';\nimport Movies from './components/Movies';\nimport MovieForm from './components/Movie/MovieForm';\nimport DUMMY_MOVIES from \"./resources/dummy_movies\";\n\n\n\nfunction App() {\n\n  const [movies,setMovies] = useState(DUMMY_MOVIES);\n  const addMovie = (title) => {\n    let newMovie = {\n      id: uuidv4(),\n      title\n    };\n\n    // [...] = spread operator (copy items)\n    // Used because we can't (and shouldn't) change state values directly\n    setMovie([...movies, newMovie]);\n  };\n\n  return (<div>\n<MovieForm/>\n<Movies movies={DUMMY_MOVIES}/>\n  </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}