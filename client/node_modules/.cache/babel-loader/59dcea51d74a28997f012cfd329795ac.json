{"ast":null,"code":"const {\n  mapJoin\n} = require('../../lib-util');\n\nmodule.exports = (ctx, array) => {\n  const keys = uniqueKeys(array);\n  return {\n    columns: columns(ctx, keys),\n    values: values(ctx, array, keys)\n  };\n}; // gets unique keys in object array\n\n\nconst uniqueKeys = array => {\n  const keys = {};\n\n  for (const object of array) {\n    for (const key in object) {\n      keys[key] = true;\n    }\n  }\n\n  return Object.keys(keys);\n}; // gets column string from unique keys of object array\n\n\nconst columns = mapJoin((ctx, arg) => ctx.mapKey(arg)); // gets values string of object array\n\nconst values = (ctx, source, keys) => {\n  let txt = 'values ';\n\n  for (let i = 0; i < source.length; ++i) {\n    if (i !== 0) txt += ', ';\n    txt += '(';\n    const object = source[i];\n\n    for (let j = 0; j < keys.length; ++j) {\n      if (j !== 0) txt += ', ';\n      txt += value(ctx, object[keys[j]]);\n    }\n\n    txt += ')';\n  }\n\n  return txt;\n};\n\nconst value = (ctx, arg) => {\n  if (arg === undefined) return 'default';\n  return ctx.build(arg);\n};","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/EasyQB/src/lib-sq/common/values_array.js"],"names":["mapJoin","require","module","exports","ctx","array","keys","uniqueKeys","columns","values","object","key","Object","arg","mapKey","source","txt","i","length","j","value","undefined","build"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,OAAO,CAAC,gBAAD,CAA3B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC/B,QAAMC,IAAI,GAAGC,UAAU,CAACF,KAAD,CAAvB;AACA,SAAO;AACLG,IAAAA,OAAO,EAAEA,OAAO,CAACJ,GAAD,EAAME,IAAN,CADX;AAELG,IAAAA,MAAM,EAAEA,MAAM,CAACL,GAAD,EAAMC,KAAN,EAAaC,IAAb;AAFT,GAAP;AAID,CAND,C,CAQA;;;AACA,MAAMC,UAAU,GAAGF,KAAK,IAAI;AAC1B,QAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,MAAMI,MAAX,IAAqBL,KAArB,EAA4B;AAC1B,SAAK,MAAMM,GAAX,IAAkBD,MAAlB,EAA0B;AACxBJ,MAAAA,IAAI,CAACK,GAAD,CAAJ,GAAY,IAAZ;AACD;AACF;;AACD,SAAOC,MAAM,CAACN,IAAP,CAAYA,IAAZ,CAAP;AACD,CARD,C,CAUA;;;AACA,MAAME,OAAO,GAAGR,OAAO,CAAC,CAACI,GAAD,EAAMS,GAAN,KAAcT,GAAG,CAACU,MAAJ,CAAWD,GAAX,CAAf,CAAvB,C,CAEA;;AACA,MAAMJ,MAAM,GAAG,CAACL,GAAD,EAAMW,MAAN,EAAcT,IAAd,KAAuB;AACpC,MAAIU,GAAG,GAAG,SAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmC,EAAED,CAArC,EAAwC;AACtC,QAAIA,CAAC,KAAK,CAAV,EAAaD,GAAG,IAAI,IAAP;AACbA,IAAAA,GAAG,IAAI,GAAP;AACA,UAAMN,MAAM,GAAGK,MAAM,CAACE,CAAD,CAArB;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,IAAI,CAACY,MAAzB,EAAiC,EAAEC,CAAnC,EAAsC;AACpC,UAAIA,CAAC,KAAK,CAAV,EAAaH,GAAG,IAAI,IAAP;AACbA,MAAAA,GAAG,IAAII,KAAK,CAAChB,GAAD,EAAMM,MAAM,CAACJ,IAAI,CAACa,CAAD,CAAL,CAAZ,CAAZ;AACD;;AACDH,IAAAA,GAAG,IAAI,GAAP;AACD;;AACD,SAAOA,GAAP;AACD,CAbD;;AAeA,MAAMI,KAAK,GAAG,CAAChB,GAAD,EAAMS,GAAN,KAAc;AAC1B,MAAIA,GAAG,KAAKQ,SAAZ,EAAuB,OAAO,SAAP;AACvB,SAAOjB,GAAG,CAACkB,KAAJ,CAAUT,GAAV,CAAP;AACD,CAHD","sourcesContent":["const { mapJoin } = require('../../lib-util')\n\nmodule.exports = (ctx, array) => {\n  const keys = uniqueKeys(array)\n  return {\n    columns: columns(ctx, keys),\n    values: values(ctx, array, keys)\n  }\n}\n\n// gets unique keys in object array\nconst uniqueKeys = array => {\n  const keys = {}\n  for (const object of array) {\n    for (const key in object) {\n      keys[key] = true\n    }\n  }\n  return Object.keys(keys)\n}\n\n// gets column string from unique keys of object array\nconst columns = mapJoin((ctx, arg) => ctx.mapKey(arg))\n\n// gets values string of object array\nconst values = (ctx, source, keys) => {\n  let txt = 'values '\n  for (let i = 0; i < source.length; ++i) {\n    if (i !== 0) txt += ', '\n    txt += '('\n    const object = source[i]\n    for (let j = 0; j < keys.length; ++j) {\n      if (j !== 0) txt += ', '\n      txt += value(ctx, object[keys[j]])\n    }\n    txt += ')'\n  }\n  return txt\n}\n\nconst value = (ctx, arg) => {\n  if (arg === undefined) return 'default'\n  return ctx.build(arg)\n}\n"]},"metadata":{},"sourceType":"script"}