{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/UI/AddMovieButton.js\",\n    _s = $RefreshSig$();\n\nimport { useEasybase } from \"easybase-react\";\nimport classes from \"./AddMovieButton.module.css\";\nimport GENRES from \"../resources/genres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getGenres = genre_ids => {\n  let genres_array = [];\n  genre_ids.map(id => {\n    const result = GENRES.find(genre => genre.id === id);\n    genres_array.push(result.name);\n    return genres_array;\n  });\n  console.log(genres_array.toString());\n  return genres_array.toString();\n};\n\nconst AddMovieButton = props => {\n  _s();\n\n  const {\n    db,\n    e\n  } = useEasybase();\n\n  const movieExists = async id => {\n    console.log(\"check if movie exists :>> \", id); // try {\n\n    let singleRecord = await db(\"MOVIES\").return().where(e.eq(\"id\", id)).one();\n    console.log(`singleRecord`, singleRecord);\n    return singleRecord !== null; // } catch (exception) {\n    //   console.log(`movie does not exist in your list`, id);\n    // }\n    // return false;\n  };\n\n  const onAddMovie = async ({\n    id,\n    title,\n    genre_ids,\n    poster_path,\n    overview,\n    vote_average\n  }) => {\n    movieExists(id).then(dupe => {\n      if (dupe) {\n        console.log(`duplicate movie: `, title, dupe);\n        return;\n      } else {\n        const genres = getGenres(genre_ids);\n\n        try {\n          db(\"MOVIES\").insert({\n            title: title,\n            genres: genres,\n            posterpath: poster_path,\n            watched: false,\n            overview: overview,\n            voteaverage: Number(vote_average),\n            id: id\n          }).one();\n        } catch (_) {\n          alert(\"Error\");\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.moviebutton,\n    onClick: onAddMovie.bind(null, props.movie),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      children: props.movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.vote,\n      children: props.movie.vote_average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, props.movie.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddMovieButton, \"vyDrp7uKOCCR44KEMmg8mXGK7Xw=\", false, function () {\n  return [useEasybase];\n});\n\n_c = AddMovieButton;\nexport default AddMovieButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMovieButton\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/UI/AddMovieButton.js"],"names":["useEasybase","classes","GENRES","getGenres","genre_ids","genres_array","map","id","result","find","genre","push","name","console","log","toString","AddMovieButton","props","db","e","movieExists","singleRecord","return","where","eq","one","onAddMovie","title","poster_path","overview","vote_average","then","dupe","genres","insert","posterpath","watched","voteaverage","Number","_","alert","moviebutton","bind","movie","vote"],"mappings":"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","sourcesContent":["import { useEasybase } from \"easybase-react\";\n\nimport classes from \"./AddMovieButton.module.css\";\n\nimport GENRES from \"../resources/genres\";\n\nconst getGenres = (genre_ids) => {\n  let genres_array = [];\n  genre_ids.map((id) => {\n    const result = GENRES.find((genre) => genre.id === id);\n    genres_array.push(result.name);\n    return genres_array;\n  });\n\n  console.log(genres_array.toString());\n  return genres_array.toString();\n};\n\nconst AddMovieButton = (props) => {\n  const { db, e } = useEasybase();\n\n  const movieExists = async (id) => {\n    console.log(\"check if movie exists :>> \", id);\n    // try {\n    let singleRecord = await db(\"MOVIES\").return().where(e.eq(\"id\", id)).one();\n    console.log(`singleRecord`, singleRecord);\n    return singleRecord !== null;\n    // } catch (exception) {\n    //   console.log(`movie does not exist in your list`, id);\n    // }\n    // return false;\n  };\n\n  const onAddMovie = async ({\n    id,\n    title,\n    genre_ids,\n    poster_path,\n    overview,\n    vote_average,\n  }) => {\n    movieExists(id).then((dupe) => {\n      if(dupe) {\n        console.log(`duplicate movie: `,  title, dupe);\n        return;\n      }\n      else {\n\n        const genres = getGenres(genre_ids);\n    \n        try {\n           db(\"MOVIES\")\n            .insert({\n              title: title,\n              genres: genres,\n              posterpath: poster_path,\n              watched: false,\n              overview: overview,\n              voteaverage: Number(vote_average),\n              id: id,\n            })\n            .one();\n        } catch (_) {\n          alert(\"Error\");\n        }\n      }\n    });\n  };\n\n\n  return (\n    <div\n      key={props.movie.id}\n      className={classes.moviebutton}\n      onClick={onAddMovie.bind(null, props.movie)}\n    >\n      <div className={classes.title}>{props.movie.title}</div>\n      <div className={classes.vote}>{props.movie.vote_average}</div>\n    </div>\n  );\n};\n\nexport default AddMovieButton;\n"]},"metadata":{},"sourceType":"module"}