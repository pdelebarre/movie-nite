{"version":3,"file":"index.esm-f2f9617f.js","sources":["../src/ui/Auth/components/Form.tsx","../src/ui/Auth/components/internal/Label.tsx","../src/ui/Auth/components/internal/Input.tsx","../src/ui/Auth/components/EmailInput.tsx","../src/ui/Auth/components/PasswordInput.tsx","../src/ui/Auth/components/HeaderText.tsx","../src/ui/Auth/components/internal/TextButton.tsx","../src/ui/Auth/components/SecondaryButton.tsx","../src/ui/Auth/components/SubmitButton.tsx","../src/ui/Auth/components/Spacer.tsx","../node_modules/react-hook-form/dist/index.esm.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Form = styled.form(props => ({\n    display: \"flex\",\n    justifyContent: \"center\",\n    minWidth: 300,\n    width: 380,\n    padding: '33px 55px',\n    boxShadow: '0 5px 10px 0 rgb(0 0 0 / 10%)',\n    borderRadius: 10,\n    flexDirection: 'column',\n    fontFamily: \"inherit\",\n    margin: '6% auto 50px',\n    '@media (max-width: 520px)': {\n        margin: '0px !important',\n        position: 'fixed !important',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        width: 'initial !important'\n    },\n    ...(props.theme.form ? { ...props.theme.form } : {})\n}))\n\nexport default function (props: React.FormHTMLAttributes<HTMLFormElement>) {\n    return (\n        <Form {...props}>{props.children}</Form>\n    )\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Label = styled.label(props => ({\n    display: \"none\",\n    fontFamily: \"inherit\",\n    ...(props.theme.textFieldLabel ? { ...props.theme.textFieldLabel } : {})\n}))\n\nexport default function (props: React.LabelHTMLAttributes<HTMLLabelElement>) {\n    return (<Label {...props} />)\n}\n","import React from 'react';\nimport { UseFormRegisterReturn } from 'react-hook-form';\nimport styled from 'styled-components';\nimport Label from './Label';\n\nconst TextFieldRoot = styled.div(props => ({\n    position: 'relative',\n    width: '100%',\n    maxWidth: '100%',\n    padding: 0,\n    height: 46,\n    fontFamily: \"inherit\",\n    ...(props.theme.textFieldRoot ? { ...props.theme.textFieldRoot } : {})\n}))\n\nconst TextField = styled.input(props => ({\n    display: \"block\",\n    width: '100%',\n    background: '0 0',\n    border: 'none',\n    fontFamily: \"inherit\",\n    ...(props.theme.textField ? { ...props.theme.textField } : {})\n}))\n\nconst Bar = styled.div(props => props.theme.textFieldBar ? { ...props.theme.textFieldBar } : {})\n\ninterface ITextField extends React.InputHTMLAttributes<HTMLInputElement> {\n    label: string\n    register(): UseFormRegisterReturn\n}\n\nexport default function (props: ITextField) {\n    return (\n        <TextFieldRoot>\n            <TextField placeholder=\"&nbsp;\" {...props} {...props.register()} id={\"textField-\" + props.label.replace(/[^a-zA-Z]+/g, '')} />\n            <Bar />\n            <Label htmlFor={\"textField-\" + props.label.replace(/[^a-zA-Z]+/g, '')}>{props.label}</Label>\n        </TextFieldRoot>\n    )\n}\n","import React, { forwardRef } from 'react';\nimport { UseFormRegisterReturn } from 'react-hook-form';\nimport Input from './internal/Input';\n\ninterface ITextField extends React.InputHTMLAttributes<HTMLInputElement> {\n    label?: string\n    register(): UseFormRegisterReturn\n}\n\nexport default function(props: ITextField) {\n    return (\n        <Input label=\"Email\" autoComplete=\"email\" {...props} type=\"email\" required />\n    )\n}\n","import React from 'react';\nimport { UseFormRegisterReturn } from 'react-hook-form';\nimport Input from './internal/Input';\n\ninterface ITextField extends React.InputHTMLAttributes<HTMLInputElement> {\n    label?: string;\n    register(): UseFormRegisterReturn;\n}\n\nexport default function(props: ITextField) {\n    return (\n        <Input label=\"Password\" {...props} type=\"password\" required />\n    )\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderText = styled.h1(props => ({\n    fontFamily: \"inherit\",\n    fontSize: 24,\n    fontWeight: 500,\n    letterSpacing: -.2,\n    marginBlockStart: '0.67em',\n    marginBlockEnd: '0.67em',\n    marginInlineStart: 0,\n    marginInlineEnd: 0,\n    marginTop: '16px !important',\n    ...(props.theme.headerText ? { ...props.theme.headerText } : {})\n}))\n\nexport default function (props: React.HTMLAttributes<HTMLHeadingElement>) {\n    return (\n        <HeaderText {...props} />\n    )\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst TextButton = styled.button(props => ({\n    cursor: \"pointer\",\n    color: '#635bff',\n    whiteSpace: 'nowrap',\n    fontWeight: 500,\n    fontSize: 14,\n    margin: 0,\n    background: 'none',\n    border: 'none',\n    ...(props.theme.textButton ? { ...props.theme.textButton } : {})\n}))\n\nexport default function (props: React.ButtonHTMLAttributes<HTMLButtonElement>) {\n    return (\n        <TextButton {...props} type=\"button\" />\n    )\n}\n","import React from 'react';\nimport TextButton from './internal/TextButton';\nimport styled from 'styled-components';\n\nconst SecondaryButton = styled(TextButton)(props => ({\n    margin: '15px',\n    ...(props.theme.secondaryButton ? { ...props.theme.secondaryButton } : {})\n}))\n\nexport default function (props: React.ButtonHTMLAttributes<HTMLButtonElement>) {\n    return (\n        <SecondaryButton {...props} />\n    )\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst SubmitButtonRoot = styled.div(props => props.theme.submitButtonRoot ? props.theme.submitButtonRoot : {});\n\nconst SubmitButton = styled.button(props => ({\n    position: 'relative',\n    border: \"none\",\n    verticalAlign: \"middle\",\n    textAlign: \"center\",\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n    outline: \"none\",\n    cursor: \"pointer\",\n    boxSizing: 'border-box',\n    ...(props.theme.submitButton ? { ...props.theme.submitButton } : {})\n}))\n\nexport default function (props: React.ButtonHTMLAttributes<HTMLButtonElement>) {\n    return (\n        <SubmitButtonRoot>\n            <SubmitButton type=\"submit\" {...props} />\n        </SubmitButtonRoot>\n    )\n}\n","import React from 'react';\n\ninterface ISpacer {\n    size?: \"xlarge\" | \"large\" | \"medium\" | \"small\"\n}\n\nexport default function (props: ISpacer) {\n    switch (props.size) {\n        case \"xlarge\":\n            return <div style={{ height: 64 }} />   \n        case \"large\":\n            return <div style={{ height: 58 }} />            \n        case \"small\":\n            return <div style={{ height: 16 }} />\n        default:\n            return <div style={{ height: 37 }} />\n    }\n}\n","import * as React from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\r\nvar isObject = (value) => !isNullOrUndefined(value) &&\r\n    !Array.isArray(value) &&\r\n    isObjectType(value) &&\r\n    !(value instanceof Date);\n\nvar getControllerValue = (event) => isObject(event) && event.target\r\n    ? isCheckBoxInput(event.target)\r\n        ? event.target.checked\r\n        : event.target.value\r\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/.\\d/)) || name;\n\nvar isNameInFieldArray = (names, name) => [...names].some((current) => getNodeParentName(name) === current);\n\nvar compact = (value) => value.filter(Boolean);\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (obj, path, defaultValue) => {\r\n    if (isObject(obj) && path) {\r\n        const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => (isNullOrUndefined(result) ? result : result[key]), obj);\r\n        return isUndefined(result) || result === obj\r\n            ? isUndefined(obj[path])\r\n                ? defaultValue\r\n                : obj[path]\r\n            : result;\r\n    }\r\n    return undefined;\r\n};\n\nconst EVENTS = {\r\n    BLUR: 'blur',\r\n    CHANGE: 'change',\r\n};\r\nconst VALIDATION_MODE = {\r\n    onBlur: 'onBlur',\r\n    onChange: 'onChange',\r\n    onSubmit: 'onSubmit',\r\n    onTouched: 'onTouched',\r\n    all: 'all',\r\n};\r\nconst INPUT_VALIDATION_RULES = {\r\n    max: 'max',\r\n    min: 'min',\r\n    maxLength: 'maxLength',\r\n    minLength: 'minLength',\r\n    pattern: 'pattern',\r\n    required: 'required',\r\n    validate: 'validate',\r\n};\n\nvar omit = (source, key) => {\r\n    const copy = Object.assign({}, source);\r\n    delete copy[key];\r\n    return copy;\r\n};\n\nconst FormContext = React.createContext(null);\r\nFormContext.displayName = 'RHFContext';\r\nconst useFormContext = () => React.useContext(FormContext);\r\nconst FormProvider = (props) => (React.createElement(FormContext.Provider, { value: omit(props, 'children') }, props.children));\n\nvar getProxyFormState = (isProxyEnabled, formState, readFormStateRef, localReadFormStateRef, isRoot = true) => isProxyEnabled\r\n    ? new Proxy(formState, {\r\n        get: (obj, prop) => {\r\n            if (prop in obj) {\r\n                if (readFormStateRef.current[prop] !== VALIDATION_MODE.all) {\r\n                    readFormStateRef.current[prop] = isRoot\r\n                        ? VALIDATION_MODE.all\r\n                        : true;\r\n                }\r\n                localReadFormStateRef &&\r\n                    (localReadFormStateRef.current[prop] = true);\r\n                return obj[prop];\r\n            }\r\n            return undefined;\r\n        },\r\n    })\r\n    : formState;\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, readFormStateRef, isRoot) => {\r\n    const formState = omit(formStateData, 'name');\r\n    return (isEmptyObject(formState) ||\r\n        Object.keys(formState).length >= Object.keys(readFormStateRef).length ||\r\n        Object.keys(formState).find((key) => readFormStateRef[key] ===\r\n            (isRoot ? VALIDATION_MODE.all : true)));\r\n};\n\nvar convertToArrayPayload = (value) => Array.isArray(value) ? value : [value];\n\nvar isWeb = typeof window !== 'undefined' &&\r\n    typeof window.HTMLElement !== 'undefined' &&\r\n    typeof document !== 'undefined';\n\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== 'undefined';\n\nfunction useFormState(props) {\r\n    const { control, name } = props || {};\r\n    const methods = useFormContext();\r\n    const { formStateRef, formStateSubjectRef, readFormStateRef } = control || methods.control;\r\n    const nameRef = React.useRef(name);\r\n    nameRef.current = name;\r\n    const [formState, updateFormState] = React.useState(formStateRef.current);\r\n    const readFormState = React.useRef({\r\n        isDirty: false,\r\n        dirtyFields: false,\r\n        touchedFields: false,\r\n        isValidating: false,\r\n        isValid: false,\r\n        errors: false,\r\n    });\r\n    React.useEffect(() => {\r\n        const formStateSubscription = formStateSubjectRef.current.subscribe({\r\n            next: (formState) => (!nameRef.current ||\r\n                !formState.name ||\r\n                convertToArrayPayload(nameRef.current).includes(formState.name)) &&\r\n                shouldRenderFormState(formState, readFormState.current) &&\r\n                updateFormState(Object.assign(Object.assign({}, formStateRef.current), formState)),\r\n        });\r\n        return () => formStateSubscription.unsubscribe();\r\n    }, []);\r\n    return getProxyFormState(isProxyEnabled, formState, readFormStateRef, readFormState, false);\r\n}\n\nfunction useController({ name, rules, defaultValue, control, shouldUnregister, }) {\r\n    const methods = useFormContext();\r\n    const { defaultValuesRef, register, fieldsRef, unregister, fieldArrayNamesRef, controllerSubjectRef, shouldUnmount, inFieldArrayActionRef, } = control || methods.control;\r\n    const { onChange, onBlur, ref } = register(name, rules);\r\n    const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\r\n    const [value, setInputStateValue] = React.useState(isUndefined(get(fieldsRef.current, name)._f.value) || isFieldArray\r\n        ? isUndefined(defaultValue)\r\n            ? get(defaultValuesRef.current, name)\r\n            : defaultValue\r\n        : get(fieldsRef.current, name)._f.value);\r\n    const formState = useFormState({\r\n        control: control || methods.control,\r\n        name,\r\n    });\r\n    const field = get(fieldsRef.current, name);\r\n    field._f.value = value;\r\n    React.useEffect(() => {\r\n        const controllerSubscription = controllerSubjectRef.current.subscribe({\r\n            next: (data) => (!data.name || name === data.name) &&\r\n                setInputStateValue(get(data.values, name)),\r\n        });\r\n        return () => {\r\n            controllerSubscription.unsubscribe();\r\n            const shouldUnmountField = shouldUnmount || shouldUnregister;\r\n            if (isFieldArray\r\n                ? shouldUnmountField && !inFieldArrayActionRef.current\r\n                : shouldUnmountField) {\r\n                unregister(name);\r\n            }\r\n            else if (get(fieldsRef.current, name)) {\r\n                get(fieldsRef.current, name)._f.mount = false;\r\n            }\r\n        };\r\n    }, [name]);\r\n    return {\r\n        field: {\r\n            onChange: (event) => {\r\n                const value = getControllerValue(event);\r\n                setInputStateValue(value);\r\n                onChange({\r\n                    target: {\r\n                        value,\r\n                        name: name,\r\n                    },\r\n                    type: EVENTS.CHANGE,\r\n                });\r\n            },\r\n            onBlur: () => {\r\n                onBlur({\r\n                    target: {\r\n                        name: name,\r\n                    },\r\n                    type: EVENTS.BLUR,\r\n                });\r\n            },\r\n            name,\r\n            value,\r\n            ref: (elm) => elm && ref(elm),\r\n        },\r\n        formState,\r\n        fieldState: {\r\n            invalid: !!get(formState.errors, name),\r\n            isDirty: !!get(formState.dirtyFields, name),\r\n            isTouched: !!get(formState.touchedFields, name),\r\n            error: get(formState.errors, name),\r\n        },\r\n    };\r\n}\n\nconst Controller = (props) => props.render(useController(props));\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\r\n    ? Object.assign(Object.assign({}, errors[name]), { types: Object.assign(Object.assign({}, (errors[name] && errors[name].types ? errors[name].types : {})), { [type]: message || true }) }) : {};\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nfunction set(object, path, value) {\r\n    let index = -1;\r\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\r\n    const length = tempPath.length;\r\n    const lastIndex = length - 1;\r\n    while (++index < length) {\r\n        const key = tempPath[index];\r\n        let newValue = value;\r\n        if (index !== lastIndex) {\r\n            const objValue = object[key];\r\n            newValue =\r\n                isObject(objValue) || Array.isArray(objValue)\r\n                    ? objValue\r\n                    : !isNaN(+tempPath[index + 1])\r\n                        ? []\r\n                        : {};\r\n        }\r\n        object[key] = newValue;\r\n        object = object[key];\r\n    }\r\n    return object;\r\n}\n\nconst focusFieldBy = (fields, callback, fieldsNames) => {\r\n    for (const key of fieldsNames || Object.keys(fields)) {\r\n        const field = get(fields, key);\r\n        if (field) {\r\n            const _f = field._f;\r\n            const current = omit(field, '_f');\r\n            if (_f && callback(_f.name)) {\r\n                if (_f.ref.focus && isUndefined(_f.ref.focus())) {\r\n                    break;\r\n                }\r\n                else if (_f.refs) {\r\n                    _f.refs[0].focus();\r\n                    break;\r\n                }\r\n            }\r\n            else if (isObject(current)) {\r\n                focusFieldBy(current, callback);\r\n            }\r\n        }\r\n    }\r\n};\n\nconst getFieldsValues = (fieldsRef, output = {}) => {\r\n    for (const name in fieldsRef.current) {\r\n        const field = fieldsRef.current[name];\r\n        if (field && !isNullOrUndefined(output)) {\r\n            const _f = field._f;\r\n            const current = omit(field, '_f');\r\n            set(output, name, _f && _f.ref\r\n                ? _f.ref.disabled || (_f.refs && _f.refs.every((ref) => ref.disabled))\r\n                    ? undefined\r\n                    : _f.value\r\n                : Array.isArray(field)\r\n                    ? []\r\n                    : {});\r\n            current &&\r\n                getFieldsValues({\r\n                    current,\r\n                }, output[name]);\r\n        }\r\n    }\r\n    return output;\r\n};\n\nvar generateId = () => {\r\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n        const r = (Math.random() * 16 + d) % 16 | 0;\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n};\n\nvar mapIds = (values = [], keyName) => values.map((value) => (Object.assign({ [keyName]: (value && value[keyName]) || generateId() }, value)));\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2, isErrorObject) {\r\n    if (isPrimitive(object1) ||\r\n        isPrimitive(object2) ||\r\n        object1 instanceof Date ||\r\n        object2 instanceof Date) {\r\n        return object1 === object2;\r\n    }\r\n    if (!React.isValidElement(object1)) {\r\n        const keys1 = Object.keys(object1);\r\n        const keys2 = Object.keys(object2);\r\n        if (keys1.length !== keys2.length) {\r\n            return false;\r\n        }\r\n        for (const key of keys1) {\r\n            const val1 = object1[key];\r\n            if (!(isErrorObject && key === 'ref')) {\r\n                const val2 = object2[key];\r\n                if ((isObject(val1) || Array.isArray(val1)) &&\r\n                    (isObject(val2) || Array.isArray(val2))\r\n                    ? !deepEqual(val1, val2, isErrorObject)\r\n                    : val1 !== val2) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\n\nfunction deepMerge(target, source) {\r\n    if (isPrimitive(target) || isPrimitive(source)) {\r\n        return source;\r\n    }\r\n    for (const key in source) {\r\n        const targetValue = target[key];\r\n        const sourceValue = source[key];\r\n        try {\r\n            target[key] =\r\n                (isObject(targetValue) && isObject(sourceValue)) ||\r\n                    (Array.isArray(targetValue) && Array.isArray(sourceValue))\r\n                    ? deepMerge(targetValue, sourceValue)\r\n                    : sourceValue;\r\n        }\r\n        catch (_a) { }\r\n    }\r\n    return target;\r\n}\n\nfunction setDirtyFields(values, defaultValues, dirtyFields, parentNode, parentName) {\r\n    let index = -1;\r\n    while (++index < values.length) {\r\n        for (const key in values[index]) {\r\n            if (Array.isArray(values[index][key])) {\r\n                !dirtyFields[index] && (dirtyFields[index] = {});\r\n                dirtyFields[index][key] = [];\r\n                setDirtyFields(values[index][key], get(defaultValues[index] || {}, key, []), dirtyFields[index][key], dirtyFields[index], key);\r\n            }\r\n            else {\r\n                deepEqual(get(defaultValues[index] || {}, key), values[index][key])\r\n                    ? set(dirtyFields[index] || {}, key)\r\n                    : (dirtyFields[index] = Object.assign(Object.assign({}, dirtyFields[index]), { [key]: true }));\r\n            }\r\n        }\r\n        parentNode &&\r\n            !dirtyFields.length &&\r\n            delete parentNode[parentName];\r\n    }\r\n    return dirtyFields;\r\n}\r\nvar setFieldArrayDirtyFields = (values, defaultValues, dirtyFields) => deepMerge(setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)), setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)));\n\nfunction append(data, value) {\r\n    return [...data, ...convertToArrayPayload(value)];\r\n}\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? Array(value.length).fill(undefined) : undefined;\n\nfunction insert(data, index, value) {\r\n    return [\r\n        ...data.slice(0, index),\r\n        ...convertToArrayPayload(value),\r\n        ...data.slice(index),\r\n    ];\r\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar moveArrayAt = (data, from, to) => {\r\n    if (Array.isArray(data)) {\r\n        if (isUndefined(data[to])) {\r\n            data[to] = undefined;\r\n        }\r\n        data.splice(to, 0, data.splice(from, 1)[0]);\r\n        return data;\r\n    }\r\n    return [];\r\n};\n\nfunction prepend(data, value) {\r\n    return [...convertToArrayPayload(value), ...data];\r\n}\n\nfunction removeAtIndexes(data, indexes) {\r\n    let i = 0;\r\n    const temp = [...data];\r\n    for (const index of indexes) {\r\n        temp.splice(index - i, 1);\r\n        i++;\r\n    }\r\n    return compact(temp).length ? temp : [];\r\n}\r\nvar removeArrayAt = (data, index) => isUndefined(index)\r\n    ? []\r\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\r\n    data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\r\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nfunction baseGet(object, updatePath) {\r\n    const length = updatePath.slice(0, -1).length;\r\n    let index = 0;\r\n    while (index < length) {\r\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\r\n    }\r\n    return object;\r\n}\r\nfunction unset(object, path) {\r\n    const updatePath = isKey(path) ? [path] : stringToPath(path);\r\n    const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\r\n    const key = updatePath[updatePath.length - 1];\r\n    let previousObjRef;\r\n    if (childObject) {\r\n        delete childObject[key];\r\n    }\r\n    for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\r\n        let index = -1;\r\n        let objectRef;\r\n        const currentPaths = updatePath.slice(0, -(k + 1));\r\n        const currentPathsLength = currentPaths.length - 1;\r\n        if (k > 0) {\r\n            previousObjRef = object;\r\n        }\r\n        while (++index < currentPaths.length) {\r\n            const item = currentPaths[index];\r\n            objectRef = objectRef ? objectRef[item] : object[item];\r\n            if (currentPathsLength === index &&\r\n                ((isObject(objectRef) && isEmptyObject(objectRef)) ||\r\n                    (Array.isArray(objectRef) &&\r\n                        !objectRef.filter((data) => (isObject(data) && !isEmptyObject(data)) || isBoolean(data)).length))) {\r\n                previousObjRef ? delete previousObjRef[item] : delete object[item];\r\n            }\r\n            previousObjRef = objectRef;\r\n        }\r\n    }\r\n    return object;\r\n}\n\nconst useFieldArray = ({ control, name, keyName = 'id', shouldUnregister, }) => {\r\n    const methods = useFormContext();\r\n    const focusNameRef = React.useRef('');\r\n    const isMountedRef = React.useRef(false);\r\n    const { isWatchAllRef, watchFieldsRef, getIsDirty, watchSubjectRef, fieldArraySubjectRef, fieldArrayNamesRef, fieldsRef, defaultValuesRef, formStateRef, formStateSubjectRef, readFormStateRef, validFieldsRef, fieldsWithValidationRef, fieldArrayDefaultValuesRef, unregister, shouldUnmount, inFieldArrayActionRef, } = control || methods.control;\r\n    const [fields, setFields] = React.useState(mapIds(get(fieldsRef.current, name) && isMountedRef.current\r\n        ? get(getFieldsValues(fieldsRef), name)\r\n        : get(fieldArrayDefaultValuesRef.current, getNodeParentName(name))\r\n            ? get(fieldArrayDefaultValuesRef.current, name, [])\r\n            : get(defaultValuesRef.current, name, []), keyName));\r\n    set(fieldArrayDefaultValuesRef.current, name, [...fields]);\r\n    fieldArrayNamesRef.current.add(name);\r\n    const omitKey = (fields) => fields.map((field) => omit((field || {}), keyName));\r\n    const getCurrentFieldsValues = () => {\r\n        const values = get(getFieldsValues(fieldsRef), name, []);\r\n        return mapIds(get(fieldArrayDefaultValuesRef.current, name, []).map((item, index) => (Object.assign(Object.assign({}, item), values[index]))), keyName);\r\n    };\r\n    const getFocusDetail = (index, options) => options\r\n        ? !isUndefined(options.focusIndex)\r\n            ? `${name}.${options.focusIndex}`\r\n            : options.focusName\r\n                ? options.focusName\r\n                : !options.shouldFocus\r\n                    ? ''\r\n                    : `${name}.${index}`\r\n        : `${name}.${index}`;\r\n    const resetFields = (index) => convertToArrayPayload(index).forEach((currentIndex) => set(fieldsRef.current, `${name}${isUndefined(currentIndex) ? '' : `.${currentIndex}`}`, isUndefined(currentIndex) ? [] : undefined));\r\n    const setFieldsAndNotify = (fieldsValues = []) => setFields(mapIds(fieldsValues, keyName));\r\n    const cleanup = (ref) => !compact(get(ref, name, [])).length && unset(ref, name);\r\n    const updateDirtyFieldsWithDefaultValues = (updatedFieldArrayValues) => updatedFieldArrayValues &&\r\n        set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues), get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\r\n    const batchStateUpdate = (method, args, updatedFieldArrayValues = [], shouldSet = true) => {\r\n        inFieldArrayActionRef.current = true;\r\n        if (get(fieldsRef.current, name)) {\r\n            const output = method(get(fieldsRef.current, name), args.argA, args.argB);\r\n            shouldSet && set(fieldsRef.current, name, output);\r\n        }\r\n        if (Array.isArray(get(formStateRef.current.errors, name))) {\r\n            const output = method(get(formStateRef.current.errors, name), args.argA, args.argB);\r\n            shouldSet && set(formStateRef.current.errors, name, output);\r\n            cleanup(formStateRef.current.errors);\r\n        }\r\n        if (readFormStateRef.current.touchedFields &&\r\n            get(formStateRef.current.touchedFields, name)) {\r\n            const output = method(get(formStateRef.current.touchedFields, name), args.argA, args.argB);\r\n            shouldSet && set(formStateRef.current.touchedFields, name, output);\r\n            cleanup(formStateRef.current.touchedFields);\r\n        }\r\n        if (readFormStateRef.current.dirtyFields ||\r\n            readFormStateRef.current.isDirty) {\r\n            set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues), get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\r\n            updateDirtyFieldsWithDefaultValues(updatedFieldArrayValues);\r\n            cleanup(formStateRef.current.dirtyFields);\r\n        }\r\n        if (readFormStateRef.current.isValid) {\r\n            set(validFieldsRef.current, name, method(get(validFieldsRef.current, name, []), args.argA));\r\n            cleanup(validFieldsRef.current);\r\n            set(fieldsWithValidationRef.current, name, method(get(fieldsWithValidationRef.current, name, []), args.argA));\r\n            cleanup(fieldsWithValidationRef.current);\r\n        }\r\n        formStateSubjectRef.current.next({\r\n            isDirty: getIsDirty(name, omitKey(updatedFieldArrayValues)),\r\n            errors: formStateRef.current.errors,\r\n            isValid: formStateRef.current.isValid,\r\n        });\r\n    };\r\n    const registerFieldArray = (values, index = 0, parentName = '') => values.forEach((appendValueItem, valueIndex) => !isPrimitive(appendValueItem) &&\r\n        Object.entries(appendValueItem).forEach(([key, value]) => {\r\n            const inputName = `${parentName || name}.${parentName ? valueIndex : index + valueIndex}.${key}`;\r\n            Array.isArray(value)\r\n                ? registerFieldArray(value, valueIndex, inputName)\r\n                : set(fieldsRef.current, inputName, {\r\n                    _f: {\r\n                        ref: {\r\n                            name: inputName,\r\n                        },\r\n                        name: inputName,\r\n                        value: isPrimitive(value) ? value : Object.assign({}, value),\r\n                    },\r\n                });\r\n        }));\r\n    const append$1 = (value, options) => {\r\n        const appendValue = convertToArrayPayload(value);\r\n        const updatedFieldArrayValues = append(getCurrentFieldsValues(), appendValue);\r\n        const currentIndex = updatedFieldArrayValues.length - appendValue.length;\r\n        setFieldsAndNotify(updatedFieldArrayValues);\r\n        batchStateUpdate(append, {\r\n            argA: fillEmptyArray(value),\r\n        }, updatedFieldArrayValues, false);\r\n        registerFieldArray(appendValue, currentIndex);\r\n        focusNameRef.current = getFocusDetail(currentIndex, options);\r\n    };\r\n    const prepend$1 = (value, options) => {\r\n        const prependValue = convertToArrayPayload(value);\r\n        const updatedFieldArrayValues = prepend(getCurrentFieldsValues(), prependValue);\r\n        setFieldsAndNotify(updatedFieldArrayValues);\r\n        batchStateUpdate(prepend, {\r\n            argA: fillEmptyArray(value),\r\n        }, updatedFieldArrayValues);\r\n        registerFieldArray(prependValue);\r\n        focusNameRef.current = getFocusDetail(0, options);\r\n    };\r\n    const remove = (index) => {\r\n        const updatedFieldArrayValues = removeArrayAt(getCurrentFieldsValues(), index);\r\n        resetFields(index);\r\n        setFieldsAndNotify(updatedFieldArrayValues);\r\n        batchStateUpdate(removeArrayAt, {\r\n            argA: index,\r\n        }, updatedFieldArrayValues);\r\n    };\r\n    const insert$1 = (index, value, options) => {\r\n        const insertValue = convertToArrayPayload(value);\r\n        const updatedFieldArrayValues = insert(getCurrentFieldsValues(), index, insertValue);\r\n        setFieldsAndNotify(updatedFieldArrayValues);\r\n        batchStateUpdate(insert, {\r\n            argA: index,\r\n            argB: fillEmptyArray(value),\r\n        }, updatedFieldArrayValues);\r\n        registerFieldArray(insertValue, index);\r\n        focusNameRef.current = getFocusDetail(index, options);\r\n    };\r\n    const swap = (indexA, indexB) => {\r\n        const fieldValues = getCurrentFieldsValues();\r\n        swapArrayAt(fieldValues, indexA, indexB);\r\n        batchStateUpdate(swapArrayAt, {\r\n            argA: indexA,\r\n            argB: indexB,\r\n        }, fieldValues, false);\r\n        setFieldsAndNotify(fieldValues);\r\n    };\r\n    const move = (from, to) => {\r\n        const fieldValues = getCurrentFieldsValues();\r\n        moveArrayAt(fieldValues, from, to);\r\n        setFieldsAndNotify(fieldValues);\r\n        batchStateUpdate(moveArrayAt, {\r\n            argA: from,\r\n            argB: to,\r\n        }, fieldValues, false);\r\n    };\r\n    React.useEffect(() => {\r\n        inFieldArrayActionRef.current = false;\r\n        if (isWatchAllRef.current) {\r\n            formStateSubjectRef.current.next({});\r\n        }\r\n        else {\r\n            for (const watchField of watchFieldsRef.current) {\r\n                if (name.startsWith(watchField)) {\r\n                    formStateSubjectRef.current.next({});\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        watchSubjectRef.current.next({\r\n            name,\r\n            formValues: getFieldsValues(fieldsRef),\r\n        });\r\n        focusNameRef.current &&\r\n            focusFieldBy(fieldsRef.current, (key) => isString(key) && key.startsWith(focusNameRef.current));\r\n        focusNameRef.current = '';\r\n        fieldArraySubjectRef.current.next({\r\n            name,\r\n            fields: omitKey([...fields]),\r\n        });\r\n    }, [fields, name]);\r\n    React.useEffect(() => {\r\n        const fieldArraySubscription = fieldArraySubjectRef.current.subscribe({\r\n            next({ name: inputFieldArrayName, fields, isReset }) {\r\n                if (isReset) {\r\n                    unset(fieldsRef.current, inputFieldArrayName || name);\r\n                    inputFieldArrayName\r\n                        ? set(fieldArrayDefaultValuesRef.current, inputFieldArrayName, fields)\r\n                        : (fieldArrayDefaultValuesRef.current = fields);\r\n                    setFieldsAndNotify(get(fieldArrayDefaultValuesRef.current, name));\r\n                }\r\n            },\r\n        });\r\n        !get(fieldsRef.current, name) && set(fieldsRef.current, name, []);\r\n        isMountedRef.current = true;\r\n        return () => {\r\n            fieldArraySubscription.unsubscribe();\r\n            (shouldUnmount || shouldUnregister) &&\r\n                unregister(name);\r\n        };\r\n    }, []);\r\n    return {\r\n        swap: React.useCallback(swap, [name]),\r\n        move: React.useCallback(move, [name]),\r\n        prepend: React.useCallback(prepend$1, [name]),\r\n        append: React.useCallback(append$1, [name]),\r\n        remove: React.useCallback(remove, [name]),\r\n        insert: React.useCallback(insert$1, [name]),\r\n        fields: fields,\r\n    };\r\n};\n\nfunction getFields(fieldsNames, fieldsRefs) {\r\n    const currentFields = {};\r\n    for (const name of fieldsNames) {\r\n        const field = get(fieldsRefs, name);\r\n        if (field) {\r\n            !isKey(name)\r\n                ? set(currentFields, name, field._f)\r\n                : (currentFields[name] = field._f);\r\n        }\r\n    }\r\n    return currentFields;\r\n}\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nconst defaultResult = {\r\n    value: false,\r\n    isValid: false,\r\n};\r\nconst validResult = { value: true, isValid: true };\r\nvar getCheckboxValue = (options) => {\r\n    if (Array.isArray(options)) {\r\n        if (options.length > 1) {\r\n            const values = options\r\n                .filter((option) => option && option.checked && !option.disabled)\r\n                .map((option) => option.value);\r\n            return { value: values, isValid: !!values.length };\r\n        }\r\n        return options[0].checked && !options[0].disabled\r\n            ? // @ts-expect-error expected to work in the browser\r\n                options[0].attributes && !isUndefined(options[0].attributes.value)\r\n                    ? isUndefined(options[0].value) || options[0].value === ''\r\n                        ? validResult\r\n                        : { value: options[0].value, isValid: true }\r\n                    : validResult\r\n            : defaultResult;\r\n    }\r\n    return defaultResult;\r\n};\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\r\n    ? value\r\n    : valueAsNumber\r\n        ? value === ''\r\n            ? NaN\r\n            : +value\r\n        : valueAsDate\r\n            ? new Date(value)\r\n            : setValueAs\r\n                ? setValueAs(value)\r\n                : value;\n\nvar getMultipleSelectValue = (options) => [...options]\r\n    .filter(({ selected }) => selected)\r\n    .map(({ value }) => value);\n\nconst defaultReturn = {\r\n    isValid: false,\r\n    value: null,\r\n};\r\nvar getRadioValue = (options) => Array.isArray(options)\r\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\r\n        ? {\r\n            isValid: true,\r\n            value: option.value,\r\n        }\r\n        : previous, defaultReturn)\r\n    : defaultReturn;\n\nfunction getFieldValue(field) {\r\n    if (field && field._f) {\r\n        const ref = field._f.ref;\r\n        if (ref.disabled) {\r\n            return;\r\n        }\r\n        if (isFileInput(ref)) {\r\n            return ref.files;\r\n        }\r\n        if (isRadioInput(ref)) {\r\n            return getRadioValue(field._f.refs).value;\r\n        }\r\n        if (isMultipleSelect(ref)) {\r\n            return getMultipleSelectValue(ref.options);\r\n        }\r\n        if (isCheckBoxInput(ref)) {\r\n            return getCheckboxValue(field._f.refs).value;\r\n        }\r\n        return getFieldValueAs(isUndefined(ref.value) ? field._f.ref.value : ref.value, field._f);\r\n    }\r\n}\n\nvar hasValidation = (options, mounted) => mounted &&\r\n    options &&\r\n    (options.required ||\r\n        options.min ||\r\n        options.max ||\r\n        options.maxLength ||\r\n        options.minLength ||\r\n        options.pattern ||\r\n        options.validate);\n\nvar skipValidation = ({ isOnBlur, isOnChange, isOnTouch, isTouched, isReValidateOnBlur, isReValidateOnChange, isBlurEvent, isSubmitted, isOnAll, }) => {\r\n    if (isOnAll) {\r\n        return false;\r\n    }\r\n    else if (!isSubmitted && isOnTouch) {\r\n        return !(isTouched || isBlurEvent);\r\n    }\r\n    else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\r\n        return !isBlurEvent;\r\n    }\r\n    else if (isSubmitted ? isReValidateOnChange : isOnChange) {\r\n        return isBlurEvent;\r\n    }\r\n    return true;\r\n};\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isMessage = (value) => isString(value) || React.isValidElement(value);\n\nvar isRegex = (value) => value instanceof RegExp;\n\nfunction getValidateError(result, ref, type = 'validate') {\r\n    if (isMessage(result) ||\r\n        (Array.isArray(result) && result.every(isMessage)) ||\r\n        (isBoolean(result) && !result)) {\r\n        return {\r\n            type,\r\n            message: isMessage(result) ? result : '',\r\n            ref,\r\n        };\r\n    }\r\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\r\n    ? validationData\r\n    : {\r\n        value: validationData,\r\n        message: '',\r\n    };\n\nvar validateField = async ({ _f: { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, value: inputValue, valueAsNumber, mount, }, }, validateAllFieldCriteria) => {\r\n    if (!mount) {\r\n        return {};\r\n    }\r\n    const error = {};\r\n    const isRadio = isRadioInput(ref);\r\n    const isCheckBox = isCheckBoxInput(ref);\r\n    const isRadioOrCheckbox = isRadio || isCheckBox;\r\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\r\n        inputValue === '' ||\r\n        (Array.isArray(inputValue) && !inputValue.length);\r\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\r\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\r\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\r\n        error[name] = Object.assign({ type: exceedMax ? maxType : minType, message,\r\n            ref }, appendErrorsCurry(exceedMax ? maxType : minType, message));\r\n    };\r\n    if (required &&\r\n        ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(inputValue))) ||\r\n            (isBoolean(inputValue) && !inputValue) ||\r\n            (isCheckBox && !getCheckboxValue(refs).isValid) ||\r\n            (isRadio && !getRadioValue(refs).isValid))) {\r\n        const { value, message } = isMessage(required)\r\n            ? { value: !!required, message: required }\r\n            : getValueAndMessage(required);\r\n        if (value) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.required, message, ref: isRadioOrCheckbox ? (refs || [])[0] || {} : ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if ((!isNullOrUndefined(min) || !isNullOrUndefined(max)) &&\r\n        inputValue !== '') {\r\n        let exceedMax;\r\n        let exceedMin;\r\n        const maxOutput = getValueAndMessage(max);\r\n        const minOutput = getValueAndMessage(min);\r\n        if (!isNaN(inputValue)) {\r\n            const valueNumber = ref.valueAsNumber || parseFloat(inputValue);\r\n            if (!isNullOrUndefined(maxOutput.value)) {\r\n                exceedMax = valueNumber > maxOutput.value;\r\n            }\r\n            if (!isNullOrUndefined(minOutput.value)) {\r\n                exceedMin = valueNumber < minOutput.value;\r\n            }\r\n        }\r\n        else {\r\n            const valueDate = ref.valueAsDate || new Date(inputValue);\r\n            if (isString(maxOutput.value)) {\r\n                exceedMax = valueDate > new Date(maxOutput.value);\r\n            }\r\n            if (isString(minOutput.value)) {\r\n                exceedMin = valueDate < new Date(minOutput.value);\r\n            }\r\n        }\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (isString(inputValue) && !isEmpty && (maxLength || minLength)) {\r\n        const maxLengthOutput = getValueAndMessage(maxLength);\r\n        const minLengthOutput = getValueAndMessage(minLength);\r\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\r\n            inputValue.length > maxLengthOutput.value;\r\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\r\n            inputValue.length < minLengthOutput.value;\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (isString(inputValue) && pattern && !isEmpty) {\r\n        const { value: patternValue, message } = getValueAndMessage(pattern);\r\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.pattern, message,\r\n                ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message));\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (validate) {\r\n        const validateRef = isRadioOrCheckbox && refs ? refs[0] : ref;\r\n        if (isFunction(validate)) {\r\n            const result = await validate(inputValue);\r\n            const validateError = getValidateError(result, validateRef);\r\n            if (validateError) {\r\n                error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n        else if (isObject(validate)) {\r\n            let validationResult = {};\r\n            for (const [key, validateFunction] of Object.entries(validate)) {\r\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\r\n                    break;\r\n                }\r\n                const validateResult = await validateFunction(inputValue);\r\n                const validateError = getValidateError(validateResult, validateRef, key);\r\n                if (validateError) {\r\n                    validationResult = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\r\n                    if (validateAllFieldCriteria) {\r\n                        error[name] = validationResult;\r\n                    }\r\n                }\r\n            }\r\n            if (!isEmptyObject(validationResult)) {\r\n                error[name] = Object.assign({ ref: validateRef }, validationResult);\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return error;\r\n};\n\nvar getValidationModes = (mode) => ({\r\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\r\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\r\n    isOnChange: mode === VALIDATION_MODE.onChange,\r\n    isOnAll: mode === VALIDATION_MODE.all,\r\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\r\n});\n\nvar isHTMLElement = (value) => value instanceof HTMLElement;\n\nvar isRadioOrCheckboxFunction = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nclass Subscription {\r\n    constructor() {\r\n        this.tearDowns = [];\r\n    }\r\n    add(tearDown) {\r\n        this.tearDowns.push(tearDown);\r\n    }\r\n    unsubscribe() {\r\n        for (const teardown of this.tearDowns) {\r\n            teardown();\r\n        }\r\n        this.tearDowns = [];\r\n    }\r\n}\r\nclass Subscriber {\r\n    constructor(observer, subscription) {\r\n        this.observer = observer;\r\n        this.closed = false;\r\n        subscription.add(() => (this.closed = true));\r\n    }\r\n    next(value) {\r\n        if (!this.closed) {\r\n            this.observer.next(value);\r\n        }\r\n    }\r\n}\r\nclass Subject {\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n    next(value) {\r\n        for (const observer of this.observers) {\r\n            observer.next(value);\r\n        }\r\n    }\r\n    subscribe(observer) {\r\n        const subscription = new Subscription();\r\n        const subscriber = new Subscriber(observer, subscription);\r\n        this.observers.push(subscriber);\r\n        return subscription;\r\n    }\r\n    unsubscribe() {\r\n        this.observers = [];\r\n    }\r\n}\n\nconst isWindowUndefined = typeof window === 'undefined';\r\nfunction useForm({ mode = VALIDATION_MODE.onSubmit, reValidateMode = VALIDATION_MODE.onChange, resolver, context, defaultValues = {}, shouldFocusError = true, shouldUnregister, criteriaMode, } = {}) {\r\n    const fieldsRef = React.useRef({});\r\n    const fieldsNamesRef = React.useRef(new Set());\r\n    const formStateSubjectRef = React.useRef(new Subject());\r\n    const unregisterFieldsNamesRef = React.useRef(new Set());\r\n    const watchSubjectRef = React.useRef(new Subject());\r\n    const controllerSubjectRef = React.useRef(new Subject());\r\n    const fieldArraySubjectRef = React.useRef(new Subject());\r\n    const fieldArrayDefaultValuesRef = React.useRef({});\r\n    const inFieldArrayActionRef = React.useRef(false);\r\n    const watchFieldsRef = React.useRef(new Set());\r\n    const isMountedRef = React.useRef(false);\r\n    const fieldsWithValidationRef = React.useRef({});\r\n    const validFieldsRef = React.useRef({});\r\n    const defaultValuesRef = React.useRef(defaultValues);\r\n    const isWatchAllRef = React.useRef(false);\r\n    const contextRef = React.useRef(context);\r\n    const resolverRef = React.useRef(resolver);\r\n    const fieldArrayNamesRef = React.useRef(new Set());\r\n    const validationMode = getValidationModes(mode);\r\n    const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\r\n    const [formState, updateFormState] = React.useState({\r\n        isDirty: false,\r\n        isValidating: false,\r\n        dirtyFields: {},\r\n        isSubmitted: false,\r\n        submitCount: 0,\r\n        touchedFields: {},\r\n        isSubmitting: false,\r\n        isSubmitSuccessful: false,\r\n        isValid: !validationMode.isOnSubmit,\r\n        errors: {},\r\n    });\r\n    const readFormStateRef = React.useRef({\r\n        isDirty: !isProxyEnabled,\r\n        dirtyFields: !isProxyEnabled,\r\n        touchedFields: !isProxyEnabled,\r\n        isValidating: !isProxyEnabled,\r\n        isValid: !isProxyEnabled,\r\n        errors: !isProxyEnabled,\r\n    });\r\n    const formStateRef = React.useRef(formState);\r\n    contextRef.current = context;\r\n    resolverRef.current = resolver;\r\n    const getIsValid = () => {\r\n        formStateRef.current.isValid =\r\n            deepEqual(validFieldsRef.current, fieldsWithValidationRef.current) &&\r\n                isEmptyObject(formStateRef.current.errors);\r\n        return formStateRef.current.isValid;\r\n    };\r\n    const shouldRenderBaseOnError = React.useCallback((name, error, shouldRender = false, state = {}, isValid, isWatched) => {\r\n        const previousError = get(formStateRef.current.errors, name);\r\n        if (error) {\r\n            unset(validFieldsRef.current, name);\r\n            set(formStateRef.current.errors, name, error);\r\n        }\r\n        else {\r\n            (get(fieldsWithValidationRef.current, name) || resolverRef.current) &&\r\n                set(validFieldsRef.current, name, true);\r\n            unset(formStateRef.current.errors, name);\r\n        }\r\n        if ((shouldRender ||\r\n            isWatched ||\r\n            (error ? !deepEqual(previousError, error, true) : previousError) ||\r\n            !isEmptyObject(state) ||\r\n            (readFormStateRef.current.isValid &&\r\n                formStateRef.current.isValid !==\r\n                    (resolverRef.current ? !!isValid : getIsValid()))) &&\r\n            !isNullOrUndefined(shouldRender)) {\r\n            const updatedFormState = Object.assign(Object.assign({}, state), { isValid: resolverRef.current ? !!isValid : getIsValid(), errors: formStateRef.current.errors, name });\r\n            formStateRef.current = Object.assign(Object.assign({}, formStateRef.current), updatedFormState);\r\n            formStateSubjectRef.current.next(isWatched ? { name } : updatedFormState);\r\n        }\r\n        formStateSubjectRef.current.next({\r\n            isValidating: false,\r\n        });\r\n    }, []);\r\n    const setFieldValue = React.useCallback((name, rawValue, options = {}, shouldRender, shouldRegister) => {\r\n        shouldRegister && register(name);\r\n        const field = get(fieldsRef.current, name);\r\n        if (field) {\r\n            const _f = field._f;\r\n            if (_f) {\r\n                const value = isWeb && isHTMLElement(_f.ref) && isNullOrUndefined(rawValue)\r\n                    ? ''\r\n                    : rawValue;\r\n                _f.value = getFieldValueAs(rawValue, _f);\r\n                if (isRadioInput(_f.ref)) {\r\n                    (_f.refs || []).forEach((radioRef) => (radioRef.checked = radioRef.value === value));\r\n                }\r\n                else if (isFileInput(_f.ref) && !isString(value)) {\r\n                    _f.ref.files = value;\r\n                }\r\n                else if (isMultipleSelect(_f.ref)) {\r\n                    [..._f.ref.options].forEach((selectRef) => (selectRef.selected = value.includes(selectRef.value)));\r\n                }\r\n                else if (isCheckBoxInput(_f.ref) && _f.refs) {\r\n                    _f.refs.length > 1\r\n                        ? _f.refs.forEach((checkboxRef) => (checkboxRef.checked = Array.isArray(value)\r\n                            ? !!value.find((data) => data === checkboxRef.value)\r\n                            : value === checkboxRef.value))\r\n                        : (_f.refs[0].checked = !!value);\r\n                }\r\n                else {\r\n                    _f.ref.value = value;\r\n                }\r\n                if (shouldRender) {\r\n                    const values = getFieldsValues(fieldsRef);\r\n                    set(values, name, rawValue);\r\n                    controllerSubjectRef.current.next({\r\n                        values: Object.assign(Object.assign({}, defaultValuesRef.current), values),\r\n                        name,\r\n                    });\r\n                }\r\n                options.shouldDirty && updateAndGetDirtyState(name, value);\r\n                options.shouldValidate && trigger(name);\r\n            }\r\n            else {\r\n                field._f = {\r\n                    ref: {\r\n                        name,\r\n                        value: rawValue,\r\n                    },\r\n                    value: rawValue,\r\n                };\r\n            }\r\n        }\r\n    }, []);\r\n    const getIsDirty = React.useCallback((name, data) => {\r\n        const formValues = getFieldsValues(fieldsRef);\r\n        name && data && set(formValues, name, data);\r\n        return !deepEqual(formValues, defaultValuesRef.current);\r\n    }, []);\r\n    const updateAndGetDirtyState = React.useCallback((name, inputValue, shouldRender = true) => {\r\n        if (readFormStateRef.current.isDirty ||\r\n            readFormStateRef.current.dirtyFields) {\r\n            const isFieldDirty = !deepEqual(get(defaultValuesRef.current, name), inputValue);\r\n            const isDirtyFieldExist = get(formStateRef.current.dirtyFields, name);\r\n            const previousIsDirty = formStateRef.current.isDirty;\r\n            isFieldDirty\r\n                ? set(formStateRef.current.dirtyFields, name, true)\r\n                : unset(formStateRef.current.dirtyFields, name);\r\n            formStateRef.current.isDirty = getIsDirty();\r\n            const state = {\r\n                isDirty: formStateRef.current.isDirty,\r\n                dirtyFields: formStateRef.current.dirtyFields,\r\n                name,\r\n            };\r\n            const isChanged = (readFormStateRef.current.isDirty &&\r\n                previousIsDirty !== state.isDirty) ||\r\n                (readFormStateRef.current.dirtyFields &&\r\n                    isDirtyFieldExist !== get(formStateRef.current.dirtyFields, name));\r\n            isChanged && shouldRender && formStateSubjectRef.current.next(state);\r\n            return isChanged ? state : {};\r\n        }\r\n        return {};\r\n    }, []);\r\n    const executeValidation = React.useCallback(async (name, skipReRender) => {\r\n        const error = (await validateField(get(fieldsRef.current, name), isValidateAllFieldCriteria))[name];\r\n        shouldRenderBaseOnError(name, error, skipReRender);\r\n        return isUndefined(error);\r\n    }, [isValidateAllFieldCriteria]);\r\n    const executeSchemaOrResolverValidation = React.useCallback(async (names, currentNames = []) => {\r\n        const { errors } = await resolverRef.current(getFieldsValues(fieldsRef), contextRef.current, {\r\n            criteriaMode,\r\n            names: currentNames,\r\n            fields: getFields(fieldsNamesRef.current, fieldsRef.current),\r\n        });\r\n        for (const name of names) {\r\n            const error = get(errors, name);\r\n            error\r\n                ? set(formStateRef.current.errors, name, error)\r\n                : unset(formStateRef.current.errors, name);\r\n        }\r\n        return errors;\r\n    }, [criteriaMode]);\r\n    const validateForm = async (fieldsRef) => {\r\n        for (const name in fieldsRef) {\r\n            const field = fieldsRef[name];\r\n            if (field) {\r\n                const _f = field._f;\r\n                const current = omit(field, '_f');\r\n                if (_f) {\r\n                    const fieldError = await validateField(field, isValidateAllFieldCriteria);\r\n                    if (fieldError[_f.name]) {\r\n                        set(formStateRef.current.errors, _f.name, fieldError[_f.name]);\r\n                        unset(validFieldsRef.current, _f.name);\r\n                    }\r\n                    else if (get(fieldsWithValidationRef.current, _f.name)) {\r\n                        set(validFieldsRef.current, _f.name, true);\r\n                        unset(formStateRef.current.errors, _f.name);\r\n                    }\r\n                }\r\n                current && (await validateForm(current));\r\n            }\r\n        }\r\n    };\r\n    const trigger = React.useCallback(async (name, options = {}) => {\r\n        const fieldNames = isUndefined(name)\r\n            ? Object.keys(fieldsRef.current)\r\n            : convertToArrayPayload(name);\r\n        let isValid;\r\n        let schemaResult = {};\r\n        formStateSubjectRef.current.next({\r\n            isValidating: true,\r\n        });\r\n        if (resolverRef.current) {\r\n            schemaResult = await executeSchemaOrResolverValidation(fieldNames, isUndefined(name)\r\n                ? undefined\r\n                : fieldNames);\r\n            isValid = fieldNames.every((name) => !get(schemaResult, name));\r\n        }\r\n        else {\r\n            if (isUndefined(name)) {\r\n                await validateForm(fieldsRef.current);\r\n                isValid = isEmptyObject(formStateRef.current.errors);\r\n            }\r\n            else {\r\n                isValid = (await Promise.all(fieldNames\r\n                    .filter((fieldName) => get(fieldsRef.current, fieldName))\r\n                    .map(async (fieldName) => await executeValidation(fieldName, null)))).every(Boolean);\r\n            }\r\n        }\r\n        formStateSubjectRef.current.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: formStateRef.current.errors, isValidating: false, isValid: resolverRef.current\r\n                ? isEmptyObject(schemaResult)\r\n                : getIsValid() }));\r\n        if (!isValid && options.shouldFocus) {\r\n            focusFieldBy(fieldsRef.current, (key) => get(formStateRef.current.errors, key), fieldNames);\r\n        }\r\n        return isValid;\r\n    }, [executeSchemaOrResolverValidation, executeValidation]);\r\n    const setInternalValues = React.useCallback((name, value, options) => Object.entries(value).forEach(([inputKey, inputValue]) => {\r\n        const fieldName = `${name}.${inputKey}`;\r\n        const field = get(fieldsRef.current, fieldName);\r\n        const isFieldArray = fieldArrayNamesRef.current.has(name);\r\n        isFieldArray || !isPrimitive(inputValue) || (field && !field._f)\r\n            ? setInternalValues(fieldName, inputValue, options)\r\n            : setFieldValue(fieldName, inputValue, options, true, !field);\r\n    }), [trigger]);\r\n    const isFieldWatched = (name) => isWatchAllRef.current ||\r\n        watchFieldsRef.current.has(name) ||\r\n        watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\r\n    const updateValidAndValue = (name, options, ref, isWithinRefCallback) => {\r\n        const field = get(fieldsRef.current, name);\r\n        const defaultValue = isUndefined(field._f.value)\r\n            ? get(defaultValuesRef.current, name)\r\n            : field._f.value;\r\n        if (field && !isUndefined(defaultValue)) {\r\n            if (ref && ref.defaultChecked) {\r\n                field._f.value = getFieldValue(field);\r\n            }\r\n            else if (!isNameInFieldArray(fieldArrayNamesRef.current, name)) {\r\n                setFieldValue(name, defaultValue);\r\n            }\r\n            else {\r\n                field._f.value = defaultValue;\r\n            }\r\n        }\r\n        else {\r\n            field._f.value = getFieldValue(field);\r\n        }\r\n        if ((!isUndefined(defaultValue) || isWithinRefCallback) &&\r\n            hasValidation(options, field._f.mount) &&\r\n            !validationMode.isOnSubmit &&\r\n            field &&\r\n            readFormStateRef.current.isValid) {\r\n            validateField(field, isValidateAllFieldCriteria).then((error) => {\r\n                isEmptyObject(error)\r\n                    ? set(validFieldsRef.current, name, true)\r\n                    : unset(validFieldsRef.current, name);\r\n                formStateRef.current.isValid !== getIsValid() &&\r\n                    updateFormState(Object.assign(Object.assign({}, formStateRef.current), { isValid: getIsValid() }));\r\n            });\r\n        }\r\n        return defaultValue;\r\n    };\r\n    const setValue = (name, value, options = {}) => {\r\n        const field = get(fieldsRef.current, name);\r\n        const isFieldArray = fieldArrayNamesRef.current.has(name);\r\n        if (isFieldArray) {\r\n            fieldArraySubjectRef.current.next({\r\n                fields: value,\r\n                name,\r\n                isReset: true,\r\n            });\r\n            if ((readFormStateRef.current.isDirty ||\r\n                readFormStateRef.current.dirtyFields) &&\r\n                options.shouldDirty) {\r\n                set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(value, get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\r\n                formStateSubjectRef.current.next({\r\n                    name,\r\n                    dirtyFields: formStateRef.current.dirtyFields,\r\n                    isDirty: getIsDirty(name, value),\r\n                });\r\n            }\r\n            !value.length &&\r\n                set(fieldsRef.current, name, []) &&\r\n                set(fieldArrayDefaultValuesRef.current, name, []);\r\n        }\r\n        ((field && !field._f) || isFieldArray) && !isNullOrUndefined(value)\r\n            ? setInternalValues(name, value, isFieldArray ? {} : options)\r\n            : setFieldValue(name, value, options, true, !field);\r\n        isFieldWatched(name) && formStateSubjectRef.current.next({});\r\n        watchSubjectRef.current.next({ name, formValues: getValues() });\r\n    };\r\n    const handleChange = React.useCallback(async ({ type, target, target: { value, type: inputType } }) => {\r\n        let name = target.name;\r\n        let error;\r\n        let isValid;\r\n        const field = get(fieldsRef.current, name);\r\n        if (field) {\r\n            let inputValue = inputType ? getFieldValue(field) : undefined;\r\n            inputValue = isUndefined(inputValue) ? value : inputValue;\r\n            const isBlurEvent = type === EVENTS.BLUR;\r\n            const { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange, } = getValidationModes(reValidateMode);\r\n            const shouldSkipValidation = (!hasValidation(field._f, field._f.mount) &&\r\n                !resolverRef.current &&\r\n                !get(formStateRef.current.errors, name)) ||\r\n                skipValidation(Object.assign({ isBlurEvent, isTouched: !!get(formStateRef.current.touchedFields, name), isSubmitted: formStateRef.current.isSubmitted, isReValidateOnBlur,\r\n                    isReValidateOnChange }, validationMode));\r\n            const isWatched = !isBlurEvent && isFieldWatched(name);\r\n            if (!isUndefined(inputValue)) {\r\n                field._f.value = inputValue;\r\n            }\r\n            const state = updateAndGetDirtyState(name, field._f.value, false);\r\n            if (isBlurEvent && !get(formStateRef.current.touchedFields, name)) {\r\n                set(formStateRef.current.touchedFields, name, true);\r\n                readFormStateRef.current.touchedFields &&\r\n                    (state.touchedFields = formStateRef.current.touchedFields);\r\n            }\r\n            let shouldRender = !isEmptyObject(state) || isWatched;\r\n            if (shouldSkipValidation) {\r\n                !isBlurEvent &&\r\n                    watchSubjectRef.current.next({\r\n                        name,\r\n                        type,\r\n                        formValues: getValues(),\r\n                    });\r\n                return (shouldRender &&\r\n                    formStateSubjectRef.current.next(isWatched ? { name } : Object.assign(Object.assign({}, state), { name })));\r\n            }\r\n            formStateSubjectRef.current.next({\r\n                isValidating: true,\r\n            });\r\n            if (resolverRef.current) {\r\n                const { errors } = await resolverRef.current(getFieldsValues(fieldsRef), contextRef.current, {\r\n                    criteriaMode,\r\n                    fields: getFields([name], fieldsRef.current),\r\n                    names: [name],\r\n                });\r\n                const previousFormIsValid = formStateRef.current.isValid;\r\n                error = get(errors, name);\r\n                if (isCheckBoxInput(target) && !error) {\r\n                    const parentNodeName = getNodeParentName(name);\r\n                    const currentError = get(errors, parentNodeName, {});\r\n                    currentError.type && currentError.message && (error = currentError);\r\n                    if (currentError ||\r\n                        get(formStateRef.current.errors, parentNodeName)) {\r\n                        name = parentNodeName;\r\n                    }\r\n                }\r\n                isValid = isEmptyObject(errors);\r\n                previousFormIsValid !== isValid && (shouldRender = true);\r\n            }\r\n            else {\r\n                error = (await validateField(field, isValidateAllFieldCriteria))[name];\r\n            }\r\n            !isBlurEvent &&\r\n                watchSubjectRef.current.next({\r\n                    name,\r\n                    type,\r\n                    formValues: getValues(),\r\n                });\r\n            shouldRenderBaseOnError(name, error, shouldRender, state, isValid, isWatched);\r\n        }\r\n    }, []);\r\n    const getValues = (fieldNames) => {\r\n        const values = Object.assign(Object.assign({}, defaultValuesRef.current), getFieldsValues(fieldsRef));\r\n        return isUndefined(fieldNames)\r\n            ? values\r\n            : isString(fieldNames)\r\n                ? get(values, fieldNames)\r\n                : fieldNames.map((name) => get(values, name));\r\n    };\r\n    const updateIsValid = React.useCallback(async (values = {}) => {\r\n        const previousIsValid = formStateRef.current.isValid;\r\n        if (resolver) {\r\n            const { errors } = await resolverRef.current(Object.assign(Object.assign({}, getFieldsValues(fieldsRef)), values), contextRef.current, {\r\n                criteriaMode,\r\n                fields: getFields(fieldsNamesRef.current, fieldsRef.current),\r\n            });\r\n            formStateRef.current.isValid = isEmptyObject(errors);\r\n        }\r\n        else {\r\n            getIsValid();\r\n        }\r\n        previousIsValid !== formStateRef.current.isValid &&\r\n            formStateSubjectRef.current.next({\r\n                isValid: formStateRef.current.isValid,\r\n            });\r\n    }, [criteriaMode]);\r\n    const clearErrors = (name) => {\r\n        name\r\n            ? convertToArrayPayload(name).forEach((inputName) => unset(formStateRef.current.errors, inputName))\r\n            : (formStateRef.current.errors = {});\r\n        formStateSubjectRef.current.next({\r\n            errors: formStateRef.current.errors,\r\n        });\r\n    };\r\n    const setError = (name, error, options) => {\r\n        const ref = ((get(fieldsRef.current, name) || { _f: {} })._f || {}).ref;\r\n        set(formStateRef.current.errors, name, Object.assign(Object.assign({}, error), { ref }));\r\n        formStateSubjectRef.current.next({\r\n            name,\r\n            errors: formStateRef.current.errors,\r\n            isValid: false,\r\n        });\r\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\r\n    };\r\n    const watchInternal = React.useCallback((fieldNames, defaultValue, isGlobal, formValues) => {\r\n        const isArrayNames = Array.isArray(fieldNames);\r\n        const fieldValues = formValues || isMountedRef.current\r\n            ? Object.assign(Object.assign({}, defaultValuesRef.current), (formValues || getFieldsValues(fieldsRef))) : isUndefined(defaultValue)\r\n            ? defaultValuesRef.current\r\n            : isArrayNames\r\n                ? defaultValue\r\n                : { [fieldNames]: defaultValue };\r\n        if (isUndefined(fieldNames)) {\r\n            isGlobal && (isWatchAllRef.current = true);\r\n            return fieldValues;\r\n        }\r\n        const result = [];\r\n        for (const fieldName of convertToArrayPayload(fieldNames)) {\r\n            isGlobal && watchFieldsRef.current.add(fieldName);\r\n            result.push(get(fieldValues, fieldName));\r\n        }\r\n        return isArrayNames ? result : result[0];\r\n    }, []);\r\n    const watch = (fieldName, defaultValue) => isFunction(fieldName)\r\n        ? watchSubjectRef.current.subscribe({\r\n            next: (info) => fieldName(watchInternal(undefined, defaultValue), info),\r\n        })\r\n        : watchInternal(fieldName, defaultValue, true);\r\n    const unregister = (name, options = {}) => {\r\n        for (const inputName of name\r\n            ? convertToArrayPayload(name)\r\n            : Object.keys(fieldsNamesRef.current)) {\r\n            fieldsNamesRef.current.delete(inputName);\r\n            fieldArrayNamesRef.current.delete(inputName);\r\n            if (get(fieldsRef.current, inputName)) {\r\n                if (!options.keepIsValid) {\r\n                    unset(fieldsWithValidationRef.current, inputName);\r\n                    unset(validFieldsRef.current, inputName);\r\n                }\r\n                !options.keepError && unset(formStateRef.current.errors, inputName);\r\n                !options.keepValue && unset(fieldsRef.current, inputName);\r\n                !options.keepDirty &&\r\n                    unset(formStateRef.current.dirtyFields, inputName);\r\n                !options.keepTouched &&\r\n                    unset(formStateRef.current.touchedFields, inputName);\r\n                !shouldUnregister &&\r\n                    !options.keepDefaultValue &&\r\n                    unset(defaultValuesRef.current, inputName);\r\n                watchSubjectRef.current.next({\r\n                    name: inputName,\r\n                    formValues: getValues(),\r\n                });\r\n            }\r\n        }\r\n        formStateSubjectRef.current.next(Object.assign(Object.assign(Object.assign({}, formStateRef.current), (!options.keepDirty ? {} : { isDirty: getIsDirty() })), (resolverRef.current ? {} : { isValid: getIsValid() })));\r\n        !options.keepIsValid && updateIsValid();\r\n    };\r\n    const registerFieldRef = (name, ref, options) => {\r\n        register(name, options);\r\n        let field = get(fieldsRef.current, name);\r\n        const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\r\n        if (ref === field._f.ref ||\r\n            (isWeb && isHTMLElement(field._f.ref) && !isHTMLElement(ref)) ||\r\n            (isRadioOrCheckbox &&\r\n                Array.isArray(field._f.refs) &&\r\n                compact(field._f.refs).find((option) => option === ref))) {\r\n            return;\r\n        }\r\n        field = {\r\n            _f: isRadioOrCheckbox\r\n                ? Object.assign(Object.assign({}, field._f), { refs: [\r\n                        ...compact(field._f.refs || []).filter((ref) => isHTMLElement(ref) && document.contains(ref)),\r\n                        ref,\r\n                    ], ref: { type: ref.type, name } }) : Object.assign(Object.assign({}, field._f), { ref }),\r\n        };\r\n        set(fieldsRef.current, name, field);\r\n        const defaultValue = updateValidAndValue(name, options, ref, true);\r\n        if (isRadioOrCheckbox && Array.isArray(defaultValue)\r\n            ? !deepEqual(get(fieldsRef.current, name)._f.value, defaultValue)\r\n            : isUndefined(get(fieldsRef.current, name)._f.value)) {\r\n            get(fieldsRef.current, name)._f.value = getFieldValue(get(fieldsRef.current, name));\r\n        }\r\n    };\r\n    const register = React.useCallback((name, options = {}) => {\r\n        const field = get(fieldsRef.current, name);\r\n        set(fieldsRef.current, name, {\r\n            _f: Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options),\r\n        });\r\n        hasValidation(options, true) &&\r\n            set(fieldsWithValidationRef.current, name, true);\r\n        fieldsNamesRef.current.add(name);\r\n        !field && updateValidAndValue(name, options);\r\n        return isWindowUndefined\r\n            ? { name: name }\r\n            : {\r\n                name,\r\n                onChange: handleChange,\r\n                onBlur: handleChange,\r\n                ref: (ref) => {\r\n                    if (ref) {\r\n                        registerFieldRef(name, ref, options);\r\n                    }\r\n                    else {\r\n                        const field = get(fieldsRef.current, name, {});\r\n                        const shouldUnmount = shouldUnregister || options.shouldUnregister;\r\n                        if (field._f) {\r\n                            field._f.mount = false;\r\n                            // If initial state of field element is disabled,\r\n                            // value is not set on first \"register\"\r\n                            // re-sync the value in when it switched to enabled\r\n                            if (isUndefined(field._f.value)) {\r\n                                field._f.value = field._f.ref.value;\r\n                            }\r\n                        }\r\n                        if (isNameInFieldArray(fieldArrayNamesRef.current, name)\r\n                            ? shouldUnmount && !inFieldArrayActionRef.current\r\n                            : shouldUnmount) {\r\n                            unregisterFieldsNamesRef.current.add(name);\r\n                        }\r\n                    }\r\n                },\r\n            };\r\n    }, []);\r\n    const handleSubmit = React.useCallback((onValid, onInvalid) => async (e) => {\r\n        if (e) {\r\n            e.preventDefault && e.preventDefault();\r\n            e.persist && e.persist();\r\n        }\r\n        let hasNoPromiseError = true;\r\n        let fieldValues = getFieldsValues(fieldsRef);\r\n        formStateSubjectRef.current.next({\r\n            isSubmitting: true,\r\n        });\r\n        try {\r\n            if (resolverRef.current) {\r\n                const { errors, values } = await resolverRef.current(fieldValues, contextRef.current, {\r\n                    criteriaMode,\r\n                    fields: getFields(fieldsNamesRef.current, fieldsRef.current),\r\n                });\r\n                formStateRef.current.errors = errors;\r\n                fieldValues = values;\r\n            }\r\n            else {\r\n                await validateForm(fieldsRef.current);\r\n            }\r\n            if (isEmptyObject(formStateRef.current.errors) &&\r\n                Object.keys(formStateRef.current.errors).every((name) => get(fieldValues, name))) {\r\n                formStateSubjectRef.current.next({\r\n                    errors: {},\r\n                    isSubmitting: true,\r\n                });\r\n                await onValid(fieldValues, e);\r\n            }\r\n            else {\r\n                onInvalid && (await onInvalid(formStateRef.current.errors, e));\r\n                shouldFocusError &&\r\n                    focusFieldBy(fieldsRef.current, (key) => get(formStateRef.current.errors, key), fieldsNamesRef.current);\r\n            }\r\n        }\r\n        catch (err) {\r\n            hasNoPromiseError = false;\r\n            throw err;\r\n        }\r\n        finally {\r\n            formStateRef.current.isSubmitted = true;\r\n            formStateSubjectRef.current.next({\r\n                isSubmitted: true,\r\n                isSubmitting: false,\r\n                isSubmitSuccessful: isEmptyObject(formStateRef.current.errors) && hasNoPromiseError,\r\n                submitCount: formStateRef.current.submitCount + 1,\r\n                errors: formStateRef.current.errors,\r\n            });\r\n        }\r\n    }, [shouldFocusError, isValidateAllFieldCriteria, criteriaMode]);\r\n    const resetFromState = React.useCallback(({ keepErrors, keepDirty, keepIsSubmitted, keepTouched, keepDefaultValues, keepIsValid, keepSubmitCount, }, values) => {\r\n        if (!keepIsValid) {\r\n            validFieldsRef.current = {};\r\n            fieldsWithValidationRef.current = {};\r\n        }\r\n        watchFieldsRef.current = new Set();\r\n        isWatchAllRef.current = false;\r\n        formStateSubjectRef.current.next({\r\n            submitCount: keepSubmitCount ? formStateRef.current.submitCount : 0,\r\n            isDirty: keepDirty\r\n                ? formStateRef.current.isDirty\r\n                : keepDefaultValues\r\n                    ? deepEqual(values, defaultValuesRef.current)\r\n                    : false,\r\n            isSubmitted: keepIsSubmitted ? formStateRef.current.isSubmitted : false,\r\n            isValid: keepIsValid\r\n                ? formStateRef.current.isValid\r\n                : !!updateIsValid(values),\r\n            dirtyFields: keepDirty ? formStateRef.current.dirtyFields : {},\r\n            touchedFields: keepTouched ? formStateRef.current.touchedFields : {},\r\n            errors: keepErrors ? formStateRef.current.errors : {},\r\n            isSubmitting: false,\r\n            isSubmitSuccessful: false,\r\n        });\r\n    }, []);\r\n    const registerAbsentFields = (value, name = '') => {\r\n        const field = get(fieldsRef.current, name);\r\n        if (!field || (field && !field._f)) {\r\n            if (!field &&\r\n                (isPrimitive(value) ||\r\n                    (isWeb && (value instanceof FileList || value instanceof Date)))) {\r\n                set(fieldsRef.current, name, {\r\n                    _f: {\r\n                        ref: { name, value },\r\n                        value,\r\n                        name,\r\n                    },\r\n                });\r\n            }\r\n            if (Array.isArray(value) || isObject(value)) {\r\n                if (name && !get(fieldsRef.current, name)) {\r\n                    set(fieldsRef.current, name, Array.isArray(value) ? [] : {});\r\n                }\r\n                for (const key in value) {\r\n                    registerAbsentFields(value[key], name + (name ? '.' : '') + key);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const reset = (values, keepStateOptions = {}) => {\r\n        const updatedValues = values || defaultValuesRef.current;\r\n        if (isWeb && !keepStateOptions.keepValues) {\r\n            for (const name of fieldsNamesRef.current) {\r\n                const field = get(fieldsRef.current, name);\r\n                if (field && field._f) {\r\n                    const inputRef = Array.isArray(field._f.refs)\r\n                        ? field._f.refs[0]\r\n                        : field._f.ref;\r\n                    try {\r\n                        isHTMLElement(inputRef) && inputRef.closest('form').reset();\r\n                        break;\r\n                    }\r\n                    catch (_a) { }\r\n                }\r\n            }\r\n        }\r\n        !keepStateOptions.keepDefaultValues &&\r\n            (defaultValuesRef.current = Object.assign({}, updatedValues));\r\n        if (!keepStateOptions.keepValues) {\r\n            fieldsRef.current = {};\r\n            controllerSubjectRef.current.next({\r\n                values: Object.assign({}, updatedValues),\r\n            });\r\n            watchSubjectRef.current.next({\r\n                formValues: Object.assign({}, updatedValues),\r\n            });\r\n            fieldArraySubjectRef.current.next({\r\n                fields: Object.assign({}, updatedValues),\r\n                isReset: true,\r\n            });\r\n        }\r\n        !keepStateOptions.keepDefaultValues &&\r\n            !shouldUnregister &&\r\n            registerAbsentFields(Object.assign({}, updatedValues));\r\n        resetFromState(keepStateOptions, values);\r\n    };\r\n    const setFocus = (name) => get(fieldsRef.current, name)._f.ref.focus();\r\n    React.useEffect(() => {\r\n        !shouldUnregister && registerAbsentFields(defaultValuesRef.current);\r\n        const formStateSubscription = formStateSubjectRef.current.subscribe({\r\n            next(formState) {\r\n                if (shouldRenderFormState(formState, readFormStateRef.current, true)) {\r\n                    formStateRef.current = Object.assign(Object.assign({}, formStateRef.current), formState);\r\n                    updateFormState(formStateRef.current);\r\n                }\r\n            },\r\n        });\r\n        const useFieldArraySubscription = fieldArraySubjectRef.current.subscribe({\r\n            next(state) {\r\n                if (state.fields && state.name && readFormStateRef.current.isValid) {\r\n                    const values = getFieldsValues(fieldsRef);\r\n                    set(values, state.name, state.fields);\r\n                    updateIsValid(values);\r\n                }\r\n            },\r\n        });\r\n        resolverRef.current && readFormStateRef.current.isValid && updateIsValid();\r\n        return () => {\r\n            watchSubjectRef.current.unsubscribe();\r\n            formStateSubscription.unsubscribe();\r\n            useFieldArraySubscription.unsubscribe();\r\n        };\r\n    }, []);\r\n    React.useEffect(() => {\r\n        const isLiveInDom = (ref) => !isHTMLElement(ref) || !document.contains(ref);\r\n        isMountedRef.current = true;\r\n        for (const name of unregisterFieldsNamesRef.current) {\r\n            const field = get(fieldsRef.current, name);\r\n            field &&\r\n                (field._f.refs\r\n                    ? field._f.refs.every(isLiveInDom)\r\n                    : isLiveInDom(field._f.ref)) &&\r\n                unregister(name);\r\n        }\r\n        unregisterFieldsNamesRef.current = new Set();\r\n    });\r\n    return {\r\n        control: React.useMemo(() => ({\r\n            register,\r\n            isWatchAllRef,\r\n            inFieldArrayActionRef,\r\n            watchFieldsRef,\r\n            getIsDirty,\r\n            formStateSubjectRef,\r\n            fieldArraySubjectRef,\r\n            controllerSubjectRef,\r\n            watchSubjectRef,\r\n            watchInternal,\r\n            fieldsRef,\r\n            validFieldsRef,\r\n            fieldsWithValidationRef,\r\n            fieldArrayNamesRef,\r\n            readFormStateRef,\r\n            formStateRef,\r\n            defaultValuesRef,\r\n            fieldArrayDefaultValuesRef,\r\n            unregister,\r\n            shouldUnmount: shouldUnregister,\r\n        }), []),\r\n        formState: getProxyFormState(isProxyEnabled, formState, readFormStateRef),\r\n        trigger,\r\n        register,\r\n        handleSubmit,\r\n        watch: React.useCallback(watch, []),\r\n        setValue: React.useCallback(setValue, [setInternalValues]),\r\n        getValues: React.useCallback(getValues, []),\r\n        reset: React.useCallback(reset, []),\r\n        clearErrors: React.useCallback(clearErrors, []),\r\n        unregister: React.useCallback(unregister, []),\r\n        setError: React.useCallback(setError, []),\r\n        setFocus: React.useCallback(setFocus, []),\r\n    };\r\n}\n\nfunction useWatch(props) {\r\n    const { control, name, defaultValue } = props || {};\r\n    const methods = useFormContext();\r\n    const nameRef = React.useRef(name);\r\n    nameRef.current = name;\r\n    const { watchInternal, watchSubjectRef } = control || methods.control;\r\n    const [value, updateValue] = React.useState(isUndefined(defaultValue)\r\n        ? watchInternal(name)\r\n        : defaultValue);\r\n    React.useEffect(() => {\r\n        watchInternal(name);\r\n        const watchSubscription = watchSubjectRef.current.subscribe({\r\n            next: ({ name: inputName, formValues }) => (!nameRef.current ||\r\n                !inputName ||\r\n                convertToArrayPayload(nameRef.current).some((fieldName) => inputName &&\r\n                    fieldName &&\r\n                    (fieldName.startsWith(inputName) ||\r\n                        inputName.startsWith(fieldName)))) &&\r\n                updateValue(watchInternal(nameRef.current, defaultValue, false, formValues)),\r\n        });\r\n        return () => watchSubscription.unsubscribe();\r\n    }, []);\r\n    return value;\r\n}\n\nexport { Controller, FormProvider, appendErrors, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.js.map\n"],"names":["Form","styled","form","props","display","justifyContent","minWidth","width","padding","boxShadow","borderRadius","flexDirection","fontFamily","margin","position","top","left","right","bottom","theme","React","children","Label","label","textFieldLabel","TextFieldRoot","div","maxWidth","height","textFieldRoot","TextField","input","background","border","textField","Bar","textFieldBar","placeholder","register","id","replace","htmlFor","Input","autoComplete","type","required","HeaderText","h1","fontSize","fontWeight","letterSpacing","marginBlockStart","marginBlockEnd","marginInlineStart","marginInlineEnd","marginTop","headerText","TextButton","button","cursor","color","whiteSpace","textButton","SecondaryButton","secondaryButton","SubmitButtonRoot","submitButtonRoot","SubmitButton","verticalAlign","textAlign","textOverflow","overflow","outline","boxSizing","submitButton","size","style"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,IAAI,GAAGC,OAAM,CAACC,IAAP,CAAY,UAAAC,KAAK;AAAA;AAC1BC,IAAAA,OAAO,EAAE,MADiB;AAE1BC,IAAAA,cAAc,EAAE,QAFU;AAG1BC,IAAAA,QAAQ,EAAE,GAHgB;AAI1BC,IAAAA,KAAK,EAAE,GAJmB;AAK1BC,IAAAA,OAAO,EAAE,WALiB;AAM1BC,IAAAA,SAAS,EAAE,+BANe;AAO1BC,IAAAA,YAAY,EAAE,EAPY;AAQ1BC,IAAAA,aAAa,EAAE,QARW;AAS1BC,IAAAA,UAAU,EAAE,SATc;AAU1BC,IAAAA,MAAM,EAAE,cAVkB;AAW1B,iCAA6B;AACzBA,MAAAA,MAAM,EAAE,gBADiB;AAEzBC,MAAAA,QAAQ,EAAE,kBAFe;AAGzBC,MAAAA,GAAG,EAAE,CAHoB;AAIzBC,MAAAA,IAAI,EAAE,CAJmB;AAKzBC,MAAAA,KAAK,EAAE,CALkB;AAMzBC,MAAAA,MAAM,EAAE,CANiB;AAOzBX,MAAAA,KAAK,EAAE;AAPkB;AAXH,KAoBtBJ,KAAK,CAACgB,KAAN,CAAYjB,IAAZ,sBAAwBC,KAAK,CAACgB,KAAN,CAAYjB,IAApC,IAA6C,EApBvB;AAAA,CAAjB,CAAb;iBAuByBC;AACrB,SACIiB,uCAAA,CAACpB,IAAD,oBAAUG,MAAV,EAAkBA,KAAK,CAACkB,QAAxB,CADJ;AAGH;;AC3BD,IAAMC,KAAK,GAAGrB,OAAM,CAACsB,KAAP,CAAa,UAAApB,KAAK;AAAA;AAC5BC,IAAAA,OAAO,EAAE,MADmB;AAE5BQ,IAAAA,UAAU,EAAE;AAFgB,KAGxBT,KAAK,CAACgB,KAAN,CAAYK,cAAZ,sBAAkCrB,KAAK,CAACgB,KAAN,CAAYK,cAA9C,IAAiE,EAHzC;AAAA,CAAlB,CAAd;kBAMyBrB;AACrB,SAAQiB,uCAAA,CAACE,KAAD,oBAAWnB,MAAX,CAAR;AACH;;ACND,IAAMsB,aAAa,GAAGxB,OAAM,CAACyB,GAAP,CAAW,UAAAvB,KAAK;AAAA;AAClCW,IAAAA,QAAQ,EAAE,UADwB;AAElCP,IAAAA,KAAK,EAAE,MAF2B;AAGlCoB,IAAAA,QAAQ,EAAE,MAHwB;AAIlCnB,IAAAA,OAAO,EAAE,CAJyB;AAKlCoB,IAAAA,MAAM,EAAE,EAL0B;AAMlChB,IAAAA,UAAU,EAAE;AANsB,KAO9BT,KAAK,CAACgB,KAAN,CAAYU,aAAZ,sBAAiC1B,KAAK,CAACgB,KAAN,CAAYU,aAA7C,IAA+D,EAPjC;AAAA,CAAhB,CAAtB;AAUA,IAAMC,SAAS,GAAG7B,OAAM,CAAC8B,KAAP,CAAa,UAAA5B,KAAK;AAAA;AAChCC,IAAAA,OAAO,EAAE,OADuB;AAEhCG,IAAAA,KAAK,EAAE,MAFyB;AAGhCyB,IAAAA,UAAU,EAAE,KAHoB;AAIhCC,IAAAA,MAAM,EAAE,MAJwB;AAKhCrB,IAAAA,UAAU,EAAE;AALoB,KAM5BT,KAAK,CAACgB,KAAN,CAAYe,SAAZ,sBAA6B/B,KAAK,CAACgB,KAAN,CAAYe,SAAzC,IAAuD,EAN3B;AAAA,CAAlB,CAAlB;AASA,IAAMC,GAAG,GAAGlC,OAAM,CAACyB,GAAP,CAAW,UAAAvB,KAAK;AAAA,SAAIA,KAAK,CAACgB,KAAN,CAAYiB,YAAZ,sBAAgCjC,KAAK,CAACgB,KAAN,CAAYiB,YAA5C,IAA6D,EAAjE;AAAA,CAAhB,CAAZ;gBAOyBjC;AACrB,SACIiB,uCAAA,CAACK,aAAD,MAAA,EACIL,uCAAA,CAACU,SAAD;AAAWO,IAAAA,WAAW,EAAC;KAAalC,OAAWA,KAAK,CAACmC,QAAN;AAAkBC,IAAAA,EAAE,EAAE,eAAepC,KAAK,CAACoB,KAAN,CAAYiB,OAAZ,CAAoB,aAApB,EAAmC,EAAnC;IAApF,CADJ,EAEIpB,uCAAA,CAACe,GAAD,MAAA,CAFJ,EAGIf,uCAAA,CAACE,OAAD;AAAOmB,IAAAA,OAAO,EAAE,eAAetC,KAAK,CAACoB,KAAN,CAAYiB,OAAZ,CAAoB,aAApB,EAAmC,EAAnC;GAA/B,EAAwErC,KAAK,CAACoB,KAA9E,CAHJ,CADJ;AAOH;;qBC9BuBpB;AACpB,SACIiB,uCAAA,CAACsB,KAAD;AAAOnB,IAAAA,KAAK,EAAC;AAAQoB,IAAAA,YAAY,EAAC;KAAYxC;AAAOyC,IAAAA,IAAI,EAAC;AAAQC,IAAAA,QAAQ;IAA1E,CADJ;AAGH;;wBCJuB1C;AACpB,SACIiB,uCAAA,CAACsB,KAAD;AAAOnB,IAAAA,KAAK,EAAC;KAAepB;AAAOyC,IAAAA,IAAI,EAAC;AAAWC,IAAAA,QAAQ;IAA3D,CADJ;AAGH;;ACVD,IAAMC,UAAU,GAAG7C,OAAM,CAAC8C,EAAP,CAAU,UAAA5C,KAAK;AAAA;AAC9BS,IAAAA,UAAU,EAAE,SADkB;AAE9BoC,IAAAA,QAAQ,EAAE,EAFoB;AAG9BC,IAAAA,UAAU,EAAE,GAHkB;AAI9BC,IAAAA,aAAa,EAAE,CAAC,EAJc;AAK9BC,IAAAA,gBAAgB,EAAE,QALY;AAM9BC,IAAAA,cAAc,EAAE,QANc;AAO9BC,IAAAA,iBAAiB,EAAE,CAPW;AAQ9BC,IAAAA,eAAe,EAAE,CARa;AAS9BC,IAAAA,SAAS,EAAE;AATmB,KAU1BpD,KAAK,CAACgB,KAAN,CAAYqC,UAAZ,sBAA8BrD,KAAK,CAACgB,KAAN,CAAYqC,UAA1C,IAAyD,EAV/B;AAAA,CAAf,CAAnB;uBAayBrD;AACrB,SACIiB,uCAAA,CAAC0B,UAAD,oBAAgB3C,MAAhB,CADJ;AAGH;;ACjBD,IAAMsD,UAAU,GAAGxD,OAAM,CAACyD,MAAP,CAAc,UAAAvD,KAAK;AAAA;AAClCwD,IAAAA,MAAM,EAAE,SAD0B;AAElCC,IAAAA,KAAK,EAAE,SAF2B;AAGlCC,IAAAA,UAAU,EAAE,QAHsB;AAIlCZ,IAAAA,UAAU,EAAE,GAJsB;AAKlCD,IAAAA,QAAQ,EAAE,EALwB;AAMlCnC,IAAAA,MAAM,EAAE,CAN0B;AAOlCmB,IAAAA,UAAU,EAAE,MAPsB;AAQlCC,IAAAA,MAAM,EAAE;AAR0B,KAS9B9B,KAAK,CAACgB,KAAN,CAAY2C,UAAZ,sBAA8B3D,KAAK,CAACgB,KAAN,CAAY2C,UAA1C,IAAyD,EAT3B;AAAA,CAAnB,CAAnB;uBAYyB3D;AACrB,SACIiB,uCAAA,CAACqC,UAAD,oBAAgBtD;AAAOyC,IAAAA,IAAI,EAAC;IAA5B,CADJ;AAGH;;ACfD,IAAMmB,eAAe,GAAG9D,OAAM,CAACwD,YAAD,CAAN,CAAmB,UAAAtD,KAAK;AAAA;AAC5CU,IAAAA,MAAM,EAAE;AADoC,KAExCV,KAAK,CAACgB,KAAN,CAAY6C,eAAZ,sBAAmC7D,KAAK,CAACgB,KAAN,CAAY6C,eAA/C,IAAmE,EAF3B;AAAA,CAAxB,CAAxB;4BAKyB7D;AACrB,SACIiB,uCAAA,CAAC2C,eAAD,oBAAqB5D,MAArB,CADJ;AAGH;;ACVD,IAAM8D,gBAAgB,GAAGhE,OAAM,CAACyB,GAAP,CAAW,UAAAvB,KAAK;AAAA,SAAIA,KAAK,CAACgB,KAAN,CAAY+C,gBAAZ,GAA+B/D,KAAK,CAACgB,KAAN,CAAY+C,gBAA3C,GAA8D,EAAlE;AAAA,CAAhB,CAAzB;AAEA,IAAMC,YAAY,GAAGlE,OAAM,CAACyD,MAAP,CAAc,UAAAvD,KAAK;AAAA;AACpCW,IAAAA,QAAQ,EAAE,UAD0B;AAEpCmB,IAAAA,MAAM,EAAE,MAF4B;AAGpCmC,IAAAA,aAAa,EAAE,QAHqB;AAIpCC,IAAAA,SAAS,EAAE,QAJyB;AAKpCC,IAAAA,YAAY,EAAE,UALsB;AAMpCC,IAAAA,QAAQ,EAAE,QAN0B;AAOpCC,IAAAA,OAAO,EAAE,MAP2B;AAQpCb,IAAAA,MAAM,EAAE,SAR4B;AASpCc,IAAAA,SAAS,EAAE;AATyB,KAUhCtE,KAAK,CAACgB,KAAN,CAAYuD,YAAZ,sBAAgCvE,KAAK,CAACgB,KAAN,CAAYuD,YAA5C,IAA6D,EAV7B;AAAA,CAAnB,CAArB;yBAayBvE;AACrB,SACIiB,uCAAA,CAAC6C,gBAAD,MAAA,EACI7C,uCAAA,CAAC+C,YAAD;AAAcvB,IAAAA,IAAI,EAAC;KAAazC,MAAhC,CADJ,CADJ;AAKH;;iBClBwBA;AACrB,UAAQA,KAAK,CAACwE,IAAd;AACI,SAAK,QAAL;AACI,aAAOvD,uCAAA,MAAA;AAAKwD,QAAAA,KAAK,EAAE;AAAEhD,UAAAA,MAAM,EAAE;AAAV;OAAZ,CAAP;;AACJ,SAAK,OAAL;AACI,aAAOR,uCAAA,MAAA;AAAKwD,QAAAA,KAAK,EAAE;AAAEhD,UAAAA,MAAM,EAAE;AAAV;OAAZ,CAAP;;AACJ,SAAK,OAAL;AACI,aAAOR,uCAAA,MAAA;AAAKwD,QAAAA,KAAK,EAAE;AAAEhD,UAAAA,MAAM,EAAE;AAAV;OAAZ,CAAP;;AACJ;AACI,aAAOR,uCAAA,MAAA;AAAKwD,QAAAA,KAAK,EAAE;AAAEhD,UAAAA,MAAM,EAAE;AAAV;OAAZ,CAAP;AARR;AAUH;;ACfD,IAAI,eAAe,GAAG,CAAC,OAAO,KAAK,OAAO,CAAC,IAAI,KAAK,UAAU,CAAC;AAC/D;AACA,IAAI,iBAAiB,GAAG,CAAC,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC;AACjD;AACA,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK,OAAO,KAAK,KAAK,QAAQ,CAAC;AAC1D,IAAI,QAAQ,GAAG,CAAC,KAAK,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC;AACnD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AACzB,IAAI,YAAY,CAAC,KAAK,CAAC;AACvB,IAAI,EAAE,KAAK,YAAY,IAAI,CAAC,CAAC;AAO7B;AACA,IAAI,iBAAiB,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC;AAChF;AACA,IAAI,kBAAkB,GAAG,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,iBAAiB,CAAC,IAAI,CAAC,KAAK,OAAO,CAAC,CAAC;AAC5G;AACA,IAAI,OAAO,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC/C;AACA,IAAI,WAAW,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK,SAAS,CAAC;AAC7C;AACA,IAAI,GAAG,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,YAAY,KAAK;AACvC,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE;AAC/B,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,GAAG,MAAM,iBAAiB,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACzI,QAAQ,OAAO,WAAW,CAAC,MAAM,CAAC,IAAI,MAAM,KAAK,GAAG;AACpD,cAAc,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACpC,kBAAkB,YAAY;AAC9B,kBAAkB,GAAG,CAAC,IAAI,CAAC;AAC3B,cAAc,MAAM,CAAC;AACrB,KAAK;AACL,IAAI,OAAO,SAAS,CAAC;AACrB,CAAC,CAAC;AACF;AACA,MAAM,MAAM,GAAG;AACf,IAAI,IAAI,EAAE,MAAM;AAChB,IAAI,MAAM,EAAE,QAAQ;AACpB,CAAC,CAAC;AACF,MAAM,eAAe,GAAG;AACxB,IAAI,MAAM,EAAE,QAAQ;AACpB,IAAI,QAAQ,EAAE,UAAU;AACxB,IAAI,QAAQ,EAAE,UAAU;AACxB,IAAI,SAAS,EAAE,WAAW;AAC1B,IAAI,GAAG,EAAE,KAAK;AACd,CAAC,CAAC;AACF,MAAM,sBAAsB,GAAG;AAC/B,IAAI,GAAG,EAAE,KAAK;AACd,IAAI,GAAG,EAAE,KAAK;AACd,IAAI,SAAS,EAAE,WAAW;AAC1B,IAAI,SAAS,EAAE,WAAW;AAC1B,IAAI,OAAO,EAAE,SAAS;AACtB,IAAI,QAAQ,EAAE,UAAU;AACxB,IAAI,QAAQ,EAAE,UAAU;AACxB,CAAC,CAAC;AACF;AACA,IAAI,IAAI,GAAG,CAAC,MAAM,EAAE,GAAG,KAAK;AAC5B,IAAI,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;AAC3C,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;AACrB,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AACF;AACA,MAAM,WAAW,GAAGR,gBAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAC9C,WAAW,CAAC,WAAW,GAAG,YAAY,CAAC;AAGvC;AACA,IAAI,iBAAiB,GAAG,CAAC,cAAc,EAAE,SAAS,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,MAAM,GAAG,IAAI,KAAK,cAAc;AAC7H,MAAM,IAAI,KAAK,CAAC,SAAS,EAAE;AAC3B,QAAQ,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,KAAK;AAC5B,YAAY,IAAI,IAAI,IAAI,GAAG,EAAE;AAC7B,gBAAgB,IAAI,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,eAAe,CAAC,GAAG,EAAE;AAC5E,oBAAoB,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,MAAM;AAC3D,0BAA0B,eAAe,CAAC,GAAG;AAC7C,0BAA0B,IAAI,CAAC;AAC/B,iBAAiB;AACjB,gBAAgB,qBAAqB;AACrC,qBAAqB,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACjE,gBAAgB,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;AACjC,aAAa;AACb,YAAY,OAAO,SAAS,CAAC;AAC7B,SAAS;AACT,KAAK,CAAC;AACN,MAAM,SAAS,CAAC;AAChB;AACA,IAAI,aAAa,GAAG,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;AAC7E;AACA,IAAI,qBAAqB,GAAG,CAAC,aAAa,EAAE,gBAAgB,EAAE,MAAM,KAAK;AACzE,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;AAClD,IAAI,QAAQ,aAAa,CAAC,SAAS,CAAC;AACpC,QAAQ,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM;AAC7E,QAAQ,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,gBAAgB,CAAC,GAAG,CAAC;AAClE,aAAa,MAAM,GAAG,eAAe,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,EAAE;AACpD,CAAC,CAAC;AACF;AACA,IAAI,qBAAqB,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;AAC9E;AACA,IAAI,KAAK,GAAG,OAAO,MAAM,KAAK,WAAW;AACzC,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,WAAW;AAC7C,IAAI,OAAO,QAAQ,KAAK,WAAW,CAAC;AACpC;AACA,MAAM,cAAc,GAAG,KAAK,GAAG,OAAO,IAAI,MAAM,GAAG,OAAO,KAAK,KAAK,WAAW,CAAC;AAoGhF;AACA,IAAI,YAAY,GAAG,CAAC,IAAI,EAAE,wBAAwB,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,KAAK,wBAAwB;AACtG,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,IAAI,GAAG,OAAO,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;AACpM;AACA,IAAI,KAAK,GAAG,CAAC,KAAK,KAAK,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3C;AACA,IAAI,YAAY,GAAG,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AACrF;AACA,SAAS,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;AAClC,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;AACnB,IAAI,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;AAC/D,IAAI,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;AACnC,IAAI,MAAM,SAAS,GAAG,MAAM,GAAG,CAAC,CAAC;AACjC,IAAI,OAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AAC7B,QAAQ,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AACpC,QAAQ,IAAI,QAAQ,GAAG,KAAK,CAAC;AAC7B,QAAQ,IAAI,KAAK,KAAK,SAAS,EAAE;AACjC,YAAY,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACzC,YAAY,QAAQ;AACpB,gBAAgB,QAAQ,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;AAC7D,sBAAsB,QAAQ;AAC9B,sBAAsB,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAClD,0BAA0B,EAAE;AAC5B,0BAA0B,EAAE,CAAC;AAC7B,SAAS;AACT,QAAQ,MAAM,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;AAC/B,QAAQ,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC7B,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,CAAC;AACD;AACA,MAAM,YAAY,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,KAAK;AACxD,IAAI,KAAK,MAAM,GAAG,IAAI,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AAC1D,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;AAChC,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC9C,YAAY,IAAI,EAAE,IAAI,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;AACzC,gBAAgB,IAAI,EAAE,CAAC,GAAG,CAAC,KAAK,IAAI,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE;AACjE,oBAAoB,MAAM;AAC1B,iBAAiB;AACjB,qBAAqB,IAAI,EAAE,CAAC,IAAI,EAAE;AAClC,oBAAoB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACvC,oBAAoB,MAAM;AAC1B,iBAAiB;AACjB,aAAa;AACb,iBAAiB,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE;AACxC,gBAAgB,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAChD,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC,CAAC;AACF;AACA,MAAM,eAAe,GAAG,CAAC,SAAS,EAAE,MAAM,GAAG,EAAE,KAAK;AACpD,IAAI,KAAK,MAAM,IAAI,IAAI,SAAS,CAAC,OAAO,EAAE;AAC1C,QAAQ,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC9C,QAAQ,IAAI,KAAK,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE;AACjD,YAAY,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;AAChC,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC9C,YAAY,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,GAAG;AAC1C,kBAAkB,EAAE,CAAC,GAAG,CAAC,QAAQ,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtF,sBAAsB,SAAS;AAC/B,sBAAsB,EAAE,CAAC,KAAK;AAC9B,kBAAkB,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AACtC,sBAAsB,EAAE;AACxB,sBAAsB,EAAE,CAAC,CAAC;AAC1B,YAAY,OAAO;AACnB,gBAAgB,eAAe,CAAC;AAChC,oBAAoB,OAAO;AAC3B,iBAAiB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AACjC,SAAS;AACT,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,CAAC,CAAC;AAWF;AACA,IAAI,WAAW,GAAG,CAAC,KAAK,KAAK,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAC9E;AACA,SAAS,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE;AACpD,IAAI,IAAI,WAAW,CAAC,OAAO,CAAC;AAC5B,QAAQ,WAAW,CAAC,OAAO,CAAC;AAC5B,QAAQ,OAAO,YAAY,IAAI;AAC/B,QAAQ,OAAO,YAAY,IAAI,EAAE;AACjC,QAAQ,OAAO,OAAO,KAAK,OAAO,CAAC;AACnC,KAAK;AACL,IAAI,IAAI,CAACA,gBAAK,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;AACxC,QAAQ,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC3C,QAAQ,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC3C,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,EAAE;AAC3C,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS;AACT,QAAQ,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;AACjC,YAAY,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AACtC,YAAY,IAAI,EAAE,aAAa,IAAI,GAAG,KAAK,KAAK,CAAC,EAAE;AACnD,gBAAgB,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AAC1C,gBAAgB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;AAC1D,qBAAqB,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3D,sBAAsB,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC;AAC3D,sBAAsB,IAAI,KAAK,IAAI,EAAE;AACrC,oBAAoB,OAAO,KAAK,CAAC;AACjC,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC;AACD;AACA,SAAS,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE;AACnC,IAAI,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,EAAE;AACpD,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL,IAAI,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE;AAC9B,QAAQ,MAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACxC,QAAQ,MAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACxC,QAAQ,IAAI;AACZ,YAAY,MAAM,CAAC,GAAG,CAAC;AACvB,gBAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,WAAW,CAAC;AAC/D,qBAAqB,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AAC9E,sBAAsB,SAAS,CAAC,WAAW,EAAE,WAAW,CAAC;AACzD,sBAAsB,WAAW,CAAC;AAClC,SAAS;AACT,QAAQ,OAAO,EAAE,EAAE,GAAG;AACtB,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,CAAC;AACD;AACA,SAAS,cAAc,CAAC,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE;AACpF,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;AACnB,IAAI,OAAO,EAAE,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE;AACpC,QAAQ,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;AACzC,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;AACnD,gBAAgB,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;AACjE,gBAAgB,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AAC7C,gBAAgB,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;AAC/I,aAAa;AACb,iBAAiB;AACjB,gBAAgB,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AACnF,sBAAsB,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC;AACxD,uBAAuB,WAAW,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;AACnH,aAAa;AACb,SAAS;AACT,QAAQ,UAAU;AAClB,YAAY,CAAC,WAAW,CAAC,MAAM;AAC/B,YAAY,OAAO,UAAU,CAAC,UAAU,CAAC,CAAC;AAC1C,KAAK;AACL,IAAI,OAAO,WAAW,CAAC;AACvB,CAAC;AACD,IAAI,wBAAwB,GAAG,CAAC,MAAM,EAAE,aAAa,EAAE,WAAW,KAAK,SAAS,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,cAAc,CAAC,aAAa,EAAE,MAAM,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAezO;AACA,IAAI,QAAQ,GAAG,CAAC,KAAK,KAAK,OAAO,KAAK,KAAK,QAAQ,CAAC;AAiCpD;AACA,IAAI,SAAS,GAAG,CAAC,KAAK,KAAK,OAAO,KAAK,KAAK,SAAS,CAAC;AACtD;AACA,SAAS,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE;AACrC,IAAI,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAClD,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;AAClB,IAAI,OAAO,KAAK,GAAG,MAAM,EAAE;AAC3B,QAAQ,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC7E,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,CAAC;AACD,SAAS,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE;AAC7B,IAAI,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;AACjE,IAAI,MAAM,WAAW,GAAG,UAAU,CAAC,MAAM,IAAI,CAAC,GAAG,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AACtF,IAAI,MAAM,GAAG,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAClD,IAAI,IAAI,cAAc,CAAC;AACvB,IAAI,IAAI,WAAW,EAAE;AACrB,QAAQ,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC;AAChC,KAAK;AACL,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7D,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;AACvB,QAAQ,IAAI,SAAS,CAAC;AACtB,QAAQ,MAAM,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3D,QAAQ,MAAM,kBAAkB,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;AAC3D,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE;AACnB,YAAY,cAAc,GAAG,MAAM,CAAC;AACpC,SAAS;AACT,QAAQ,OAAO,EAAE,KAAK,GAAG,YAAY,CAAC,MAAM,EAAE;AAC9C,YAAY,MAAM,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;AAC7C,YAAY,SAAS,GAAG,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACnE,YAAY,IAAI,kBAAkB,KAAK,KAAK;AAC5C,iBAAiB,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,aAAa,CAAC,SAAS,CAAC;AACjE,qBAAqB,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC;AAC7C,wBAAwB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE;AAC3H,gBAAgB,cAAc,GAAG,OAAO,cAAc,CAAC,IAAI,CAAC,GAAG,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;AACnF,aAAa;AACb,YAAY,cAAc,GAAG,SAAS,CAAC;AACvC,SAAS;AACT,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,CAAC;AAoMD;AACA,SAAS,SAAS,CAAC,WAAW,EAAE,UAAU,EAAE;AAC5C,IAAI,MAAM,aAAa,GAAG,EAAE,CAAC;AAC7B,IAAI,KAAK,MAAM,IAAI,IAAI,WAAW,EAAE;AACpC,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAC5C,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC;AACxB,kBAAkB,GAAG,CAAC,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC;AACpD,mBAAmB,aAAa,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;AACnD,SAAS;AACT,KAAK;AACL,IAAI,OAAO,aAAa,CAAC;AACzB,CAAC;AACD;AACA,IAAI,WAAW,GAAG,CAAC,OAAO,KAAK,OAAO,CAAC,IAAI,KAAK,MAAM,CAAC;AACvD;AACA,IAAI,gBAAgB,GAAG,CAAC,OAAO,KAAK,OAAO,CAAC,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AACvE;AACA,IAAI,YAAY,GAAG,CAAC,OAAO,KAAK,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC;AACzD;AACA,MAAM,aAAa,GAAG;AACtB,IAAI,KAAK,EAAE,KAAK;AAChB,IAAI,OAAO,EAAE,KAAK;AAClB,CAAC,CAAC;AACF,MAAM,WAAW,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AACnD,IAAI,gBAAgB,GAAG,CAAC,OAAO,KAAK;AACpC,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AAChC,QAAQ,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AAChC,YAAY,MAAM,MAAM,GAAG,OAAO;AAClC,iBAAiB,MAAM,CAAC,CAAC,MAAM,KAAK,MAAM,IAAI,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;AACjF,iBAAiB,GAAG,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/C,YAAY,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AAC/D,SAAS;AACT,QAAQ,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ;AACzD;AACA,gBAAgB,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC;AAClF,sBAAsB,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;AAC9E,0BAA0B,WAAW;AACrC,0BAA0B,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE;AACpE,sBAAsB,WAAW;AACjC,cAAc,aAAa,CAAC;AAC5B,KAAK;AACL,IAAI,OAAO,aAAa,CAAC;AACzB,CAAC,CAAC;AACF;AACA,IAAI,eAAe,GAAG,CAAC,KAAK,EAAE,EAAE,aAAa,EAAE,WAAW,EAAE,UAAU,EAAE,KAAK,WAAW,CAAC,KAAK,CAAC;AAC/F,MAAM,KAAK;AACX,MAAM,aAAa;AACnB,UAAU,KAAK,KAAK,EAAE;AACtB,cAAc,GAAG;AACjB,cAAc,CAAC,KAAK;AACpB,UAAU,WAAW;AACrB,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC;AAC7B,cAAc,UAAU;AACxB,kBAAkB,UAAU,CAAC,KAAK,CAAC;AACnC,kBAAkB,KAAK,CAAC;AACxB;AACA,IAAI,sBAAsB,GAAG,CAAC,OAAO,KAAK,CAAC,GAAG,OAAO,CAAC;AACtD,KAAK,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,QAAQ,CAAC;AACvC,KAAK,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC;AAC/B;AACA,MAAM,aAAa,GAAG;AACtB,IAAI,OAAO,EAAE,KAAK;AAClB,IAAI,KAAK,EAAE,IAAI;AACf,CAAC,CAAC;AACF,IAAI,aAAa,GAAG,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC;AACvD,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,MAAM,KAAK,MAAM,IAAI,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ;AACvF,UAAU;AACV,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,KAAK,EAAE,MAAM,CAAC,KAAK;AAC/B,SAAS;AACT,UAAU,QAAQ,EAAE,aAAa,CAAC;AAClC,MAAM,aAAa,CAAC;AACpB;AACA,SAAS,aAAa,CAAC,KAAK,EAAE;AAC9B,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,EAAE,EAAE;AAC3B,QAAQ,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC;AACjC,QAAQ,IAAI,GAAG,CAAC,QAAQ,EAAE;AAC1B,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,WAAW,CAAC,GAAG,CAAC,EAAE;AAC9B,YAAY,OAAO,GAAG,CAAC,KAAK,CAAC;AAC7B,SAAS;AACT,QAAQ,IAAI,YAAY,CAAC,GAAG,CAAC,EAAE;AAC/B,YAAY,OAAO,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;AACtD,SAAS;AACT,QAAQ,IAAI,gBAAgB,CAAC,GAAG,CAAC,EAAE;AACnC,YAAY,OAAO,sBAAsB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACvD,SAAS;AACT,QAAQ,IAAI,eAAe,CAAC,GAAG,CAAC,EAAE;AAClC,YAAY,OAAO,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;AACzD,SAAS;AACT,QAAQ,OAAO,eAAe,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;AAClG,KAAK;AACL,CAAC;AACD;AACA,IAAI,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO,KAAK,OAAO;AACjD,IAAI,OAAO;AACX,KAAK,OAAO,CAAC,QAAQ;AACrB,QAAQ,OAAO,CAAC,GAAG;AACnB,QAAQ,OAAO,CAAC,GAAG;AACnB,QAAQ,OAAO,CAAC,SAAS;AACzB,QAAQ,OAAO,CAAC,SAAS;AACzB,QAAQ,OAAO,CAAC,OAAO;AACvB,QAAQ,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B;AACA,IAAI,cAAc,GAAG,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,GAAG,KAAK;AACvJ,IAAI,IAAI,OAAO,EAAE;AACjB,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,SAAS,IAAI,CAAC,WAAW,IAAI,SAAS,EAAE;AACxC,QAAQ,OAAO,EAAE,SAAS,IAAI,WAAW,CAAC,CAAC;AAC3C,KAAK;AACL,SAAS,IAAI,WAAW,GAAG,kBAAkB,GAAG,QAAQ,EAAE;AAC1D,QAAQ,OAAO,CAAC,WAAW,CAAC;AAC5B,KAAK;AACL,SAAS,IAAI,WAAW,GAAG,oBAAoB,GAAG,UAAU,EAAE;AAC9D,QAAQ,OAAO,WAAW,CAAC;AAC3B,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AACF;AACA,IAAI,UAAU,GAAG,CAAC,KAAK,KAAK,OAAO,KAAK,KAAK,UAAU,CAAC;AACxD;AACA,IAAI,SAAS,GAAG,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK,CAAC,IAAIA,gBAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AAC1E;AACA,IAAI,OAAO,GAAG,CAAC,KAAK,KAAK,KAAK,YAAY,MAAM,CAAC;AACjD;AACA,SAAS,gBAAgB,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,GAAG,UAAU,EAAE;AAC1D,IAAI,IAAI,SAAS,CAAC,MAAM,CAAC;AACzB,SAAS,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAC1D,SAAS,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACxC,QAAQ,OAAO;AACf,YAAY,IAAI;AAChB,YAAY,OAAO,EAAE,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,EAAE;AACpD,YAAY,GAAG;AACf,SAAS,CAAC;AACV,KAAK;AACL,CAAC;AACD;AACA,IAAI,kBAAkB,GAAG,CAAC,cAAc,KAAK,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;AACjG,MAAM,cAAc;AACpB,MAAM;AACN,QAAQ,KAAK,EAAE,cAAc;AAC7B,QAAQ,OAAO,EAAE,EAAE;AACnB,KAAK,CAAC;AACN;AACA,IAAI,aAAa,GAAG,OAAO,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,aAAa,EAAE,KAAK,GAAG,GAAG,EAAE,wBAAwB,KAAK;AAC7L,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,OAAO,EAAE,CAAC;AAClB,KAAK;AACL,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;AACrB,IAAI,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;AACtC,IAAI,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;AAC5C,IAAI,MAAM,iBAAiB,GAAG,OAAO,IAAI,UAAU,CAAC;AACpD,IAAI,MAAM,OAAO,GAAG,CAAC,CAAC,aAAa,IAAI,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;AACtE,QAAQ,UAAU,KAAK,EAAE;AACzB,SAAS,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC1D,IAAI,MAAM,iBAAiB,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,wBAAwB,EAAE,KAAK,CAAC,CAAC;AAC7F,IAAI,MAAM,gBAAgB,GAAG,CAAC,SAAS,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,OAAO,GAAG,sBAAsB,CAAC,SAAS,EAAE,OAAO,GAAG,sBAAsB,CAAC,SAAS,KAAK;AACxK,QAAQ,MAAM,OAAO,GAAG,SAAS,GAAG,gBAAgB,GAAG,gBAAgB,CAAC;AACxE,QAAQ,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,SAAS,GAAG,OAAO,GAAG,OAAO,EAAE,OAAO;AAClF,YAAY,GAAG,EAAE,EAAE,iBAAiB,CAAC,SAAS,GAAG,OAAO,GAAG,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;AAC9E,KAAK,CAAC;AACN,IAAI,IAAI,QAAQ;AAChB,SAAS,CAAC,CAAC,OAAO,IAAI,CAAC,UAAU,KAAK,OAAO,IAAI,iBAAiB,CAAC,UAAU,CAAC,CAAC;AAC/E,aAAa,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC;AAClD,aAAa,UAAU,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC;AAC3D,aAAa,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE;AACxD,QAAQ,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,SAAS,CAAC,QAAQ,CAAC;AACtD,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE;AACtD,cAAc,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AAC3C,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,sBAAsB,CAAC,QAAQ,EAAE,OAAO,EAAE,GAAG,EAAE,iBAAiB,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,iBAAiB,CAAC,sBAAsB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AAC/M,YAAY,IAAI,CAAC,wBAAwB,EAAE;AAC3C,gBAAgB,OAAO,KAAK,CAAC;AAC7B,aAAa;AACb,SAAS;AACT,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC;AAC3D,QAAQ,UAAU,KAAK,EAAE,EAAE;AAC3B,QAAQ,IAAI,SAAS,CAAC;AACtB,QAAQ,IAAI,SAAS,CAAC;AACtB,QAAQ,MAAM,SAAS,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;AAClD,QAAQ,MAAM,SAAS,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;AAClD,QAAQ,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;AAChC,YAAY,MAAM,WAAW,GAAG,GAAG,CAAC,aAAa,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC;AAC5E,YAAY,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;AACrD,gBAAgB,SAAS,GAAG,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC;AAC1D,aAAa;AACb,YAAY,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;AACrD,gBAAgB,SAAS,GAAG,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC;AAC1D,aAAa;AACb,SAAS;AACT,aAAa;AACb,YAAY,MAAM,SAAS,GAAG,GAAG,CAAC,WAAW,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;AACtE,YAAY,IAAI,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;AAC3C,gBAAgB,SAAS,GAAG,SAAS,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAClE,aAAa;AACb,YAAY,IAAI,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;AAC3C,gBAAgB,SAAS,GAAG,SAAS,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAClE,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,SAAS,IAAI,SAAS,EAAE;AACpC,YAAY,gBAAgB,CAAC,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,OAAO,EAAE,sBAAsB,CAAC,GAAG,EAAE,sBAAsB,CAAC,GAAG,CAAC,CAAC;AACxI,YAAY,IAAI,CAAC,wBAAwB,EAAE;AAC3C,gBAAgB,OAAO,KAAK,CAAC;AAC7B,aAAa;AACb,SAAS;AACT,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,KAAK,SAAS,IAAI,SAAS,CAAC,EAAE;AACtE,QAAQ,MAAM,eAAe,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;AAC9D,QAAQ,MAAM,eAAe,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;AAC9D,QAAQ,MAAM,SAAS,GAAG,CAAC,iBAAiB,CAAC,eAAe,CAAC,KAAK,CAAC;AACnE,YAAY,UAAU,CAAC,MAAM,GAAG,eAAe,CAAC,KAAK,CAAC;AACtD,QAAQ,MAAM,SAAS,GAAG,CAAC,iBAAiB,CAAC,eAAe,CAAC,KAAK,CAAC;AACnE,YAAY,UAAU,CAAC,MAAM,GAAG,eAAe,CAAC,KAAK,CAAC;AACtD,QAAQ,IAAI,SAAS,IAAI,SAAS,EAAE;AACpC,YAAY,gBAAgB,CAAC,SAAS,EAAE,eAAe,CAAC,OAAO,EAAE,eAAe,CAAC,OAAO,CAAC,CAAC;AAC1F,YAAY,IAAI,CAAC,wBAAwB,EAAE;AAC3C,gBAAgB,OAAO,KAAK,CAAC;AAC7B,aAAa;AACb,SAAS;AACT,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,UAAU,CAAC,IAAI,OAAO,IAAI,CAAC,OAAO,EAAE;AACrD,QAAQ,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;AAC7E,QAAQ,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;AACtE,YAAY,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,sBAAsB,CAAC,OAAO,EAAE,OAAO;AACvF,gBAAgB,GAAG,EAAE,EAAE,iBAAiB,CAAC,sBAAsB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;AACnF,YAAY,IAAI,CAAC,wBAAwB,EAAE;AAC3C,gBAAgB,OAAO,KAAK,CAAC;AAC7B,aAAa;AACb,SAAS;AACT,KAAK;AACL,IAAI,IAAI,QAAQ,EAAE;AAClB,QAAQ,MAAM,WAAW,GAAG,iBAAiB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AACtE,QAAQ,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;AAClC,YAAY,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,CAAC;AACtD,YAAY,MAAM,aAAa,GAAG,gBAAgB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AACxE,YAAY,IAAI,aAAa,EAAE;AAC/B,gBAAgB,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC,EAAE,iBAAiB,CAAC,sBAAsB,CAAC,QAAQ,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;AACzJ,gBAAgB,IAAI,CAAC,wBAAwB,EAAE;AAC/C,oBAAoB,OAAO,KAAK,CAAC;AACjC,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,aAAa,IAAI,QAAQ,CAAC,QAAQ,CAAC,EAAE;AACrC,YAAY,IAAI,gBAAgB,GAAG,EAAE,CAAC;AACtC,YAAY,KAAK,MAAM,CAAC,GAAG,EAAE,gBAAgB,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AAC5E,gBAAgB,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,wBAAwB,EAAE;AACnF,oBAAoB,MAAM;AAC1B,iBAAiB;AACjB,gBAAgB,MAAM,cAAc,GAAG,MAAM,gBAAgB,CAAC,UAAU,CAAC,CAAC;AAC1E,gBAAgB,MAAM,aAAa,GAAG,gBAAgB,CAAC,cAAc,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC;AACzF,gBAAgB,IAAI,aAAa,EAAE;AACnC,oBAAoB,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC,EAAE,iBAAiB,CAAC,GAAG,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;AACtI,oBAAoB,IAAI,wBAAwB,EAAE;AAClD,wBAAwB,KAAK,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC;AACvD,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,YAAY,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,EAAE;AAClD,gBAAgB,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE,gBAAgB,CAAC,CAAC;AACpF,gBAAgB,IAAI,CAAC,wBAAwB,EAAE;AAC/C,oBAAoB,OAAO,KAAK,CAAC;AACjC,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC,CAAC;AACF;AACA,IAAI,kBAAkB,GAAG,CAAC,IAAI,MAAM;AACpC,IAAI,UAAU,EAAE,CAAC,IAAI,IAAI,IAAI,KAAK,eAAe,CAAC,QAAQ;AAC1D,IAAI,QAAQ,EAAE,IAAI,KAAK,eAAe,CAAC,MAAM;AAC7C,IAAI,UAAU,EAAE,IAAI,KAAK,eAAe,CAAC,QAAQ;AACjD,IAAI,OAAO,EAAE,IAAI,KAAK,eAAe,CAAC,GAAG;AACzC,IAAI,SAAS,EAAE,IAAI,KAAK,eAAe,CAAC,SAAS;AACjD,CAAC,CAAC,CAAC;AACH;AACA,IAAI,aAAa,GAAG,CAAC,KAAK,KAAK,KAAK,YAAY,WAAW,CAAC;AAC5D;AACA,IAAI,yBAAyB,GAAG,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,CAAC,IAAI,eAAe,CAAC,GAAG,CAAC,CAAC;AACnF;AACA,MAAM,YAAY,CAAC;AACnB,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AAC5B,KAAK;AACL,IAAI,GAAG,CAAC,QAAQ,EAAE;AAClB,QAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACtC,KAAK;AACL,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;AAC/C,YAAY,QAAQ,EAAE,CAAC;AACvB,SAAS;AACT,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AAC5B,KAAK;AACL,CAAC;AACD,MAAM,UAAU,CAAC;AACjB,IAAI,WAAW,CAAC,QAAQ,EAAE,YAAY,EAAE;AACxC,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACjC,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5B,QAAQ,YAAY,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;AACrD,KAAK;AACL,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,SAAS;AACT,KAAK;AACL,CAAC;AACD,MAAM,OAAO,CAAC;AACd,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AAC5B,KAAK;AACL,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;AAC/C,YAAY,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjC,SAAS;AACT,KAAK;AACL,IAAI,SAAS,CAAC,QAAQ,EAAE;AACxB,QAAQ,MAAM,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AAChD,QAAQ,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;AAClE,QAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACxC,QAAQ,OAAO,YAAY,CAAC;AAC5B,KAAK;AACL,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AAC5B,KAAK;AACL,CAAC;AACD;AACA,MAAM,iBAAiB,GAAG,OAAO,MAAM,KAAK,WAAW,CAAC;AACxD,SAAS,OAAO,CAAC,EAAE,IAAI,GAAG,eAAe,CAAC,QAAQ,EAAE,cAAc,GAAG,eAAe,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,aAAa,GAAG,EAAE,EAAE,gBAAgB,GAAG,IAAI,EAAE,gBAAgB,EAAE,YAAY,GAAG,GAAG,EAAE,EAAE;AACvM,IAAI,MAAM,SAAS,GAAGA,gBAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACvC,IAAI,MAAM,cAAc,GAAGA,gBAAK,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;AACnD,IAAI,MAAM,mBAAmB,GAAGA,gBAAK,CAAC,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC,CAAC;AAC5D,IAAI,MAAM,wBAAwB,GAAGA,gBAAK,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;AAC7D,IAAI,MAAM,eAAe,GAAGA,gBAAK,CAAC,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC,CAAC;AACxD,IAAI,MAAM,oBAAoB,GAAGA,gBAAK,CAAC,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC,CAAC;AAC7D,IAAI,MAAM,oBAAoB,GAAGA,gBAAK,CAAC,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC,CAAC;AAC7D,IAAI,MAAM,0BAA0B,GAAGA,gBAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACxD,IAAI,MAAM,qBAAqB,GAAGA,gBAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACtD,IAAI,MAAM,cAAc,GAAGA,gBAAK,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;AACnD,IAAI,MAAM,YAAY,GAAGA,gBAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC7C,IAAI,MAAM,uBAAuB,GAAGA,gBAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACrD,IAAI,MAAM,cAAc,GAAGA,gBAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAC5C,IAAI,MAAM,gBAAgB,GAAGA,gBAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AACzD,IAAI,MAAM,aAAa,GAAGA,gBAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC9C,IAAI,MAAM,UAAU,GAAGA,gBAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC7C,IAAI,MAAM,WAAW,GAAGA,gBAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC/C,IAAI,MAAM,kBAAkB,GAAGA,gBAAK,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;AACvD,IAAI,MAAM,cAAc,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;AACpD,IAAI,MAAM,0BAA0B,GAAG,YAAY,KAAK,eAAe,CAAC,GAAG,CAAC;AAC5E,IAAI,MAAM,CAAC,SAAS,EAAE,eAAe,CAAC,GAAGA,gBAAK,CAAC,QAAQ,CAAC;AACxD,QAAQ,OAAO,EAAE,KAAK;AACtB,QAAQ,YAAY,EAAE,KAAK;AAC3B,QAAQ,WAAW,EAAE,EAAE;AACvB,QAAQ,WAAW,EAAE,KAAK;AAC1B,QAAQ,WAAW,EAAE,CAAC;AACtB,QAAQ,aAAa,EAAE,EAAE;AACzB,QAAQ,YAAY,EAAE,KAAK;AAC3B,QAAQ,kBAAkB,EAAE,KAAK;AACjC,QAAQ,OAAO,EAAE,CAAC,cAAc,CAAC,UAAU;AAC3C,QAAQ,MAAM,EAAE,EAAE;AAClB,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,gBAAgB,GAAGA,gBAAK,CAAC,MAAM,CAAC;AAC1C,QAAQ,OAAO,EAAE,CAAC,cAAc;AAChC,QAAQ,WAAW,EAAE,CAAC,cAAc;AACpC,QAAQ,aAAa,EAAE,CAAC,cAAc;AACtC,QAAQ,YAAY,EAAE,CAAC,cAAc;AACrC,QAAQ,OAAO,EAAE,CAAC,cAAc;AAChC,QAAQ,MAAM,EAAE,CAAC,cAAc;AAC/B,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,YAAY,GAAGA,gBAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACjD,IAAI,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;AACjC,IAAI,WAAW,CAAC,OAAO,GAAG,QAAQ,CAAC;AACnC,IAAI,MAAM,UAAU,GAAG,MAAM;AAC7B,QAAQ,YAAY,CAAC,OAAO,CAAC,OAAO;AACpC,YAAY,SAAS,CAAC,cAAc,CAAC,OAAO,EAAE,uBAAuB,CAAC,OAAO,CAAC;AAC9E,gBAAgB,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3D,QAAQ,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;AAC5C,KAAK,CAAC;AACN,IAAI,MAAM,uBAAuB,GAAGA,gBAAK,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,YAAY,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE,EAAE,OAAO,EAAE,SAAS,KAAK;AAC7H,QAAQ,MAAM,aAAa,GAAG,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACrE,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,KAAK,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAChD,YAAY,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAS;AACT,aAAa;AACb,YAAY,CAAC,GAAG,CAAC,uBAAuB,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,WAAW,CAAC,OAAO;AAC9E,gBAAgB,GAAG,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACxD,YAAY,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACrD,SAAS;AACT,QAAQ,IAAI,CAAC,YAAY;AACzB,YAAY,SAAS;AACrB,aAAa,KAAK,GAAG,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,aAAa,CAAC;AAC5E,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC;AACjC,aAAa,gBAAgB,CAAC,OAAO,CAAC,OAAO;AAC7C,gBAAgB,YAAY,CAAC,OAAO,CAAC,OAAO;AAC5C,qBAAqB,WAAW,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,GAAG,UAAU,EAAE,CAAC,CAAC;AACrE,YAAY,CAAC,iBAAiB,CAAC,YAAY,CAAC,EAAE;AAC9C,YAAY,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,GAAG,UAAU,EAAE,EAAE,MAAM,EAAE,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AACrL,YAAY,YAAY,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE,gBAAgB,CAAC,CAAC;AAC5G,YAAY,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,IAAI,EAAE,GAAG,gBAAgB,CAAC,CAAC;AACtF,SAAS;AACT,QAAQ,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC;AACzC,YAAY,YAAY,EAAE,KAAK;AAC/B,SAAS,CAAC,CAAC;AACX,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAI,MAAM,aAAa,GAAGA,gBAAK,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,GAAG,EAAE,EAAE,YAAY,EAAE,cAAc,KAAK;AAC5G,QAAQ,cAAc,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;AACzC,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACnD,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;AAChC,YAAY,IAAI,EAAE,EAAE;AACpB,gBAAgB,MAAM,KAAK,GAAG,KAAK,IAAI,aAAa,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,QAAQ,CAAC;AAC3F,sBAAsB,EAAE;AACxB,sBAAsB,QAAQ,CAAC;AAC/B,gBAAgB,EAAE,CAAC,KAAK,GAAG,eAAe,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AACzD,gBAAgB,IAAI,YAAY,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;AAC1C,oBAAoB,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC,QAAQ,MAAM,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC;AACzG,iBAAiB;AACjB,qBAAqB,IAAI,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AAClE,oBAAoB,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;AACzC,iBAAiB;AACjB,qBAAqB,IAAI,gBAAgB,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;AACnD,oBAAoB,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,MAAM,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACvH,iBAAiB;AACjB,qBAAqB,IAAI,eAAe,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE;AAC7D,oBAAoB,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;AACtC,0BAA0B,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,MAAM,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AACtG,8BAA8B,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,KAAK,WAAW,CAAC,KAAK,CAAC;AAChF,8BAA8B,KAAK,KAAK,WAAW,CAAC,KAAK,CAAC,CAAC;AAC3D,2BAA2B,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;AACzD,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;AACzC,iBAAiB;AACjB,gBAAgB,IAAI,YAAY,EAAE;AAClC,oBAAoB,MAAM,MAAM,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC;AAC9D,oBAAoB,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AAChD,oBAAoB,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC;AACtD,wBAAwB,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,gBAAgB,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC;AAClG,wBAAwB,IAAI;AAC5B,qBAAqB,CAAC,CAAC;AACvB,iBAAiB;AACjB,gBAAgB,OAAO,CAAC,WAAW,IAAI,sBAAsB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC3E,gBAAgB,OAAO,CAAC,cAAc,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;AACxD,aAAa;AACb,iBAAiB;AACjB,gBAAgB,KAAK,CAAC,EAAE,GAAG;AAC3B,oBAAoB,GAAG,EAAE;AACzB,wBAAwB,IAAI;AAC5B,wBAAwB,KAAK,EAAE,QAAQ;AACvC,qBAAqB;AACrB,oBAAoB,KAAK,EAAE,QAAQ;AACnC,iBAAiB,CAAC;AAClB,aAAa;AACb,SAAS;AACT,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAI,MAAM,UAAU,GAAGA,gBAAK,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,IAAI,KAAK;AACzD,QAAQ,MAAM,UAAU,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC;AACtD,QAAQ,IAAI,IAAI,IAAI,IAAI,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACpD,QAAQ,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,gBAAgB,CAAC,OAAO,CAAC,CAAC;AAChE,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAI,MAAM,sBAAsB,GAAGA,gBAAK,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,UAAU,EAAE,YAAY,GAAG,IAAI,KAAK;AAChG,QAAQ,IAAI,gBAAgB,CAAC,OAAO,CAAC,OAAO;AAC5C,YAAY,gBAAgB,CAAC,OAAO,CAAC,WAAW,EAAE;AAClD,YAAY,MAAM,YAAY,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,UAAU,CAAC,CAAC;AAC7F,YAAY,MAAM,iBAAiB,GAAG,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;AAClF,YAAY,MAAM,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;AACjE,YAAY,YAAY;AACxB,kBAAkB,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC;AACnE,kBAAkB,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;AAChE,YAAY,YAAY,CAAC,OAAO,CAAC,OAAO,GAAG,UAAU,EAAE,CAAC;AACxD,YAAY,MAAM,KAAK,GAAG;AAC1B,gBAAgB,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,OAAO;AACrD,gBAAgB,WAAW,EAAE,YAAY,CAAC,OAAO,CAAC,WAAW;AAC7D,gBAAgB,IAAI;AACpB,aAAa,CAAC;AACd,YAAY,MAAM,SAAS,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO;AAC/D,gBAAgB,eAAe,KAAK,KAAK,CAAC,OAAO;AACjD,iBAAiB,gBAAgB,CAAC,OAAO,CAAC,WAAW;AACrD,oBAAoB,iBAAiB,KAAK,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;AACvF,YAAY,SAAS,IAAI,YAAY,IAAI,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjF,YAAY,OAAO,SAAS,GAAG,KAAK,GAAG,EAAE,CAAC;AAC1C,SAAS;AACT,QAAQ,OAAO,EAAE,CAAC;AAClB,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAI,MAAM,iBAAiB,GAAGA,gBAAK,CAAC,WAAW,CAAC,OAAO,IAAI,EAAE,YAAY,KAAK;AAC9E,QAAQ,MAAM,KAAK,GAAG,CAAC,MAAM,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,0BAA0B,CAAC,EAAE,IAAI,CAAC,CAAC;AAC5G,QAAQ,uBAAuB,CAAC,IAAI,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;AAC3D,QAAQ,OAAO,WAAW,CAAC,KAAK,CAAC,CAAC;AAClC,KAAK,EAAE,CAAC,0BAA0B,CAAC,CAAC,CAAC;AACrC,IAAI,MAAM,iCAAiC,GAAGA,gBAAK,CAAC,WAAW,CAAC,OAAO,KAAK,EAAE,YAAY,GAAG,EAAE,KAAK;AACpG,QAAQ,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,WAAW,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,OAAO,EAAE;AACrG,YAAY,YAAY;AACxB,YAAY,KAAK,EAAE,YAAY;AAC/B,YAAY,MAAM,EAAE,SAAS,CAAC,cAAc,CAAC,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC;AACxE,SAAS,CAAC,CAAC;AACX,QAAQ,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAClC,YAAY,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC5C,YAAY,KAAK;AACjB,kBAAkB,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC;AAC/D,kBAAkB,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC3D,SAAS;AACT,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;AACvB,IAAI,MAAM,YAAY,GAAG,OAAO,SAAS,KAAK;AAC9C,QAAQ,KAAK,MAAM,IAAI,IAAI,SAAS,EAAE;AACtC,YAAY,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAC1C,YAAY,IAAI,KAAK,EAAE;AACvB,gBAAgB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;AACpC,gBAAgB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAClD,gBAAgB,IAAI,EAAE,EAAE;AACxB,oBAAoB,MAAM,UAAU,GAAG,MAAM,aAAa,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;AAC9F,oBAAoB,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;AAC7C,wBAAwB,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AACvF,wBAAwB,KAAK,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;AAC/D,qBAAqB;AACrB,yBAAyB,IAAI,GAAG,CAAC,uBAAuB,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;AAC5E,wBAAwB,GAAG,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACnE,wBAAwB,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;AACpE,qBAAqB;AACrB,iBAAiB;AACjB,gBAAgB,OAAO,KAAK,MAAM,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;AACzD,aAAa;AACb,SAAS;AACT,KAAK,CAAC;AACN,IAAI,MAAM,OAAO,GAAGA,gBAAK,CAAC,WAAW,CAAC,OAAO,IAAI,EAAE,OAAO,GAAG,EAAE,KAAK;AACpE,QAAQ,MAAM,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC;AAC5C,cAAc,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;AAC5C,cAAc,qBAAqB,CAAC,IAAI,CAAC,CAAC;AAC1C,QAAQ,IAAI,OAAO,CAAC;AACpB,QAAQ,IAAI,YAAY,GAAG,EAAE,CAAC;AAC9B,QAAQ,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC;AACzC,YAAY,YAAY,EAAE,IAAI;AAC9B,SAAS,CAAC,CAAC;AACX,QAAQ,IAAI,WAAW,CAAC,OAAO,EAAE;AACjC,YAAY,YAAY,GAAG,MAAM,iCAAiC,CAAC,UAAU,EAAE,WAAW,CAAC,IAAI,CAAC;AAChG,kBAAkB,SAAS;AAC3B,kBAAkB,UAAU,CAAC,CAAC;AAC9B,YAAY,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;AAC3E,SAAS;AACT,aAAa;AACb,YAAY,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;AACnC,gBAAgB,MAAM,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACtD,gBAAgB,OAAO,GAAG,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACrE,aAAa;AACb,iBAAiB;AACjB,gBAAgB,OAAO,GAAG,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,UAAU;AACvD,qBAAqB,MAAM,CAAC,CAAC,SAAS,KAAK,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAC7E,qBAAqB,GAAG,CAAC,OAAO,SAAS,KAAK,MAAM,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;AACzG,aAAa;AACb,SAAS;AACT,QAAQ,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,CAAC,OAAO;AACpM,kBAAkB,aAAa,CAAC,YAAY,CAAC;AAC7C,kBAAkB,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,WAAW,EAAE;AAC7C,YAAY,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC;AACxG,SAAS;AACT,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK,EAAE,CAAC,iCAAiC,EAAE,iBAAiB,CAAC,CAAC,CAAC;AAC/D,IAAI,MAAM,iBAAiB,GAAGA,gBAAK,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,KAAK,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC,KAAK;AACpI,QAAQ,MAAM,SAAS,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAChD,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACxD,QAAQ,MAAM,YAAY,GAAG,kBAAkB,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClE,QAAQ,YAAY,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;AACxE,cAAc,iBAAiB,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC;AAC/D,cAAc,aAAa,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC;AAC1E,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;AACnB,IAAI,MAAM,cAAc,GAAG,CAAC,IAAI,KAAK,aAAa,CAAC,OAAO;AAC1D,QAAQ,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;AACxC,QAAQ,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACjE,IAAI,MAAM,mBAAmB,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,mBAAmB,KAAK;AAC7E,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACnD,QAAQ,MAAM,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC;AACxD,cAAc,GAAG,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC;AACjD,cAAc,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC;AAC7B,QAAQ,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE;AACjD,YAAY,IAAI,GAAG,IAAI,GAAG,CAAC,cAAc,EAAE;AAC3C,gBAAgB,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;AACtD,aAAa;AACb,iBAAiB,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;AAC5E,gBAAgB,aAAa,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AAClD,aAAa;AACb,iBAAiB;AACjB,gBAAgB,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,YAAY,CAAC;AAC9C,aAAa;AACb,SAAS;AACT,aAAa;AACb,YAAY,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;AAClD,SAAS;AACT,QAAQ,IAAI,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,mBAAmB;AAC9D,YAAY,aAAa,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC;AAClD,YAAY,CAAC,cAAc,CAAC,UAAU;AACtC,YAAY,KAAK;AACjB,YAAY,gBAAgB,CAAC,OAAO,CAAC,OAAO,EAAE;AAC9C,YAAY,aAAa,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK;AAC7E,gBAAgB,aAAa,CAAC,KAAK,CAAC;AACpC,sBAAsB,GAAG,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC;AAC7D,sBAAsB,KAAK,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAC1D,gBAAgB,YAAY,CAAC,OAAO,CAAC,OAAO,KAAK,UAAU,EAAE;AAC7D,oBAAoB,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC;AACvH,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QAAQ,OAAO,YAAY,CAAC;AAC5B,KAAK,CAAC;AACN,IAAI,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,GAAG,EAAE,KAAK;AACpD,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACnD,QAAQ,MAAM,YAAY,GAAG,kBAAkB,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClE,QAAQ,IAAI,YAAY,EAAE;AAC1B,YAAY,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC;AAC9C,gBAAgB,MAAM,EAAE,KAAK;AAC7B,gBAAgB,IAAI;AACpB,gBAAgB,OAAO,EAAE,IAAI;AAC7B,aAAa,CAAC,CAAC;AACf,YAAY,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO;AACjD,gBAAgB,gBAAgB,CAAC,OAAO,CAAC,WAAW;AACpD,gBAAgB,OAAO,CAAC,WAAW,EAAE;AACrC,gBAAgB,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,EAAE,wBAAwB,CAAC,KAAK,EAAE,GAAG,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACvL,gBAAgB,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC;AACjD,oBAAoB,IAAI;AACxB,oBAAoB,WAAW,EAAE,YAAY,CAAC,OAAO,CAAC,WAAW;AACjE,oBAAoB,OAAO,EAAE,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC;AACpD,iBAAiB,CAAC,CAAC;AACnB,aAAa;AACb,YAAY,CAAC,KAAK,CAAC,MAAM;AACzB,gBAAgB,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,CAAC;AAChD,gBAAgB,GAAG,CAAC,0BAA0B,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;AAClE,SAAS;AACT,QAAQ,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,YAAY,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC;AAC3E,cAAc,iBAAiB,CAAC,IAAI,EAAE,KAAK,EAAE,YAAY,GAAG,EAAE,GAAG,OAAO,CAAC;AACzE,cAAc,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC;AAChE,QAAQ,cAAc,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrE,QAAQ,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;AACxE,KAAK,CAAC;AACN,IAAI,MAAM,YAAY,GAAGA,gBAAK,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,KAAK;AAC3G,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AAC/B,QAAQ,IAAI,KAAK,CAAC;AAClB,QAAQ,IAAI,OAAO,CAAC;AACpB,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACnD,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,IAAI,UAAU,GAAG,SAAS,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;AAC1E,YAAY,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC,GAAG,KAAK,GAAG,UAAU,CAAC;AACtE,YAAY,MAAM,WAAW,GAAG,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC;AACrD,YAAY,MAAM,EAAE,QAAQ,EAAE,kBAAkB,EAAE,UAAU,EAAE,oBAAoB,GAAG,GAAG,kBAAkB,CAAC,cAAc,CAAC,CAAC;AAC3H,YAAY,MAAM,oBAAoB,GAAG,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC;AAClF,gBAAgB,CAAC,WAAW,CAAC,OAAO;AACpC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC;AACvD,gBAAgB,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE,WAAW,EAAE,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,kBAAkB;AACzL,oBAAoB,oBAAoB,EAAE,EAAE,cAAc,CAAC,CAAC,CAAC;AAC7D,YAAY,MAAM,SAAS,GAAG,CAAC,WAAW,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;AACnE,YAAY,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE;AAC1C,gBAAgB,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,UAAU,CAAC;AAC5C,aAAa;AACb,YAAY,MAAM,KAAK,GAAG,sBAAsB,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC9E,YAAY,IAAI,WAAW,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE;AAC/E,gBAAgB,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACpE,gBAAgB,gBAAgB,CAAC,OAAO,CAAC,aAAa;AACtD,qBAAqB,KAAK,CAAC,aAAa,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC/E,aAAa;AACb,YAAY,IAAI,YAAY,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC;AAClE,YAAY,IAAI,oBAAoB,EAAE;AACtC,gBAAgB,CAAC,WAAW;AAC5B,oBAAoB,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC;AACjD,wBAAwB,IAAI;AAC5B,wBAAwB,IAAI;AAC5B,wBAAwB,UAAU,EAAE,SAAS,EAAE;AAC/C,qBAAqB,CAAC,CAAC;AACvB,gBAAgB,QAAQ,YAAY;AACpC,oBAAoB,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE;AAChI,aAAa;AACb,YAAY,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC;AAC7C,gBAAgB,YAAY,EAAE,IAAI;AAClC,aAAa,CAAC,CAAC;AACf,YAAY,IAAI,WAAW,CAAC,OAAO,EAAE;AACrC,gBAAgB,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,WAAW,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,OAAO,EAAE;AAC7G,oBAAoB,YAAY;AAChC,oBAAoB,MAAM,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC;AAChE,oBAAoB,KAAK,EAAE,CAAC,IAAI,CAAC;AACjC,iBAAiB,CAAC,CAAC;AACnB,gBAAgB,MAAM,mBAAmB,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;AACzE,gBAAgB,KAAK,GAAG,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC1C,gBAAgB,IAAI,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE;AACvD,oBAAoB,MAAM,cAAc,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;AACnE,oBAAoB,MAAM,YAAY,GAAG,GAAG,CAAC,MAAM,EAAE,cAAc,EAAE,EAAE,CAAC,CAAC;AACzE,oBAAoB,YAAY,CAAC,IAAI,IAAI,YAAY,CAAC,OAAO,KAAK,KAAK,GAAG,YAAY,CAAC,CAAC;AACxF,oBAAoB,IAAI,YAAY;AACpC,wBAAwB,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,cAAc,CAAC,EAAE;AAC1E,wBAAwB,IAAI,GAAG,cAAc,CAAC;AAC9C,qBAAqB;AACrB,iBAAiB;AACjB,gBAAgB,OAAO,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;AAChD,gBAAgB,mBAAmB,KAAK,OAAO,KAAK,YAAY,GAAG,IAAI,CAAC,CAAC;AACzE,aAAa;AACb,iBAAiB;AACjB,gBAAgB,KAAK,GAAG,CAAC,MAAM,aAAa,CAAC,KAAK,EAAE,0BAA0B,CAAC,EAAE,IAAI,CAAC,CAAC;AACvF,aAAa;AACb,YAAY,CAAC,WAAW;AACxB,gBAAgB,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC;AAC7C,oBAAoB,IAAI;AACxB,oBAAoB,IAAI;AACxB,oBAAoB,UAAU,EAAE,SAAS,EAAE;AAC3C,iBAAiB,CAAC,CAAC;AACnB,YAAY,uBAAuB,CAAC,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;AAC1F,SAAS;AACT,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAI,MAAM,SAAS,GAAG,CAAC,UAAU,KAAK;AACtC,QAAQ,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,gBAAgB,CAAC,OAAO,CAAC,EAAE,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC;AAC9G,QAAQ,OAAO,WAAW,CAAC,UAAU,CAAC;AACtC,cAAc,MAAM;AACpB,cAAc,QAAQ,CAAC,UAAU,CAAC;AAClC,kBAAkB,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC;AACzC,kBAAkB,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;AAC9D,KAAK,CAAC;AACN,IAAI,MAAM,aAAa,GAAGA,gBAAK,CAAC,WAAW,CAAC,OAAO,MAAM,GAAG,EAAE,KAAK;AACnE,QAAQ,MAAM,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;AAC7D,QAAQ,IAAI,QAAQ,EAAE;AACtB,YAAY,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,eAAe,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,UAAU,CAAC,OAAO,EAAE;AACnJ,gBAAgB,YAAY;AAC5B,gBAAgB,MAAM,EAAE,SAAS,CAAC,cAAc,CAAC,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC;AAC5E,aAAa,CAAC,CAAC;AACf,YAAY,YAAY,CAAC,OAAO,CAAC,OAAO,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;AACjE,SAAS;AACT,aAAa;AACb,YAAY,UAAU,EAAE,CAAC;AACzB,SAAS;AACT,QAAQ,eAAe,KAAK,YAAY,CAAC,OAAO,CAAC,OAAO;AACxD,YAAY,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC;AAC7C,gBAAgB,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,OAAO;AACrD,aAAa,CAAC,CAAC;AACf,KAAK,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;AACvB,IAAI,MAAM,WAAW,GAAG,CAAC,IAAI,KAAK;AAClC,QAAQ,IAAI;AACZ,cAAc,qBAAqB,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,KAAK,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AAC/G,eAAe,YAAY,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;AACjD,QAAQ,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC;AACzC,YAAY,MAAM,EAAE,YAAY,CAAC,OAAO,CAAC,MAAM;AAC/C,SAAS,CAAC,CAAC;AACX,KAAK,CAAC;AACN,IAAI,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,KAAK;AAC/C,QAAQ,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC;AAChF,QAAQ,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACjG,QAAQ,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC;AACzC,YAAY,IAAI;AAChB,YAAY,MAAM,EAAE,YAAY,CAAC,OAAO,CAAC,MAAM;AAC/C,YAAY,OAAO,EAAE,KAAK;AAC1B,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,IAAI,OAAO,CAAC,WAAW,IAAI,GAAG,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;AAC1E,KAAK,CAAC;AACN,IAAI,MAAM,aAAa,GAAGA,gBAAK,CAAC,WAAW,CAAC,CAAC,UAAU,EAAE,YAAY,EAAE,QAAQ,EAAE,UAAU,KAAK;AAChG,QAAQ,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACvD,QAAQ,MAAM,WAAW,GAAG,UAAU,IAAI,YAAY,CAAC,OAAO;AAC9D,cAAc,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,gBAAgB,CAAC,OAAO,CAAC,GAAG,UAAU,IAAI,eAAe,CAAC,SAAS,CAAC,EAAE,GAAG,WAAW,CAAC,YAAY,CAAC;AAChJ,cAAc,gBAAgB,CAAC,OAAO;AACtC,cAAc,YAAY;AAC1B,kBAAkB,YAAY;AAC9B,kBAAkB,EAAE,CAAC,UAAU,GAAG,YAAY,EAAE,CAAC;AACjD,QAAQ,IAAI,WAAW,CAAC,UAAU,CAAC,EAAE;AACrC,YAAY,QAAQ,KAAK,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;AACvD,YAAY,OAAO,WAAW,CAAC;AAC/B,SAAS;AACT,QAAQ,MAAM,MAAM,GAAG,EAAE,CAAC;AAC1B,QAAQ,KAAK,MAAM,SAAS,IAAI,qBAAqB,CAAC,UAAU,CAAC,EAAE;AACnE,YAAY,QAAQ,IAAI,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC9D,YAAY,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC;AACrD,SAAS;AACT,QAAQ,OAAO,YAAY,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACjD,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAI,MAAM,KAAK,GAAG,CAAC,SAAS,EAAE,YAAY,KAAK,UAAU,CAAC,SAAS,CAAC;AACpE,UAAU,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC;AAC5C,YAAY,IAAI,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,aAAa,CAAC,SAAS,EAAE,YAAY,CAAC,EAAE,IAAI,CAAC;AACnF,SAAS,CAAC;AACV,UAAU,aAAa,CAAC,SAAS,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;AACvD,IAAI,MAAM,UAAU,GAAG,CAAC,IAAI,EAAE,OAAO,GAAG,EAAE,KAAK;AAC/C,QAAQ,KAAK,MAAM,SAAS,IAAI,IAAI;AACpC,cAAc,qBAAqB,CAAC,IAAI,CAAC;AACzC,cAAc,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;AACnD,YAAY,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACrD,YAAY,kBAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACzD,YAAY,IAAI,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,EAAE;AACnD,gBAAgB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;AAC1C,oBAAoB,KAAK,CAAC,uBAAuB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACtE,oBAAoB,KAAK,CAAC,cAAc,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAC7D,iBAAiB;AACjB,gBAAgB,CAAC,OAAO,CAAC,SAAS,IAAI,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AACpF,gBAAgB,CAAC,OAAO,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAC1E,gBAAgB,CAAC,OAAO,CAAC,SAAS;AAClC,oBAAoB,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACvE,gBAAgB,CAAC,OAAO,CAAC,WAAW;AACpC,oBAAoB,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;AACzE,gBAAgB,CAAC,gBAAgB;AACjC,oBAAoB,CAAC,OAAO,CAAC,gBAAgB;AAC7C,oBAAoB,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAC/D,gBAAgB,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC;AAC7C,oBAAoB,IAAI,EAAE,SAAS;AACnC,oBAAoB,UAAU,EAAE,SAAS,EAAE;AAC3C,iBAAiB,CAAC,CAAC;AACnB,aAAa;AACb,SAAS;AACT,QAAQ,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,EAAE,EAAE,GAAG,WAAW,CAAC,OAAO,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC;AAC/N,QAAQ,CAAC,OAAO,CAAC,WAAW,IAAI,aAAa,EAAE,CAAC;AAChD,KAAK,CAAC;AACN,IAAI,MAAM,gBAAgB,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,KAAK;AACrD,QAAQ,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAChC,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACjD,QAAQ,MAAM,iBAAiB,GAAG,yBAAyB,CAAC,GAAG,CAAC,CAAC;AACjE,QAAQ,IAAI,GAAG,KAAK,KAAK,CAAC,EAAE,CAAC,GAAG;AAChC,aAAa,KAAK,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACzE,aAAa,iBAAiB;AAC9B,gBAAgB,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC;AAC5C,gBAAgB,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE;AAC1E,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,KAAK,GAAG;AAChB,YAAY,EAAE,EAAE,iBAAiB;AACjC,kBAAkB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE;AACrE,wBAAwB,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,aAAa,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACrH,wBAAwB,GAAG;AAC3B,qBAAqB,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC;AAC7G,SAAS,CAAC;AACV,QAAQ,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAC5C,QAAQ,MAAM,YAAY,GAAG,mBAAmB,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AAC3E,QAAQ,IAAI,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC;AAC5D,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,YAAY,CAAC;AAC7E,cAAc,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;AAClE,YAAY,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;AAChG,SAAS;AACT,KAAK,CAAC;AACN,IAAI,MAAM,QAAQ,GAAGA,gBAAK,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,OAAO,GAAG,EAAE,KAAK;AAC/D,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACnD,QAAQ,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE;AACrC,YAAY,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,KAAK,IAAI,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,CAAC;AACnJ,SAAS,CAAC,CAAC;AACX,QAAQ,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC;AACpC,YAAY,GAAG,CAAC,uBAAuB,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC7D,QAAQ,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACzC,QAAQ,CAAC,KAAK,IAAI,mBAAmB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACrD,QAAQ,OAAO,iBAAiB;AAChC,cAAc,EAAE,IAAI,EAAE,IAAI,EAAE;AAC5B,cAAc;AACd,gBAAgB,IAAI;AACpB,gBAAgB,QAAQ,EAAE,YAAY;AACtC,gBAAgB,MAAM,EAAE,YAAY;AACpC,gBAAgB,GAAG,EAAE,CAAC,GAAG,KAAK;AAC9B,oBAAoB,IAAI,GAAG,EAAE;AAC7B,wBAAwB,gBAAgB,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;AAC7D,qBAAqB;AACrB,yBAAyB;AACzB,wBAAwB,MAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;AACvE,wBAAwB,MAAM,aAAa,GAAG,gBAAgB,IAAI,OAAO,CAAC,gBAAgB,CAAC;AAC3F,wBAAwB,IAAI,KAAK,CAAC,EAAE,EAAE;AACtC,4BAA4B,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;AACnD;AACA;AACA;AACA,4BAA4B,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;AAC7D,gCAAgC,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC;AACpE,6BAA6B;AAC7B,yBAAyB;AACzB,wBAAwB,IAAI,kBAAkB,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,CAAC;AAChF,8BAA8B,aAAa,IAAI,CAAC,qBAAqB,CAAC,OAAO;AAC7E,8BAA8B,aAAa,EAAE;AAC7C,4BAA4B,wBAAwB,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACvE,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa,CAAC;AACd,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAI,MAAM,YAAY,GAAGA,gBAAK,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,SAAS,KAAK,OAAO,CAAC,KAAK;AAChF,QAAQ,IAAI,CAAC,EAAE;AACf,YAAY,CAAC,CAAC,cAAc,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC;AACnD,YAAY,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;AACrC,SAAS;AACT,QAAQ,IAAI,iBAAiB,GAAG,IAAI,CAAC;AACrC,QAAQ,IAAI,WAAW,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC;AACrD,QAAQ,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC;AACzC,YAAY,YAAY,EAAE,IAAI;AAC9B,SAAS,CAAC,CAAC;AACX,QAAQ,IAAI;AACZ,YAAY,IAAI,WAAW,CAAC,OAAO,EAAE;AACrC,gBAAgB,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,WAAW,CAAC,OAAO,CAAC,WAAW,EAAE,UAAU,CAAC,OAAO,EAAE;AACtG,oBAAoB,YAAY;AAChC,oBAAoB,MAAM,EAAE,SAAS,CAAC,cAAc,CAAC,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC;AAChF,iBAAiB,CAAC,CAAC;AACnB,gBAAgB,YAAY,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AACrD,gBAAgB,WAAW,GAAG,MAAM,CAAC;AACrC,aAAa;AACb,iBAAiB;AACjB,gBAAgB,MAAM,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACtD,aAAa;AACb,YAAY,IAAI,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;AAC1D,gBAAgB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,EAAE;AAClG,gBAAgB,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC;AACjD,oBAAoB,MAAM,EAAE,EAAE;AAC9B,oBAAoB,YAAY,EAAE,IAAI;AACtC,iBAAiB,CAAC,CAAC;AACnB,gBAAgB,MAAM,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AAC9C,aAAa;AACb,iBAAiB;AACjB,gBAAgB,SAAS,KAAK,MAAM,SAAS,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AAC/E,gBAAgB,gBAAgB;AAChC,oBAAoB,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,cAAc,CAAC,OAAO,CAAC,CAAC;AAC5H,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,GAAG,EAAE;AACpB,YAAY,iBAAiB,GAAG,KAAK,CAAC;AACtC,YAAY,MAAM,GAAG,CAAC;AACtB,SAAS;AACT,gBAAgB;AAChB,YAAY,YAAY,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;AACpD,YAAY,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC;AAC7C,gBAAgB,WAAW,EAAE,IAAI;AACjC,gBAAgB,YAAY,EAAE,KAAK;AACnC,gBAAgB,kBAAkB,EAAE,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,iBAAiB;AACnG,gBAAgB,WAAW,EAAE,YAAY,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC;AACjE,gBAAgB,MAAM,EAAE,YAAY,CAAC,OAAO,CAAC,MAAM;AACnD,aAAa,CAAC,CAAC;AACf,SAAS;AACT,KAAK,EAAE,CAAC,gBAAgB,EAAE,0BAA0B,EAAE,YAAY,CAAC,CAAC,CAAC;AACrE,IAAI,MAAM,cAAc,GAAGA,gBAAK,CAAC,WAAW,CAAC,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,eAAe,EAAE,WAAW,EAAE,iBAAiB,EAAE,WAAW,EAAE,eAAe,GAAG,EAAE,MAAM,KAAK;AACpK,QAAQ,IAAI,CAAC,WAAW,EAAE;AAC1B,YAAY,cAAc,CAAC,OAAO,GAAG,EAAE,CAAC;AACxC,YAAY,uBAAuB,CAAC,OAAO,GAAG,EAAE,CAAC;AACjD,SAAS;AACT,QAAQ,cAAc,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;AAC3C,QAAQ,aAAa,CAAC,OAAO,GAAG,KAAK,CAAC;AACtC,QAAQ,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC;AACzC,YAAY,WAAW,EAAE,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC;AAC/E,YAAY,OAAO,EAAE,SAAS;AAC9B,kBAAkB,YAAY,CAAC,OAAO,CAAC,OAAO;AAC9C,kBAAkB,iBAAiB;AACnC,sBAAsB,SAAS,CAAC,MAAM,EAAE,gBAAgB,CAAC,OAAO,CAAC;AACjE,sBAAsB,KAAK;AAC3B,YAAY,WAAW,EAAE,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,GAAG,KAAK;AACnF,YAAY,OAAO,EAAE,WAAW;AAChC,kBAAkB,YAAY,CAAC,OAAO,CAAC,OAAO;AAC9C,kBAAkB,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC;AACzC,YAAY,WAAW,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,GAAG,EAAE;AAC1E,YAAY,aAAa,EAAE,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,GAAG,EAAE;AAChF,YAAY,MAAM,EAAE,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE;AACjE,YAAY,YAAY,EAAE,KAAK;AAC/B,YAAY,kBAAkB,EAAE,KAAK;AACrC,SAAS,CAAC,CAAC;AACX,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAI,MAAM,oBAAoB,GAAG,CAAC,KAAK,EAAE,IAAI,GAAG,EAAE,KAAK;AACvD,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACnD,QAAQ,IAAI,CAAC,KAAK,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;AAC5C,YAAY,IAAI,CAAC,KAAK;AACtB,iBAAiB,WAAW,CAAC,KAAK,CAAC;AACnC,qBAAqB,KAAK,KAAK,KAAK,YAAY,QAAQ,IAAI,KAAK,YAAY,IAAI,CAAC,CAAC,CAAC,EAAE;AACtF,gBAAgB,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE;AAC7C,oBAAoB,EAAE,EAAE;AACxB,wBAAwB,GAAG,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;AAC5C,wBAAwB,KAAK;AAC7B,wBAAwB,IAAI;AAC5B,qBAAqB;AACrB,iBAAiB,CAAC,CAAC;AACnB,aAAa;AACb,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AACzD,gBAAgB,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;AAC3D,oBAAoB,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACjF,iBAAiB;AACjB,gBAAgB,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;AACzC,oBAAoB,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;AACrF,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK,CAAC;AACN,IAAI,MAAM,KAAK,GAAG,CAAC,MAAM,EAAE,gBAAgB,GAAG,EAAE,KAAK;AACrD,QAAQ,MAAM,aAAa,GAAG,MAAM,IAAI,gBAAgB,CAAC,OAAO,CAAC;AACjE,QAAQ,IAAI,KAAK,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE;AACnD,YAAY,KAAK,MAAM,IAAI,IAAI,cAAc,CAAC,OAAO,EAAE;AACvD,gBAAgB,MAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAC3D,gBAAgB,IAAI,KAAK,IAAI,KAAK,CAAC,EAAE,EAAE;AACvC,oBAAoB,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC;AACjE,0BAA0B,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1C,0BAA0B,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC;AACvC,oBAAoB,IAAI;AACxB,wBAAwB,aAAa,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;AACpF,wBAAwB,MAAM;AAC9B,qBAAqB;AACrB,oBAAoB,OAAO,EAAE,EAAE,GAAG;AAClC,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB;AAC3C,aAAa,gBAAgB,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC;AAC1E,QAAQ,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE;AAC1C,YAAY,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC;AACnC,YAAY,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC;AAC9C,gBAAgB,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC;AACxD,aAAa,CAAC,CAAC;AACf,YAAY,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC;AACzC,gBAAgB,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC;AAC5D,aAAa,CAAC,CAAC;AACf,YAAY,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC;AAC9C,gBAAgB,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC;AACxD,gBAAgB,OAAO,EAAE,IAAI;AAC7B,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB;AAC3C,YAAY,CAAC,gBAAgB;AAC7B,YAAY,oBAAoB,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC;AACnE,QAAQ,cAAc,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;AACjD,KAAK,CAAC;AACN,IAAI,MAAM,QAAQ,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AAC3E,IAAIA,gBAAK,CAAC,SAAS,CAAC,MAAM;AAC1B,QAAQ,CAAC,gBAAgB,IAAI,oBAAoB,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;AAC5E,QAAQ,MAAM,qBAAqB,GAAG,mBAAmB,CAAC,OAAO,CAAC,SAAS,CAAC;AAC5E,YAAY,IAAI,CAAC,SAAS,EAAE;AAC5B,gBAAgB,IAAI,qBAAqB,CAAC,SAAS,EAAE,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;AACtF,oBAAoB,YAAY,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,CAAC;AAC7G,oBAAoB,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AAC1D,iBAAiB;AACjB,aAAa;AACb,SAAS,CAAC,CAAC;AACX,QAAQ,MAAM,yBAAyB,GAAG,oBAAoB,CAAC,OAAO,CAAC,SAAS,CAAC;AACjF,YAAY,IAAI,CAAC,KAAK,EAAE;AACxB,gBAAgB,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,IAAI,gBAAgB,CAAC,OAAO,CAAC,OAAO,EAAE;AACpF,oBAAoB,MAAM,MAAM,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC;AAC9D,oBAAoB,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;AAC1D,oBAAoB,aAAa,CAAC,MAAM,CAAC,CAAC;AAC1C,iBAAiB;AACjB,aAAa;AACb,SAAS,CAAC,CAAC;AACX,QAAQ,WAAW,CAAC,OAAO,IAAI,gBAAgB,CAAC,OAAO,CAAC,OAAO,IAAI,aAAa,EAAE,CAAC;AACnF,QAAQ,OAAO,MAAM;AACrB,YAAY,eAAe,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;AAClD,YAAY,qBAAqB,CAAC,WAAW,EAAE,CAAC;AAChD,YAAY,yBAAyB,CAAC,WAAW,EAAE,CAAC;AACpD,SAAS,CAAC;AACV,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAIA,gBAAK,CAAC,SAAS,CAAC,MAAM;AAC1B,QAAQ,MAAM,WAAW,GAAG,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACpF,QAAQ,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC;AACpC,QAAQ,KAAK,MAAM,IAAI,IAAI,wBAAwB,CAAC,OAAO,EAAE;AAC7D,YAAY,MAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACvD,YAAY,KAAK;AACjB,iBAAiB,KAAK,CAAC,EAAE,CAAC,IAAI;AAC9B,sBAAsB,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;AACtD,sBAAsB,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAChD,gBAAgB,UAAU,CAAC,IAAI,CAAC,CAAC;AACjC,SAAS;AACT,QAAQ,wBAAwB,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;AACrD,KAAK,CAAC,CAAC;AACP,IAAI,OAAO;AACX,QAAQ,OAAO,EAAEA,gBAAK,CAAC,OAAO,CAAC,OAAO;AACtC,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB,YAAY,qBAAqB;AACjC,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB,YAAY,mBAAmB;AAC/B,YAAY,oBAAoB;AAChC,YAAY,oBAAoB;AAChC,YAAY,eAAe;AAC3B,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB,YAAY,cAAc;AAC1B,YAAY,uBAAuB;AACnC,YAAY,kBAAkB;AAC9B,YAAY,gBAAgB;AAC5B,YAAY,YAAY;AACxB,YAAY,gBAAgB;AAC5B,YAAY,0BAA0B;AACtC,YAAY,UAAU;AACtB,YAAY,aAAa,EAAE,gBAAgB;AAC3C,SAAS,CAAC,EAAE,EAAE,CAAC;AACf,QAAQ,SAAS,EAAE,iBAAiB,CAAC,cAAc,EAAE,SAAS,EAAE,gBAAgB,CAAC;AACjF,QAAQ,OAAO;AACf,QAAQ,QAAQ;AAChB,QAAQ,YAAY;AACpB,QAAQ,KAAK,EAAEA,gBAAK,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC;AAC3C,QAAQ,QAAQ,EAAEA,gBAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,CAAC;AAClE,QAAQ,SAAS,EAAEA,gBAAK,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,CAAC;AACnD,QAAQ,KAAK,EAAEA,gBAAK,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC;AAC3C,QAAQ,WAAW,EAAEA,gBAAK,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE,CAAC;AACvD,QAAQ,UAAU,EAAEA,gBAAK,CAAC,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC;AACrD,QAAQ,QAAQ,EAAEA,gBAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;AACjD,QAAQ,QAAQ,EAAEA,gBAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;AACjD,KAAK,CAAC;AACN;;;;;;;;;;;;;;"}