{"ast":null,"code":"import _possibleConstructorReturn from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _wrapNativeSuper from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport _createForOfIteratorHelper from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _inherits from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _slicedToArray from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _awaitAsyncGenerator from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator\";\nimport _wrapAsyncGenerator from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator\";\nimport _asyncIterator from \"/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncIterator\";\n\nvar _DATA_MAPPING;\n\nimport { EJSON, ObjectId } from 'bson';\nimport * as bson from 'bson';\nexport { bson as BSON };\n\nvar __spreadArrays = undefined && undefined.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nvar BrowserInfo =\n/** @class */\nfunction () {\n  function BrowserInfo(name, version, os) {\n    this.name = name;\n    this.version = version;\n    this.os = os;\n    this.type = 'browser';\n  }\n\n  return BrowserInfo;\n}();\n\nvar NodeInfo =\n/** @class */\nfunction () {\n  function NodeInfo(version) {\n    this.version = version;\n    this.type = 'node';\n    this.name = 'node';\n    this.os = process.platform;\n  }\n\n  return NodeInfo;\n}();\n\nvar SearchBotDeviceInfo =\n/** @class */\nfunction () {\n  function SearchBotDeviceInfo(name, version, os, bot) {\n    this.name = name;\n    this.version = version;\n    this.os = os;\n    this.bot = bot;\n    this.type = 'bot-device';\n  }\n\n  return SearchBotDeviceInfo;\n}();\n\nvar BotInfo =\n/** @class */\nfunction () {\n  function BotInfo() {\n    this.type = 'bot';\n    this.bot = true; // NOTE: deprecated test name instead\n\n    this.name = 'bot';\n    this.version = null;\n    this.os = null;\n  }\n\n  return BotInfo;\n}();\n\nvar ReactNativeInfo =\n/** @class */\nfunction () {\n  function ReactNativeInfo() {\n    this.type = 'react-native';\n    this.name = 'react-native';\n    this.version = null;\n    this.os = null;\n  }\n\n  return ReactNativeInfo;\n}(); // tslint:disable-next-line:max-line-length\n\n\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [['aol', /AOLShield\\/([0-9\\._]+)/], ['edge', /Edge\\/([0-9\\._]+)/], ['edge-ios', /EdgiOS\\/([0-9\\._]+)/], ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/], ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/], ['samsung', /SamsungBrowser\\/([0-9\\.]+)/], ['silk', /\\bSilk\\/([0-9._-]+)\\b/], ['miui', /MiuiBrowser\\/([0-9\\.]+)$/], ['beaker', /BeakerBrowser\\/([0-9\\.]+)/], ['edge-chromium', /Edg\\/([0-9\\.]+)/], ['chromium-webview', /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/], ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/], ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/], ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/], ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/], ['fxios', /FxiOS\\/([0-9\\.]+)/], ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/], ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/], ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/], ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/], ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/], ['ie', /MSIE\\s(7\\.0)/], ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/], ['android', /Android\\s([0-9\\.]+)/], ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/], ['safari', /Version\\/([0-9\\._]+).*Safari/], ['facebook', /FBAV\\/([0-9\\.]+)/], ['instagram', /Instagram\\s([0-9\\.]+)/], ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/], ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/], ['searchbot', SEARCHBOX_UA_REGEX]];\nvar operatingSystemRules = [['iOS', /iP(hone|od|ad)/], ['Android OS', /Android/], ['BlackBerry OS', /BlackBerry|BB10/], ['Windows Mobile', /IEMobile/], ['Amazon OS', /Kindle/], ['Windows 3.11', /Win16/], ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/], ['Windows 98', /(Windows 98)|(Win98)/], ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/], ['Windows XP', /(Windows NT 5.1)|(Windows XP)/], ['Windows Server 2003', /(Windows NT 5.2)/], ['Windows Vista', /(Windows NT 6.0)/], ['Windows 7', /(Windows NT 6.1)/], ['Windows 8', /(Windows NT 6.2)/], ['Windows 8.1', /(Windows NT 6.3)/], ['Windows 10', /(Windows NT 10.0)/], ['Windows ME', /Windows ME/], ['Open BSD', /OpenBSD/], ['Sun OS', /SunOS/], ['Chrome OS', /CrOS/], ['Linux', /(Linux)|(X11)/], ['Mac OS', /(Mac_PowerPC)|(Macintosh)/], ['QNX', /QNX/], ['BeOS', /BeOS/], ['OS/2', /OS\\/2/]];\n\nfunction detect(userAgent) {\n  if (!!userAgent) {\n    return parseUserAgent(userAgent);\n  }\n\n  if (typeof document === 'undefined' && typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return new ReactNativeInfo();\n  }\n\n  if (typeof navigator !== 'undefined') {\n    return parseUserAgent(navigator.userAgent);\n  }\n\n  return getNodeVersion();\n}\n\nfunction matchUserAgent(ua) {\n  // opted for using reduce here rather than Array#first with a regex.test call\n  // this is primarily because using the reduce we only perform the regex\n  // execution once rather than once for the test and for the exec again below\n  // probably something that needs to be benchmarked though\n  return ua !== '' && userAgentRules.reduce(function (matched, _a) {\n    var browser = _a[0],\n        regex = _a[1];\n\n    if (matched) {\n      return matched;\n    }\n\n    var uaMatch = regex.exec(ua);\n    return !!uaMatch && [browser, uaMatch];\n  }, false);\n}\n\nfunction parseUserAgent(ua) {\n  var matchedRule = matchUserAgent(ua);\n\n  if (!matchedRule) {\n    return null;\n  }\n\n  var name = matchedRule[0],\n      match = matchedRule[1];\n\n  if (name === 'searchbot') {\n    return new BotInfo();\n  }\n\n  var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);\n\n  if (versionParts) {\n    if (versionParts.length < REQUIRED_VERSION_PARTS) {\n      versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));\n    }\n  } else {\n    versionParts = [];\n  }\n\n  var version = versionParts.join('.');\n  var os = detectOS(ua);\n  var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n\n  if (searchBotMatch && searchBotMatch[1]) {\n    return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n  }\n\n  return new BrowserInfo(name, version, os);\n}\n\nfunction detectOS(ua) {\n  for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n    var _a = operatingSystemRules[ii],\n        os = _a[0],\n        regex = _a[1];\n    var match = regex.exec(ua);\n\n    if (match) {\n      return os;\n    }\n  }\n\n  return null;\n}\n\nfunction getNodeVersion() {\n  var isNode = typeof process !== 'undefined' && process.version;\n  return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\n\nfunction createVersionParts(count) {\n  var output = [];\n\n  for (var ii = 0; ii < count; ii++) {\n    output.push('0');\n  }\n\n  return output;\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n\nvar DefaultNetworkTransport = /*#__PURE__*/function () {\n  function DefaultNetworkTransport() {\n    _classCallCheck(this, DefaultNetworkTransport);\n\n    if (!DefaultNetworkTransport.fetch) {\n      throw new Error(\"DefaultNetworkTransport.fetch must be set before it's used\");\n    }\n\n    if (!DefaultNetworkTransport.AbortController) {\n      throw new Error(\"DefaultNetworkTransport.AbortController must be set before it's used\");\n    }\n  }\n\n  _createClass(DefaultNetworkTransport, [{\n    key: \"fetchWithCallbacks\",\n    value: function fetchWithCallbacks(request, handler) {\n      // tslint:disable-next-line: no-console\n      this.fetch(request).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n          var decodedBody, responseHeaders;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return response.text();\n\n                case 2:\n                  decodedBody = _context.sent;\n                  // Pull out the headers of the response\n                  responseHeaders = {};\n                  response.headers.forEach(function (value, key) {\n                    responseHeaders[key] = value;\n                  });\n                  return _context.abrupt(\"return\", {\n                    statusCode: response.status,\n                    headers: responseHeaders,\n                    body: decodedBody\n                  });\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).then(function (r) {\n        return handler.onSuccess(r);\n      }).catch(function (e) {\n        return handler.onError(e);\n      });\n    }\n  }, {\n    key: \"fetch\",\n    value: function () {\n      var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(request) {\n        var timeoutMs, url, rest, _this$createTimeoutSi, signal, cancelTimeout;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                timeoutMs = request.timeoutMs, url = request.url, rest = _objectWithoutProperties(request, [\"timeoutMs\", \"url\"]);\n                _this$createTimeoutSi = this.createTimeoutSignal(timeoutMs), signal = _this$createTimeoutSi.signal, cancelTimeout = _this$createTimeoutSi.cancelTimeout;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return DefaultNetworkTransport.fetch(url, _objectSpread({\n                  signal: signal\n                }, rest));\n\n              case 5:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 6:\n                _context2.prev = 6;\n                // Whatever happens, cancel any timeout\n                cancelTimeout();\n                return _context2.finish(6);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2,, 6, 9]]);\n      }));\n\n      function fetch(_x2) {\n        return _fetch.apply(this, arguments);\n      }\n\n      return fetch;\n    }()\n  }, {\n    key: \"createTimeoutSignal\",\n    value: function createTimeoutSignal(timeoutMs) {\n      if (typeof timeoutMs === \"number\") {\n        var controller = new DefaultNetworkTransport.AbortController(); // Call abort after a specific number of milliseconds\n\n        var timeout = setTimeout(function () {\n          controller.abort();\n        }, timeoutMs);\n        return {\n          signal: controller.signal,\n          cancelTimeout: function cancelTimeout() {\n            clearTimeout(timeout);\n          }\n        };\n      } else {\n        return {\n          signal: undefined,\n          cancelTimeout: function cancelTimeout() {\n            /* No-op */\n          }\n        };\n      }\n    }\n  }]);\n\n  return DefaultNetworkTransport;\n}();\n\nDefaultNetworkTransport.DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/json\"\n}; ////////////////////////////////////////////////////////////////////////////\n\nDefaultNetworkTransport.fetch = window.fetch.bind(window);\nDefaultNetworkTransport.AbortController = window.AbortController;\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function require(path, base) {\n      return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n    }\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar base64 = createCommonjsModule(function (module, exports) {\n  (function (global, factory) {\n    module.exports = factory(global);\n  })(typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : commonjsGlobal, function (global) {\n    // existing version for noConflict()\n    global = global || {};\n    var _Base64 = global.Base64;\n    var version = \"2.6.4\"; // constants\n\n    var b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n    var b64tab = function (bin) {\n      var t = {};\n\n      for (var i = 0, l = bin.length; i < l; i++) {\n        t[bin.charAt(i)] = i;\n      }\n\n      return t;\n    }(b64chars);\n\n    var fromCharCode = String.fromCharCode; // encoder stuff\n\n    var cb_utob = function cb_utob(c) {\n      if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c : cc < 0x800 ? fromCharCode(0xc0 | cc >>> 6) + fromCharCode(0x80 | cc & 0x3f) : fromCharCode(0xe0 | cc >>> 12 & 0x0f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);\n      } else {\n        var cc = 0x10000 + (c.charCodeAt(0) - 0xD800) * 0x400 + (c.charCodeAt(1) - 0xDC00);\n        return fromCharCode(0xf0 | cc >>> 18 & 0x07) + fromCharCode(0x80 | cc >>> 12 & 0x3f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);\n      }\n    };\n\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n\n    var utob = function utob(u) {\n      return u.replace(re_utob, cb_utob);\n    };\n\n    var cb_encode = function cb_encode(ccc) {\n      var padlen = [0, 2, 1][ccc.length % 3],\n          ord = ccc.charCodeAt(0) << 16 | (ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8 | (ccc.length > 2 ? ccc.charCodeAt(2) : 0),\n          chars = [b64chars.charAt(ord >>> 18), b64chars.charAt(ord >>> 12 & 63), padlen >= 2 ? '=' : b64chars.charAt(ord >>> 6 & 63), padlen >= 1 ? '=' : b64chars.charAt(ord & 63)];\n      return chars.join('');\n    };\n\n    var btoa = global.btoa && typeof global.btoa == 'function' ? function (b) {\n      return global.btoa(b);\n    } : function (b) {\n      if (b.match(/[^\\x00-\\xFF]/)) throw new RangeError('The string contains invalid characters.');\n      return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n\n    var _encode = function _encode(u) {\n      return btoa(utob(String(u)));\n    };\n\n    var mkUriSafe = function mkUriSafe(b64) {\n      return b64.replace(/[+\\/]/g, function (m0) {\n        return m0 == '+' ? '-' : '_';\n      }).replace(/=/g, '');\n    };\n\n    var encode = function encode(u, urisafe) {\n      return urisafe ? mkUriSafe(_encode(u)) : _encode(u);\n    };\n\n    var encodeURI = function encodeURI(u) {\n      return encode(u, true);\n    };\n\n    var fromUint8Array;\n    if (global.Uint8Array) fromUint8Array = function fromUint8Array(a, urisafe) {\n      // return btoa(fromCharCode.apply(null, a));\n      var b64 = '';\n\n      for (var i = 0, l = a.length; i < l; i += 3) {\n        var a0 = a[i],\n            a1 = a[i + 1],\n            a2 = a[i + 2];\n        var ord = a0 << 16 | a1 << 8 | a2;\n        b64 += b64chars.charAt(ord >>> 18) + b64chars.charAt(ord >>> 12 & 63) + (typeof a1 != 'undefined' ? b64chars.charAt(ord >>> 6 & 63) : '=') + (typeof a2 != 'undefined' ? b64chars.charAt(ord & 63) : '=');\n      }\n\n      return urisafe ? mkUriSafe(b64) : b64;\n    }; // decoder stuff\n\n    var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n\n    var cb_btou = function cb_btou(cccc) {\n      switch (cccc.length) {\n        case 4:\n          var cp = (0x07 & cccc.charCodeAt(0)) << 18 | (0x3f & cccc.charCodeAt(1)) << 12 | (0x3f & cccc.charCodeAt(2)) << 6 | 0x3f & cccc.charCodeAt(3),\n              offset = cp - 0x10000;\n          return fromCharCode((offset >>> 10) + 0xD800) + fromCharCode((offset & 0x3FF) + 0xDC00);\n\n        case 3:\n          return fromCharCode((0x0f & cccc.charCodeAt(0)) << 12 | (0x3f & cccc.charCodeAt(1)) << 6 | 0x3f & cccc.charCodeAt(2));\n\n        default:\n          return fromCharCode((0x1f & cccc.charCodeAt(0)) << 6 | 0x3f & cccc.charCodeAt(1));\n      }\n    };\n\n    var btou = function btou(b) {\n      return b.replace(re_btou, cb_btou);\n    };\n\n    var cb_decode = function cb_decode(cccc) {\n      var len = cccc.length,\n          padlen = len % 4,\n          n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0) | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0) | (len > 2 ? b64tab[cccc.charAt(2)] << 6 : 0) | (len > 3 ? b64tab[cccc.charAt(3)] : 0),\n          chars = [fromCharCode(n >>> 16), fromCharCode(n >>> 8 & 0xff), fromCharCode(n & 0xff)];\n      chars.length -= [0, 0, 2, 1][padlen];\n      return chars.join('');\n    };\n\n    var _atob = global.atob && typeof global.atob == 'function' ? function (a) {\n      return global.atob(a);\n    } : function (a) {\n      return a.replace(/\\S{1,4}/g, cb_decode);\n    };\n\n    var atob = function atob(a) {\n      return _atob(String(a).replace(/[^A-Za-z0-9\\+\\/]/g, ''));\n    };\n\n    var _decode = function _decode(a) {\n      return btou(_atob(a));\n    };\n\n    var _fromURI = function _fromURI(a) {\n      return String(a).replace(/[-_]/g, function (m0) {\n        return m0 == '-' ? '+' : '/';\n      }).replace(/[^A-Za-z0-9\\+\\/]/g, '');\n    };\n\n    var decode = function decode(a) {\n      return _decode(_fromURI(a));\n    };\n\n    var toUint8Array;\n    if (global.Uint8Array) toUint8Array = function toUint8Array(a) {\n      return Uint8Array.from(atob(_fromURI(a)), function (c) {\n        return c.charCodeAt(0);\n      });\n    };\n\n    var noConflict = function noConflict() {\n      var Base64 = global.Base64;\n      global.Base64 = _Base64;\n      return Base64;\n    }; // export Base64\n\n\n    global.Base64 = {\n      VERSION: version,\n      atob: atob,\n      btoa: btoa,\n      fromBase64: decode,\n      toBase64: encode,\n      utob: utob,\n      encode: encode,\n      encodeURI: encodeURI,\n      btou: btou,\n      decode: decode,\n      noConflict: noConflict,\n      fromUint8Array: fromUint8Array,\n      toUint8Array: toUint8Array\n    }; // if ES5 is available, make Base64.extendString() available\n\n    if (typeof Object.defineProperty === 'function') {\n      var noEnum = function noEnum(v) {\n        return {\n          value: v,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        };\n      };\n\n      global.Base64.extendString = function () {\n        Object.defineProperty(String.prototype, 'fromBase64', noEnum(function () {\n          return decode(this);\n        }));\n        Object.defineProperty(String.prototype, 'toBase64', noEnum(function (urisafe) {\n          return encode(this, urisafe);\n        }));\n        Object.defineProperty(String.prototype, 'toBase64URI', noEnum(function () {\n          return encode(this, true);\n        }));\n      };\n    } //\n    // export Base64 to the namespace\n    //\n\n\n    if (global['Meteor']) {\n      // Meteor.js\n      Base64 = global.Base64;\n    } // module.exports and AMD are mutually exclusive.\n    // module.exports has precedence.\n\n\n    if (module.exports) {\n      module.exports.Base64 = global.Base64;\n    } // that's it!\n\n\n    return {\n      Base64: global.Base64\n    };\n  });\n}); ////////////////////////////////////////////////////////////////////////////\n\nvar SERIALIZATION_OPTIONS = {\n  relaxed: false\n};\n/**\n * Serialize an object containing BSON types into extended-JSON.\n *\n * @param obj The object containing BSON types.\n * @returns The document in extended-JSON format.\n */\n\nfunction serialize(obj) {\n  return EJSON.serialize(obj, SERIALIZATION_OPTIONS);\n}\n/**\n * De-serialize an object or an array of object from extended-JSON into an object or an array of object with BSON types.\n *\n * @param obj The object or array of objects in extended-JSON format.\n * @returns The object or array of objects with inflated BSON types.\n */\n\n\nfunction deserialize(obj) {\n  if (Array.isArray(obj)) {\n    return obj.map(function (doc) {\n      return EJSON.deserialize(doc);\n    });\n  } else {\n    return EJSON.deserialize(obj);\n  }\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * The type of a user.\n */\n\n\nvar UserType;\n\n(function (UserType) {\n  /**\n   * A normal end-user created this user.\n   */\n  UserType[\"Normal\"] = \"normal\";\n  /**\n   * The user was created by the server.\n   */\n\n  UserType[\"Server\"] = \"server\";\n})(UserType || (UserType = {}));\n/** @ignore */\n\n\nvar DataKey;\n\n(function (DataKey) {\n  /** @ignore */\n  DataKey[\"NAME\"] = \"name\";\n  /** @ignore */\n\n  DataKey[\"EMAIL\"] = \"email\";\n  /** @ignore */\n\n  DataKey[\"PICTURE\"] = \"picture\";\n  /** @ignore */\n\n  DataKey[\"FIRST_NAME\"] = \"first_name\";\n  /** @ignore */\n\n  DataKey[\"LAST_NAME\"] = \"last_name\";\n  /** @ignore */\n\n  DataKey[\"GENDER\"] = \"gender\";\n  /** @ignore */\n\n  DataKey[\"BIRTHDAY\"] = \"birthday\";\n  /** @ignore */\n\n  DataKey[\"MIN_AGE\"] = \"min_age\";\n  /** @ignore */\n\n  DataKey[\"MAX_AGE\"] = \"max_age\";\n})(DataKey || (DataKey = {}));\n\nvar DATA_MAPPING = (_DATA_MAPPING = {}, _defineProperty(_DATA_MAPPING, DataKey.NAME, \"name\"), _defineProperty(_DATA_MAPPING, DataKey.EMAIL, \"email\"), _defineProperty(_DATA_MAPPING, DataKey.PICTURE, \"pictureUrl\"), _defineProperty(_DATA_MAPPING, DataKey.FIRST_NAME, \"firstName\"), _defineProperty(_DATA_MAPPING, DataKey.LAST_NAME, \"lastName\"), _defineProperty(_DATA_MAPPING, DataKey.GENDER, \"gender\"), _defineProperty(_DATA_MAPPING, DataKey.BIRTHDAY, \"birthday\"), _defineProperty(_DATA_MAPPING, DataKey.MIN_AGE, \"minAge\"), _defineProperty(_DATA_MAPPING, DataKey.MAX_AGE, \"maxAge\"), _DATA_MAPPING);\n/** @inheritdoc */\n\nvar UserProfile =\n/**\n * @param response The response of a call fetching the users profile.\n */\nfunction UserProfile(response) {\n  _classCallCheck(this, UserProfile);\n\n  /** @ignore */\n  this.type = UserType.Normal;\n  /** @ignore */\n\n  this.identities = [];\n\n  if (typeof response === \"object\" && response !== null) {\n    var type = response.type,\n        identities = response.identities,\n        data = response.data;\n\n    if (typeof type === \"string\") {\n      this.type = type;\n    } else {\n      throw new Error(\"Expected 'type' in the response body\");\n    }\n\n    if (Array.isArray(identities)) {\n      this.identities = identities.map(function (identity) {\n        return {\n          id: identity.id,\n          providerType: identity[\"provider_type\"]\n        };\n      });\n    } else {\n      throw new Error(\"Expected 'identities' in the response body\");\n    }\n\n    if (typeof data === \"object\" && data !== null) {\n      var mappedData = Object.fromEntries(Object.entries(data).map(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n            key = _ref3[0],\n            value = _ref3[1];\n\n        if (key in DATA_MAPPING) {\n          // Translate any known data field to its JS idiomatic alias\n          return [DATA_MAPPING[key], value];\n        } else {\n          // Pass through any other values\n          return [key, value];\n        }\n      })); // We can use `any` since we trust the user supplies the correct type\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      this.data = deserialize(mappedData);\n    } else {\n      throw new Error(\"Expected 'data' in the response body\");\n    }\n  } else {\n    this.data = {};\n  }\n}; ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * A `Storage` which will prefix a key part to every operation.\n */\n\n\nvar PrefixedStorage = /*#__PURE__*/function () {\n  /**\n   * Construct a `Storage` which will prefix a key part to every operation.\n   *\n   * @param storage The underlying storage to use for operations.\n   * @param keyPart The part of the key to prefix when performing operations.\n   */\n  function PrefixedStorage(storage, keyPart) {\n    _classCallCheck(this, PrefixedStorage);\n\n    this.storage = storage;\n    this.keyPart = keyPart;\n  }\n  /** @inheritdoc */\n\n\n  _createClass(PrefixedStorage, [{\n    key: \"get\",\n    value: function get(key) {\n      return this.storage.get(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      return this.storage.set(this.keyPart + PrefixedStorage.PART_SEPARATOR + key, value);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      return this.storage.remove(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"prefix\",\n    value: function prefix(keyPart) {\n      return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      return this.storage.clear(this.keyPart + PrefixedStorage.PART_SEPARATOR + prefix);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"addListener\",\n    value: function addListener(listener) {\n      return this.storage.addListener(listener);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(listener) {\n      return this.storage.addListener(listener);\n    }\n  }]);\n\n  return PrefixedStorage;\n}();\n/**\n * The string separating two parts.\n */\n\n\nPrefixedStorage.PART_SEPARATOR = \":\"; ////////////////////////////////////////////////////////////////////////////\n\nvar ACCESS_TOKEN_STORAGE_KEY = \"accessToken\";\nvar REFRESH_TOKEN_STORAGE_KEY = \"refreshToken\";\nvar PROFILE_STORAGE_KEY = \"profile\";\nvar PROVIDER_TYPE_STORAGE_KEY = \"providerType\";\n/**\n * Storage specific to the app.\n */\n\nvar UserStorage = /*#__PURE__*/function (_PrefixedStorage) {\n  _inherits(UserStorage, _PrefixedStorage);\n\n  var _super = _createSuper(UserStorage);\n\n  /**\n   * Construct a storage for a `User`.\n   *\n   * @param storage The underlying storage to wrap.\n   * @param userId The id of the user.\n   */\n  function UserStorage(storage, userId) {\n    _classCallCheck(this, UserStorage);\n\n    return _super.call(this, storage, \"user(\".concat(userId, \")\"));\n  }\n  /**\n   * Get the access token from storage.\n   *\n   * @returns Access token (null if unknown).\n   */\n\n\n  _createClass(UserStorage, [{\n    key: \"accessToken\",\n    get: function get() {\n      return this.get(ACCESS_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the access token in storage.\n     *\n     * @param value Access token (null if unknown).\n     */\n    ,\n    set: function set(value) {\n      if (value === null) {\n        this.remove(ACCESS_TOKEN_STORAGE_KEY);\n      } else {\n        this.set(ACCESS_TOKEN_STORAGE_KEY, value);\n      }\n    }\n    /**\n     * Get the refresh token from storage.\n     *\n     * @returns Refresh token (null if unknown and user is logged out).\n     */\n\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      return this.get(REFRESH_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the refresh token in storage.\n     *\n     * @param value Refresh token (null if unknown and user is logged out).\n     */\n    ,\n    set: function set(value) {\n      if (value === null) {\n        this.remove(REFRESH_TOKEN_STORAGE_KEY);\n      } else {\n        this.set(REFRESH_TOKEN_STORAGE_KEY, value);\n      }\n    }\n    /**\n     * Get the user profile from storage.\n     *\n     * @returns User profile (undefined if its unknown).\n     */\n\n  }, {\n    key: \"profile\",\n    get: function get() {\n      var value = this.get(PROFILE_STORAGE_KEY);\n\n      if (value) {\n        var profile = new UserProfile(); // Patch in the values\n\n        Object.assign(profile, JSON.parse(value));\n        return profile;\n      }\n    }\n    /**\n     * Set the user profile in storage.\n     *\n     * @param value User profile (undefined if its unknown).\n     */\n    ,\n    set: function set(value) {\n      if (value) {\n        this.set(PROFILE_STORAGE_KEY, JSON.stringify(value));\n      } else {\n        this.remove(PROFILE_STORAGE_KEY);\n      }\n    }\n    /**\n     * Get the type of authentication provider used to authenticate\n     *\n     * @returns User profile (undefined if its unknown).\n     */\n\n  }, {\n    key: \"providerType\",\n    get: function get() {\n      var value = this.get(PROVIDER_TYPE_STORAGE_KEY);\n\n      if (value) {\n        return value;\n      }\n    }\n    /**\n     * Set the type of authentication provider used to authenticate\n     *\n     * @param value Type of authentication provider.\n     */\n    ,\n    set: function set(value) {\n      if (value) {\n        this.set(PROVIDER_TYPE_STORAGE_KEY, value);\n      } else {\n        this.remove(PROVIDER_TYPE_STORAGE_KEY);\n      }\n    }\n  }]);\n\n  return UserStorage;\n}(PrefixedStorage); ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * @param obj The object to remove keys (and undefined values from)\n * @returns A new object without the keys where the value is undefined.\n */\n\n\nfunction removeKeysWithUndefinedValues(obj) {\n  return Object.fromEntries(Object.entries(obj).filter(function (entry) {\n    return typeof entry[1] !== \"undefined\";\n  }));\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Generate a random sequence of characters.\n *\n * @param length The length of the string.\n * @param alphabet The alphabet of characters to pick from.\n * @returns A string of characters picked randomly from `alphabet`.\n */\n\n\nfunction generateRandomString(length, alphabet) {\n  var result = \"\";\n\n  for (var i = 0; i < length; i++) {\n    result += alphabet[Math.floor(Math.random() * alphabet.length)];\n  }\n\n  return result;\n}\n/**\n * Encode an object mapping from string to string, into a query string to be appended a URL.\n *\n * @param params The parameters to include in the string.\n * @param prefixed Should the \"?\" prefix be added if values exists?\n * @returns A URL encoded representation of the parameters (omitting a \"?\" prefix).\n */\n\n\nfunction encodeQueryString(params) {\n  var prefixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  // Filter out undefined values\n  var cleanedParams = removeKeysWithUndefinedValues(params); // Determine if a prefixed \"?\" is appropreate\n\n  var prefix = prefixed && Object.keys(cleanedParams).length > 0 ? \"?\" : \"\"; // Transform keys and values to a query string\n\n  return prefix + Object.entries(cleanedParams).map(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n        k = _ref5[0],\n        v = _ref5[1];\n\n    return \"\".concat(k, \"=\").concat(encodeURIComponent(v));\n  }).join(\"&\");\n}\n/**\n * Decodes a query string into an object.\n *\n * @param str The query string to decode.\n * @returns The decoded query string.\n */\n\n\nfunction decodeQueryString(str) {\n  var cleanStr = str[0] === \"?\" ? str.substr(1) : str;\n  return Object.fromEntries(cleanStr.split(\"&\").filter(function (s) {\n    return s.length > 0;\n  }).map(function (kvp) {\n    return kvp.split(\"=\");\n  }).map(function (_ref6) {\n    var _ref7 = _slicedToArray(_ref6, 2),\n        k = _ref7[0],\n        v = _ref7[1];\n\n    return [k, decodeURIComponent(v)];\n  }));\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * A list of names that functions cannot have to be callable through the functions proxy.\n */\n\n\nvar RESERVED_NAMES = [\"inspect\", \"callFunction\", \"callFunctionStreaming\"].concat(_toConsumableArray(Object.getOwnPropertyNames(Object.prototype)));\n/**\n * Remove the key for any fields with undefined values.\n *\n * @param args The arguments to clean.\n * @returns The cleaned arguments.\n */\n\nfunction cleanArgs(args) {\n  var _iterator2 = _createForOfIteratorHelper(args),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var arg = _step2.value;\n\n      if (typeof arg === \"object\") {\n        for (var _i = 0, _Object$entries = Object.entries(arg); _i < _Object$entries.length; _i++) {\n          var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n              key = _Object$entries$_i[0],\n              value = _Object$entries$_i[1];\n\n          if (value === undefined) {\n            delete arg[key];\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return args;\n}\n/**\n * Remove keys for any undefined values and serialize to EJSON.\n *\n * @param args The arguments to clean and serialize.\n * @returns The cleaned and serialized arguments.\n */\n\n\nfunction cleanArgsAndSerialize(args) {\n  var cleaned = cleanArgs(args);\n  return cleaned.map(function (arg) {\n    return typeof arg === \"object\" ? serialize(arg) : arg;\n  });\n}\n/**\n * Defines how functions are called.\n */\n\n\nvar FunctionsFactory = /*#__PURE__*/function () {\n  /**\n   * @param fetcher The underlying fetcher to use when sending requests.\n   * @param config Additional configuration parameters.\n   */\n  function FunctionsFactory(fetcher) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, FunctionsFactory);\n\n    this.fetcher = fetcher;\n    this.serviceName = config.serviceName;\n    this.argsTransformation = config.argsTransformation || cleanArgsAndSerialize;\n  }\n  /**\n   * Create a factory of functions, wrapped in a Proxy that returns bound copies of `callFunction` on any property.\n   *\n   * @param fetcher The underlying fetcher to use when requesting.\n   * @param config Additional configuration parameters.\n   * @returns The newly created factory of functions.\n   */\n\n\n  _createClass(FunctionsFactory, [{\n    key: \"callFunction\",\n    value:\n    /**\n     * Call a remote function by it's name.\n     *\n     * @param name Name of the remote function.\n     * @param args Arguments to pass to the remote function.\n     * @returns A promise of the value returned when executing the remote function.\n     */\n    function () {\n      var _callFunction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(name) {\n        var _len,\n            args,\n            _key,\n            body,\n            appRoute,\n            _args3 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                for (_len = _args3.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                  args[_key - 1] = _args3[_key];\n                }\n\n                // See https://github.com/mongodb/stitch-js-sdk/blob/master/packages/core/sdk/src/services/internal/CoreStitchServiceClientImpl.ts\n                body = {\n                  name: name,\n                  arguments: this.argsTransformation ? this.argsTransformation(args) : args\n                };\n\n                if (this.serviceName) {\n                  body.service = this.serviceName;\n                }\n\n                appRoute = this.fetcher.appRoute;\n                return _context3.abrupt(\"return\", this.fetcher.fetchJSON({\n                  method: \"POST\",\n                  path: appRoute.functionsCall().path,\n                  body: body\n                }));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function callFunction(_x3) {\n        return _callFunction.apply(this, arguments);\n      }\n\n      return callFunction;\n    }()\n    /**\n     * Call a remote function by it's name.\n     *\n     * @param name Name of the remote function.\n     * @param args Arguments to pass to the remote function.\n     * @returns A promise of the value returned when executing the remote function.\n     */\n\n  }, {\n    key: \"callFunctionStreaming\",\n    value: function callFunctionStreaming(name) {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      var body = {\n        name: name,\n        arguments: this.argsTransformation ? this.argsTransformation(args) : args\n      };\n\n      if (this.serviceName) {\n        body.service = this.serviceName;\n      }\n\n      var appRoute = this.fetcher.appRoute;\n      var qs = encodeQueryString(_defineProperty({}, \"baas_request\", Base64.encode(JSON.stringify(body))));\n      return this.fetcher.fetchStream({\n        method: \"GET\",\n        path: appRoute.functionsCall().path + qs\n      });\n    }\n  }], [{\n    key: \"create\",\n    value: function create(fetcher) {\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // Create a proxy, wrapping a simple object returning methods that calls functions\n      // TODO: Lazily fetch available functions and return these from the ownKeys() trap\n      var factory = new FunctionsFactory(fetcher, config); // Wrap the factory in a proxy that calls the internal call method\n\n      return new Proxy(factory, {\n        get: function get(target, p, receiver) {\n          if (typeof p === \"string\" && RESERVED_NAMES.indexOf(p) === -1) {\n            return target.callFunction.bind(target, p);\n          } else {\n            var prop = Reflect.get(target, p, receiver);\n            return typeof prop === \"function\" ? prop.bind(target) : prop;\n          }\n        }\n      });\n    }\n  }]);\n\n  return FunctionsFactory;\n}(); ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/** @inheritdoc */\n\n\nvar EmailPasswordAuth = /*#__PURE__*/function () {\n  /**\n   * Construct an interface to the email / password authentication provider.\n   *\n   * @param fetcher The underlying fetcher used to request the services.\n   * @param providerName Optional custom name of the authentication provider.\n   */\n  function EmailPasswordAuth(fetcher) {\n    var providerName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"local-userpass\";\n\n    _classCallCheck(this, EmailPasswordAuth);\n\n    this.fetcher = fetcher;\n    this.providerName = providerName;\n  }\n  /** @inheritdoc */\n\n\n  _createClass(EmailPasswordAuth, [{\n    key: \"registerUser\",\n    value: function () {\n      var _registerUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(email, password) {\n        var appRoute;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                appRoute = this.fetcher.appRoute;\n                _context4.next = 3;\n                return this.fetcher.fetchJSON({\n                  method: \"POST\",\n                  path: appRoute.emailPasswordAuth(this.providerName).register().path,\n                  body: {\n                    email: email,\n                    password: password\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function registerUser(_x4, _x5) {\n        return _registerUser.apply(this, arguments);\n      }\n\n      return registerUser;\n    }()\n    /** @inheritdoc */\n\n  }, {\n    key: \"confirmUser\",\n    value: function () {\n      var _confirmUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(token, tokenId) {\n        var appRoute;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                appRoute = this.fetcher.appRoute;\n                _context5.next = 3;\n                return this.fetcher.fetchJSON({\n                  method: \"POST\",\n                  path: appRoute.emailPasswordAuth(this.providerName).confirm().path,\n                  body: {\n                    token: token,\n                    tokenId: tokenId\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function confirmUser(_x6, _x7) {\n        return _confirmUser.apply(this, arguments);\n      }\n\n      return confirmUser;\n    }()\n    /** @inheritdoc */\n\n  }, {\n    key: \"resendConfirmationEmail\",\n    value: function () {\n      var _resendConfirmationEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(email) {\n        var appRoute;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                appRoute = this.fetcher.appRoute;\n                _context6.next = 3;\n                return this.fetcher.fetchJSON({\n                  method: \"POST\",\n                  path: appRoute.emailPasswordAuth(this.providerName).confirmSend().path,\n                  body: {\n                    email: email\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function resendConfirmationEmail(_x8) {\n        return _resendConfirmationEmail.apply(this, arguments);\n      }\n\n      return resendConfirmationEmail;\n    }()\n    /** @inheritdoc */\n\n  }, {\n    key: \"resetPassword\",\n    value: function () {\n      var _resetPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(token, tokenId, password) {\n        var appRoute;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                appRoute = this.fetcher.appRoute;\n                _context7.next = 3;\n                return this.fetcher.fetchJSON({\n                  method: \"POST\",\n                  path: appRoute.emailPasswordAuth(this.providerName).reset().path,\n                  body: {\n                    token: token,\n                    tokenId: tokenId,\n                    password: password\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function resetPassword(_x9, _x10, _x11) {\n        return _resetPassword.apply(this, arguments);\n      }\n\n      return resetPassword;\n    }()\n    /** @inheritdoc */\n\n  }, {\n    key: \"sendResetPasswordEmail\",\n    value: function () {\n      var _sendResetPasswordEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(email) {\n        var appRoute;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                appRoute = this.fetcher.appRoute;\n                _context8.next = 3;\n                return this.fetcher.fetchJSON({\n                  method: \"POST\",\n                  path: appRoute.emailPasswordAuth(this.providerName).resetSend().path,\n                  body: {\n                    email: email\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function sendResetPasswordEmail(_x12) {\n        return _sendResetPasswordEmail.apply(this, arguments);\n      }\n\n      return sendResetPasswordEmail;\n    }()\n    /** @inheritdoc */\n\n  }, {\n    key: \"callResetPasswordFunction\",\n    value: function () {\n      var _callResetPasswordFunction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(email, password) {\n        var appRoute,\n            _len3,\n            args,\n            _key3,\n            _args9 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                appRoute = this.fetcher.appRoute;\n\n                for (_len3 = _args9.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n                  args[_key3 - 2] = _args9[_key3];\n                }\n\n                _context9.next = 4;\n                return this.fetcher.fetchJSON({\n                  method: \"POST\",\n                  path: appRoute.emailPasswordAuth(this.providerName).resetCall().path,\n                  body: {\n                    email: email,\n                    password: password,\n                    arguments: args\n                  }\n                });\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function callResetPasswordFunction(_x13, _x14) {\n        return _callResetPasswordFunction.apply(this, arguments);\n      }\n\n      return callResetPasswordFunction;\n    }()\n  }]);\n\n  return EmailPasswordAuth;\n}(); ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * @returns The base api route.\n */\n\n\nfunction api() {\n  return {\n    path: \"/api/client/v2.0\",\n\n    /**\n     * @param appId The id of the app.\n     * @returns The URL of the app endpoint.\n     */\n    app: function app(appId) {\n      return {\n        path: this.path + \"/app/\".concat(appId),\n\n        /**\n         * @returns The URL of the app location endpoint.\n         */\n        location: function location() {\n          return {\n            path: this.path + \"/location\"\n          };\n        },\n\n        /**\n         * @param providerName The name of the provider.\n         * @returns The app url concatinated with the /auth/providers/{providerName}\n         */\n        authProvider: function authProvider(providerName) {\n          return {\n            path: this.path + \"/auth/providers/\".concat(providerName),\n\n            /**\n             * @returns Get the URL of an authentication provider.\n             */\n            login: function login() {\n              return {\n                path: this.path + \"/login\"\n              };\n            }\n          };\n        },\n\n        /**\n         * @param providerName The name of the provider.\n         * @returns The app url concatinated with the /auth/providers/{providerName}\n         */\n        emailPasswordAuth: function emailPasswordAuth(providerName) {\n          var authProviderRoutes = this.authProvider(providerName);\n          return _objectSpread(_objectSpread({}, authProviderRoutes), {}, {\n            register: function register() {\n              return {\n                path: this.path + \"/register\"\n              };\n            },\n            confirm: function confirm() {\n              return {\n                path: this.path + \"/confirm\"\n              };\n            },\n            confirmSend: function confirmSend() {\n              return {\n                path: this.path + \"/confirm/send\"\n              };\n            },\n            reset: function reset() {\n              return {\n                path: this.path + \"/reset\"\n              };\n            },\n            resetSend: function resetSend() {\n              return {\n                path: this.path + \"/reset/send\"\n              };\n            },\n            resetCall: function resetCall() {\n              return {\n                path: this.path + \"/reset/call\"\n              };\n            }\n          });\n        },\n        functionsCall: function functionsCall() {\n          return {\n            path: this.path + \"/functions/call\"\n          };\n        }\n      };\n    },\n    auth: function auth() {\n      return {\n        path: this.path + \"/auth\",\n        apiKeys: function apiKeys() {\n          return {\n            path: this.path + \"/api_keys\",\n            key: function key(id) {\n              return {\n                path: this.path + \"/\".concat(id),\n                enable: function enable() {\n                  return {\n                    path: this.path + \"/enable\"\n                  };\n                },\n                disable: function disable() {\n                  return {\n                    path: this.path + \"/disable\"\n                  };\n                }\n              };\n            }\n          };\n        },\n        profile: function profile() {\n          return {\n            path: this.path + \"/profile\"\n          };\n        },\n        session: function session() {\n          return {\n            path: this.path + \"/session\"\n          };\n        }\n      };\n    }\n  };\n}\n\nvar routes = {\n  api: api\n}; ////////////////////////////////////////////////////////////////////////////\n\n/** @inheritdoc */\n\nvar ApiKeyAuth = /*#__PURE__*/function () {\n  /**\n   * Construct an interface to the API-key authentication provider.\n   *\n   * @param fetcher The fetcher used to send requests to services.\n   * @param providerName Optional custom name of the authentication provider.\n   */\n  function ApiKeyAuth(fetcher) {\n    var providerName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"api-key\";\n\n    _classCallCheck(this, ApiKeyAuth);\n\n    this.fetcher = fetcher;\n  }\n  /** @inheritdoc */\n\n\n  _createClass(ApiKeyAuth, [{\n    key: \"create\",\n    value: function create(name) {\n      return this.fetcher.fetchJSON({\n        method: \"POST\",\n        body: {\n          name: name\n        },\n        path: routes.api().auth().apiKeys().path,\n        tokenType: \"refresh\"\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"fetch\",\n    value: function fetch(keyId) {\n      return this.fetcher.fetchJSON({\n        method: \"GET\",\n        path: routes.api().auth().apiKeys().key(keyId).path,\n        tokenType: \"refresh\"\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"fetchAll\",\n    value: function fetchAll() {\n      return this.fetcher.fetchJSON({\n        method: \"GET\",\n        tokenType: \"refresh\",\n        path: routes.api().auth().apiKeys().path\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(keyId) {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.fetcher.fetchJSON({\n                  method: \"DELETE\",\n                  path: routes.api().auth().apiKeys().key(keyId).path,\n                  tokenType: \"refresh\"\n                });\n\n              case 2:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function _delete(_x15) {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n    /** @inheritdoc */\n\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(keyId) {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.fetcher.fetchJSON({\n                  method: \"PUT\",\n                  path: routes.api().auth().apiKeys().key(keyId).enable().path,\n                  tokenType: \"refresh\"\n                });\n\n              case 2:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function enable(_x16) {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n    /** @inheritdoc */\n\n  }, {\n    key: \"disable\",\n    value: function () {\n      var _disable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(keyId) {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.fetcher.fetchJSON({\n                  method: \"PUT\",\n                  path: routes.api().auth().apiKeys().key(keyId).disable().path,\n                  tokenType: \"refresh\"\n                });\n\n              case 2:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function disable(_x17) {\n        return _disable.apply(this, arguments);\n      }\n\n      return disable;\n    }()\n  }]);\n\n  return ApiKeyAuth;\n}(); ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n\nvar environment = null;\n/**\n * Set the environment of execution.\n * Note: This should be called as the first thing before executing any code which calls getEnvironment()\n *\n * @param e An object containing environment specific implementations.\n */\n\nfunction setEnvironment(e) {\n  environment = e;\n}\n/**\n * Get the environment of execution.\n *\n * @returns An object containing environment specific implementations.\n */\n\n\nfunction getEnvironment() {\n  if (environment) {\n    return environment;\n  } else {\n    throw new Error(\"Cannot get environment before it's set\");\n  }\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * An error occured during the parsing of a watch stream.\n */\n\n\nvar WatchError = /*#__PURE__*/function (_Error) {\n  _inherits(WatchError, _Error);\n\n  var _super2 = _createSuper(WatchError);\n\n  function WatchError(_ref8) {\n    var _this2;\n\n    var message = _ref8.message,\n        code = _ref8.code;\n\n    _classCallCheck(this, WatchError);\n\n    _this2 = _super2.call(this, message);\n    /**\n     * The name of this type of error\n     */\n\n    _this2.name = \"WatchError\";\n    _this2.code = code;\n    return _this2;\n  }\n\n  return WatchError;\n}( /*#__PURE__*/_wrapNativeSuper(Error)); ////////////////////////////////////////////////////////////////////////////\n// NOTE: this is a fully processed event, not a single \"data: foo\" line!\n\n/**\n * The state of a WatchStream.\n */\n\n\nvar WatchStreamState;\n\n(function (WatchStreamState) {\n  /**\n   * Need to call one of the feed functions.\n   */\n  WatchStreamState[\"NEED_DATA\"] = \"NEED_DATA\";\n  /**\n   * Call nextEvent() to consume an event.\n   */\n\n  WatchStreamState[\"HAVE_EVENT\"] = \"HAVE_EVENT\";\n  /**\n   * Call error().\n   */\n\n  WatchStreamState[\"HAVE_ERROR\"] = \"HAVE_ERROR\";\n})(WatchStreamState || (WatchStreamState = {}));\n/**\n * Represents a stream of events\n */\n\n\nvar WatchStream = /*#__PURE__*/function () {\n  function WatchStream() {\n    _classCallCheck(this, WatchStream);\n\n    this._state = WatchStreamState.NEED_DATA;\n    this._error = null; // Used by feedBuffer to construct lines\n\n    this._textDecoder = new (getEnvironment().TextDecoder)();\n    this._buffer = \"\";\n    this._bufferOffset = 0; // Used by feedLine for building the next SSE\n\n    this._eventType = \"\";\n    this._dataBuffer = \"\";\n  } // Call these when you have data, in whatever shape is easiest for your SDK to get.\n  // Pick one, mixing and matching on a single instance isn't supported.\n  // These can only be called in NEED_DATA state, which is the initial state.\n\n\n  _createClass(WatchStream, [{\n    key: \"feedBuffer\",\n    value: function feedBuffer(buffer) {\n      this.assertState(WatchStreamState.NEED_DATA);\n      this._buffer += this._textDecoder.decode(buffer, {\n        stream: true\n      });\n      this.advanceBufferState();\n    }\n  }, {\n    key: \"feedLine\",\n    value: function feedLine(line) {\n      this.assertState(WatchStreamState.NEED_DATA); // This is an implementation of the algorithm described at\n      // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation.\n      // Currently the server does not use id or retry lines, so that processing isn't implemented.\n      // ignore trailing LF if not removed by SDK.\n\n      if (line.endsWith(\"\\n\")) line = line.substr(0, line.length - 1); // ignore trailing CR from CRLF\n\n      if (line.endsWith(\"\\r\")) line = line.substr(0, line.length - 1);\n\n      if (line.length === 0) {\n        // This is the \"dispatch the event\" portion of the algorithm.\n        if (this._dataBuffer.length === 0) {\n          this._eventType = \"\";\n          return;\n        }\n\n        if (this._dataBuffer.endsWith(\"\\n\")) this._dataBuffer = this._dataBuffer.substr(0, this._dataBuffer.length - 1);\n        this.feedSse({\n          data: this._dataBuffer,\n          eventType: this._eventType\n        });\n        this._dataBuffer = \"\";\n        this._eventType = \"\";\n      }\n\n      if (line[0] === \":\") return;\n      var colon = line.indexOf(\":\");\n      var field = line.substr(0, colon);\n      var value = colon === -1 ? \"\" : line.substr(colon + 1);\n      if (value.startsWith(\" \")) value = value.substr(1);\n\n      if (field === \"event\") {\n        this._eventType = value;\n      } else if (field === \"data\") {\n        this._dataBuffer += value;\n        this._dataBuffer += \"\\n\";\n      } else ;\n    }\n  }, {\n    key: \"feedSse\",\n    value: function feedSse(sse) {\n      this.assertState(WatchStreamState.NEED_DATA);\n      var firstPercentIndex = sse.data.indexOf(\"%\");\n\n      if (firstPercentIndex !== -1) {\n        // For some reason, the stich server decided to add percent-encoding for '%', '\\n', and '\\r' to its\n        // event-stream replies. But it isn't real urlencoding, since most characters pass through, so we can't use\n        // uri_percent_decode() here.\n        var buffer = \"\";\n        var start = 0;\n\n        for (var percentIndex = firstPercentIndex; percentIndex !== -1; percentIndex = sse.data.indexOf(\"%\", start)) {\n          buffer += sse.data.substr(start, percentIndex - start);\n          var encoded = sse.data.substr(percentIndex, 3); // may be smaller than 3 if string ends with %\n\n          if (encoded === \"%25\") {\n            buffer += \"%\";\n          } else if (encoded === \"%0A\") {\n            buffer += \"\\x0A\"; // '\\n'\n          } else if (encoded === \"%0D\") {\n            buffer += \"\\x0D\"; // '\\r'\n          } else {\n            buffer += encoded; // propagate as-is\n          }\n\n          start = percentIndex + encoded.length;\n        } // Advance the buffer with the last part\n\n\n        buffer += sse.data.substr(start);\n        sse.data = buffer;\n      }\n\n      if (!sse.eventType || sse.eventType === \"message\") {\n        try {\n          var parsed = EJSON.parse(sse.data);\n\n          if (typeof parsed === \"object\") {\n            // ???\n            this._nextEvent = parsed;\n            this._state = WatchStreamState.HAVE_EVENT;\n            return;\n          }\n        } catch (_unused) {// fallthrough to same handling as for non-document value.\n        }\n\n        this._state = WatchStreamState.HAVE_ERROR;\n        this._error = new WatchError({\n          message: \"server returned malformed event: \" + sse.data,\n          code: \"bad bson parse\"\n        });\n      } else if (sse.eventType === \"error\") {\n        this._state = WatchStreamState.HAVE_ERROR; // default error message if we have issues parsing the reply.\n\n        this._error = new WatchError({\n          message: sse.data,\n          code: \"unknown\"\n        });\n\n        try {\n          var _EJSON$parse = EJSON.parse(sse.data),\n              errorCode = _EJSON$parse.error_code,\n              error = _EJSON$parse.error;\n\n          if (typeof errorCode !== \"string\") return;\n          if (typeof error !== \"string\") return; // XXX in realm-js, object-store will error if the error_code is not one of the known\n          // error code enum values.\n\n          this._error = new WatchError({\n            message: error,\n            code: errorCode\n          });\n        } catch (_unused2) {\n          return; // Use the default state.\n        }\n      } else ;\n    }\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this._state;\n    } // Consumes the returned event. If you used feedBuffer(), there may be another event or error after this one,\n    // so you need to call state() again to see what to do next.\n\n  }, {\n    key: \"nextEvent\",\n    value: function nextEvent() {\n      this.assertState(WatchStreamState.HAVE_EVENT); // We can use \"as ChangeEvent<T>\" since we just asserted the state.\n\n      var out = this._nextEvent;\n      this._state = WatchStreamState.NEED_DATA;\n      this.advanceBufferState();\n      return out;\n    } // Once this enters the error state, it stays that way. You should not feed any more data.\n\n  }, {\n    key: \"error\",\n    get: function get() {\n      return this._error;\n    } ////////////////////////////////////////////\n\n  }, {\n    key: \"advanceBufferState\",\n    value: function advanceBufferState() {\n      this.assertState(WatchStreamState.NEED_DATA);\n\n      while (this.state === WatchStreamState.NEED_DATA) {\n        if (this._bufferOffset === this._buffer.length) {\n          this._buffer = \"\";\n          this._bufferOffset = 0;\n          return;\n        } // NOTE not supporting CR-only newlines, just LF and CRLF.\n\n\n        var nextNewlineIndex = this._buffer.indexOf(\"\\n\", this._bufferOffset);\n\n        if (nextNewlineIndex === -1) {\n          // We have a partial line.\n          if (this._bufferOffset !== 0) {\n            // Slide the partial line down to the front of the buffer.\n            this._buffer = this._buffer.substr(this._bufferOffset, this._buffer.length - this._bufferOffset);\n            this._bufferOffset = 0;\n          }\n\n          return;\n        }\n\n        this.feedLine(this._buffer.substr(this._bufferOffset, nextNewlineIndex - this._bufferOffset));\n        this._bufferOffset = nextNewlineIndex + 1; // Advance past this line, including its newline.\n      }\n    }\n  }, {\n    key: \"assertState\",\n    value: function assertState(state) {\n      if (this._state !== state) {\n        throw Error(\"Expected WatchStream to be in state \".concat(state, \", but in state \").concat(this._state));\n      }\n    }\n  }]);\n\n  return WatchStream;\n}(); ////////////////////////////////////////////////////////////////////////////\n\n/**\n * A remote collection of documents.\n */\n\n\nvar MongoDBCollection = /*#__PURE__*/function () {\n  /**\n   * Construct a remote collection of documents.\n   *\n   * @param fetcher The fetcher to use when requesting the service.\n   * @param serviceName The name of the remote service.\n   * @param databaseName The name of the database.\n   * @param collectionName The name of the remote collection.\n   */\n  function MongoDBCollection(fetcher, serviceName, databaseName, collectionName) {\n    _classCallCheck(this, MongoDBCollection);\n\n    this.functions = FunctionsFactory.create(fetcher, {\n      serviceName: serviceName\n    });\n    this.databaseName = databaseName;\n    this.collectionName = collectionName;\n    this.serviceName = serviceName;\n    this.fetcher = fetcher;\n  }\n  /** @inheritdoc */\n\n\n  _createClass(MongoDBCollection, [{\n    key: \"find\",\n    value: function find() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.functions.find({\n        database: this.databaseName,\n        collection: this.collectionName,\n        query: filter,\n        project: options.projection,\n        sort: options.sort,\n        limit: options.limit\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"findOne\",\n    value: function findOne() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.functions.findOne({\n        database: this.databaseName,\n        collection: this.collectionName,\n        query: filter,\n        project: options.projection,\n        sort: options.sort\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"findOneAndUpdate\",\n    value: function findOneAndUpdate() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var update = arguments.length > 1 ? arguments[1] : undefined;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.functions.findOneAndUpdate({\n        database: this.databaseName,\n        collection: this.collectionName,\n        filter: filter,\n        update: update,\n        sort: options.sort,\n        projection: options.projection,\n        upsert: options.upsert,\n        returnNewDocument: options.returnNewDocument\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"findOneAndReplace\",\n    value: function findOneAndReplace() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var replacement = arguments.length > 1 ? arguments[1] : undefined;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.functions.findOneAndReplace({\n        database: this.databaseName,\n        collection: this.collectionName,\n        filter: filter,\n        update: replacement,\n        sort: options.sort,\n        projection: options.projection,\n        upsert: options.upsert,\n        returnNewDocument: options.returnNewDocument\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"findOneAndDelete\",\n    value: function findOneAndDelete() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.functions.findOneAndReplace({\n        database: this.databaseName,\n        collection: this.collectionName,\n        filter: filter,\n        sort: options.sort,\n        projection: options.projection\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"aggregate\",\n    value: function aggregate(pipeline) {\n      return this.functions.aggregate({\n        database: this.databaseName,\n        collection: this.collectionName,\n        pipeline: pipeline\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"count\",\n    value: function count() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.functions.count({\n        database: this.databaseName,\n        collection: this.collectionName,\n        query: filter,\n        limit: options.limit\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"insertOne\",\n    value: function insertOne(document) {\n      return this.functions.insertOne({\n        database: this.databaseName,\n        collection: this.collectionName,\n        document: document\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"insertMany\",\n    value: function insertMany(documents) {\n      return this.functions.insertMany({\n        database: this.databaseName,\n        collection: this.collectionName,\n        documents: documents\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"deleteOne\",\n    value: function deleteOne() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.functions.deleteOne({\n        database: this.databaseName,\n        collection: this.collectionName,\n        query: filter\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"deleteMany\",\n    value: function deleteMany() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.functions.deleteMany({\n        database: this.databaseName,\n        collection: this.collectionName,\n        query: filter\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"updateOne\",\n    value: function updateOne(filter, update) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.functions.updateOne({\n        database: this.databaseName,\n        collection: this.collectionName,\n        query: filter,\n        update: update,\n        upsert: options.upsert\n      });\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"updateMany\",\n    value: function updateMany(filter, update) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.functions.updateMany({\n        database: this.databaseName,\n        collection: this.collectionName,\n        query: filter,\n        update: update,\n        upsert: options.upsert\n      });\n    }\n  }, {\n    key: \"watch\",\n    value: function watch() {\n      var _this = this;\n\n      var _ref9 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          ids = _ref9.ids,\n          filter = _ref9.filter;\n\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        var iterator, watchStream, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, chunk;\n\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return _awaitAsyncGenerator(_this.functions.callFunctionStreaming(\"watch\", {\n                  database: _this.databaseName,\n                  collection: _this.collectionName,\n                  ids: ids,\n                  filter: filter\n                }));\n\n              case 2:\n                iterator = _context13.sent;\n                watchStream = new WatchStream();\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _context13.prev = 6;\n                _iterator = _asyncIterator(iterator);\n\n              case 8:\n                _context13.next = 10;\n                return _awaitAsyncGenerator(_iterator.next());\n\n              case 10:\n                _step = _context13.sent;\n                _iteratorNormalCompletion = _step.done;\n                _context13.next = 14;\n                return _awaitAsyncGenerator(_step.value);\n\n              case 14:\n                _value = _context13.sent;\n\n                if (_iteratorNormalCompletion) {\n                  _context13.next = 30;\n                  break;\n                }\n\n                chunk = _value;\n\n                if (chunk) {\n                  _context13.next = 19;\n                  break;\n                }\n\n                return _context13.abrupt(\"continue\", 27);\n\n              case 19:\n                watchStream.feedBuffer(chunk);\n\n              case 20:\n                if (!(watchStream.state == WatchStreamState.HAVE_EVENT)) {\n                  _context13.next = 25;\n                  break;\n                }\n\n                _context13.next = 23;\n                return watchStream.nextEvent();\n\n              case 23:\n                _context13.next = 20;\n                break;\n\n              case 25:\n                if (!(watchStream.state == WatchStreamState.HAVE_ERROR)) {\n                  _context13.next = 27;\n                  break;\n                }\n\n                throw watchStream.error;\n\n              case 27:\n                _iteratorNormalCompletion = true;\n                _context13.next = 8;\n                break;\n\n              case 30:\n                _context13.next = 36;\n                break;\n\n              case 32:\n                _context13.prev = 32;\n                _context13.t0 = _context13[\"catch\"](6);\n                _didIteratorError = true;\n                _iteratorError = _context13.t0;\n\n              case 36:\n                _context13.prev = 36;\n                _context13.prev = 37;\n\n                if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                  _context13.next = 41;\n                  break;\n                }\n\n                _context13.next = 41;\n                return _awaitAsyncGenerator(_iterator.return());\n\n              case 41:\n                _context13.prev = 41;\n\n                if (!_didIteratorError) {\n                  _context13.next = 44;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 44:\n                return _context13.finish(41);\n\n              case 45:\n                return _context13.finish(36);\n\n              case 46:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, null, [[6, 32, 36, 46], [37,, 41, 45]]);\n      }))();\n    }\n  }]);\n\n  return MongoDBCollection;\n}(); ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates an Remote MongoDB Collection.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName A service name.\n * @param databaseName A database name.\n * @param collectionName A collection name.\n * @returns The collection.\n */\n\n\nfunction createCollection(fetcher, serviceName, databaseName, collectionName) {\n  return new MongoDBCollection(fetcher, serviceName, databaseName, collectionName);\n}\n/**\n * Creates a Remote MongoDB Database.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher\n * @param serviceName A service name\n * @param databaseName A database name\n * @returns The database.\n */\n\n\nfunction createDatabase(fetcher, serviceName, databaseName) {\n  return {\n    collection: createCollection.bind(null, fetcher, serviceName, databaseName)\n  };\n}\n/**\n * Creates a Remote MongoDB Service.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName An optional service name.\n * @returns The service.\n */\n\n\nfunction createService(fetcher) {\n  var serviceName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"mongo-db\";\n  return {\n    db: createDatabase.bind(null, fetcher, serviceName)\n  };\n} ////////////////////////////////////////////////////////////////////////////\n\n\nvar DEFAULT_DEVICE_ID = \"000000000000000000000000\";\n/** The state of a user within the app */\n\nvar UserState;\n\n(function (UserState) {\n  /** Active, with both access and refresh tokens */\n  UserState[\"Active\"] = \"active\";\n  /** Logged out, but there might still be data persisted about the user, in the browser. */\n\n  UserState[\"LoggedOut\"] = \"logged-out\";\n  /** Logged out and all data about the user has been removed. */\n\n  UserState[\"Removed\"] = \"removed\";\n})(UserState || (UserState = {}));\n/** The type of a user. */\n\n\nvar UserType$1;\n\n(function (UserType) {\n  /** Created by the user itself. */\n  UserType[\"Normal\"] = \"normal\";\n  /** Created by an administrator of the app. */\n\n  UserType[\"Server\"] = \"server\";\n})(UserType$1 || (UserType$1 = {}));\n/**\n * Representation of an authenticated user of an app.\n */\n\n\nvar User = /*#__PURE__*/function () {\n  /**\n   * @param parameters Parameters of the user.\n   */\n  function User(parameters) {\n    _classCallCheck(this, User);\n\n    this.app = parameters.app;\n    this.id = parameters.id;\n    this.storage = new UserStorage(this.app.storage, this.id);\n\n    if (\"accessToken\" in parameters && \"refreshToken\" in parameters && \"providerType\" in parameters) {\n      this._accessToken = parameters.accessToken;\n      this._refreshToken = parameters.refreshToken;\n      this.providerType = parameters.providerType; // Save the parameters to storage, for future instances to be hydrated from\n\n      this.storage.accessToken = parameters.accessToken;\n      this.storage.refreshToken = parameters.refreshToken;\n      this.storage.providerType = parameters.providerType;\n    } else {\n      // Hydrate the rest of the parameters from storage\n      this._accessToken = this.storage.accessToken;\n      this._refreshToken = this.storage.refreshToken;\n      var providerType = this.storage.providerType;\n      this._profile = this.storage.profile;\n\n      if (providerType) {\n        this.providerType = providerType;\n      } else {\n        throw new Error(\"Storage is missing a provider type\");\n      }\n    }\n\n    this.fetcher = this.app.fetcher.clone({\n      userContext: {\n        currentUser: this\n      }\n    });\n    this.apiKeys = new ApiKeyAuth(this.fetcher);\n    this.functions = FunctionsFactory.create(this.fetcher);\n  }\n  /**\n   * @returns The access token used to authenticate the user towards MongoDB Realm.\n   */\n\n\n  _createClass(User, [{\n    key: \"accessToken\",\n    get: function get() {\n      return this._accessToken;\n    }\n    /**\n     * @param token The new access token.\n     */\n    ,\n    set: function set(token) {\n      this._accessToken = token;\n      this.storage.accessToken = token;\n    }\n    /**\n     * @returns The refresh token used to issue new access tokens.\n     */\n\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      return this._refreshToken;\n    }\n    /**\n     * @param token The new refresh token.\n     */\n    ,\n    set: function set(token) {\n      this._refreshToken = token;\n      this.storage.refreshToken = token;\n    }\n    /**\n     * @returns The current state of the user.\n     */\n\n  }, {\n    key: \"state\",\n    get: function get() {\n      if (this.id in this.app.allUsers) {\n        return this.refreshToken === null ? UserState.LoggedOut : UserState.Active;\n      } else {\n        return UserState.Removed;\n      }\n    }\n    /**\n     * @returns The logged in state of the user.\n     */\n\n  }, {\n    key: \"isLoggedIn\",\n    get: function get() {\n      return this.state === UserState.Active;\n    }\n  }, {\n    key: \"customData\",\n    get: function get() {\n      if (this.accessToken) {\n        var decodedToken = this.decodeAccessToken();\n        return decodedToken.userData;\n      } else {\n        throw new Error(\"Cannot read custom data without an access token\");\n      }\n    }\n    /**\n     * @returns Profile containing detailed information about the user.\n     */\n\n  }, {\n    key: \"profile\",\n    get: function get() {\n      if (this._profile) {\n        return this._profile.data;\n      } else {\n        throw new Error(\"A profile was never fetched for this user\");\n      }\n    }\n  }, {\n    key: \"identities\",\n    get: function get() {\n      if (this._profile) {\n        return this._profile.identities;\n      } else {\n        throw new Error(\"A profile was never fetched for this user\");\n      }\n    }\n  }, {\n    key: \"deviceId\",\n    get: function get() {\n      if (this.accessToken) {\n        var payload = this.accessToken.split(\".\")[1];\n\n        if (payload) {\n          var parsedPayload = JSON.parse(base64.Base64.decode(payload));\n          var deviceId = parsedPayload[\"baas_device_id\"];\n\n          if (typeof deviceId === \"string\" && deviceId !== DEFAULT_DEVICE_ID) {\n            return deviceId;\n          }\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Refresh the users profile data.\n     */\n\n  }, {\n    key: \"refreshProfile\",\n    value: function () {\n      var _refreshProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return this.fetcher.fetchJSON({\n                  method: \"GET\",\n                  path: routes.api().auth().profile().path\n                });\n\n              case 2:\n                response = _context14.sent;\n                // Create a profile instance\n                this._profile = new UserProfile(response); // Store this for later hydration\n\n                this.storage.profile = this._profile;\n\n              case 5:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function refreshProfile() {\n        return _refreshProfile.apply(this, arguments);\n      }\n\n      return refreshProfile;\n    }()\n    /**\n     * Log out the user, invalidating the session (and its refresh token).\n     */\n\n  }, {\n    key: \"logOut\",\n    value: function () {\n      var _logOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.prev = 0;\n\n                if (!(this._refreshToken !== null)) {\n                  _context15.next = 4;\n                  break;\n                }\n\n                _context15.next = 4;\n                return this.fetcher.fetchJSON({\n                  method: \"DELETE\",\n                  path: routes.api().auth().session().path,\n                  tokenType: \"refresh\"\n                });\n\n              case 4:\n                _context15.prev = 4;\n                // Forget the access and refresh token\n                this.accessToken = null;\n                this.refreshToken = null;\n                return _context15.finish(4);\n\n              case 8:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this, [[0,, 4, 8]]);\n      }));\n\n      function logOut() {\n        return _logOut.apply(this, arguments);\n      }\n\n      return logOut;\n    }()\n    /** @inheritdoc */\n\n  }, {\n    key: \"linkCredentials\",\n    value: function () {\n      var _linkCredentials = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(credentials) {\n        var response, details;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return this.app.authenticator.authenticate(credentials, this);\n\n              case 2:\n                response = _context16.sent;\n\n                if (!(this.id !== response.userId)) {\n                  _context16.next = 6;\n                  break;\n                }\n\n                details = \"got user id \".concat(response.userId, \" expected \").concat(this.id);\n                throw new Error(\"Link response ment for another user (\".concat(details, \")\"));\n\n              case 6:\n                // Update the access token\n                this.accessToken = response.accessToken; // Refresh the profile to include the new identity\n\n                _context16.next = 9;\n                return this.refreshProfile();\n\n              case 9:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function linkCredentials(_x18) {\n        return _linkCredentials.apply(this, arguments);\n      }\n\n      return linkCredentials;\n    }()\n    /**\n     * Request a new access token, using the refresh token.\n     */\n\n  }, {\n    key: \"refreshAccessToken\",\n    value: function () {\n      var _refreshAccessToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        var response, accessToken;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return this.fetcher.fetchJSON({\n                  method: \"POST\",\n                  path: routes.api().auth().session().path,\n                  tokenType: \"refresh\"\n                });\n\n              case 2:\n                response = _context17.sent;\n                accessToken = response.access_token;\n\n                if (!(typeof accessToken === \"string\")) {\n                  _context17.next = 8;\n                  break;\n                }\n\n                this.accessToken = accessToken;\n                _context17.next = 9;\n                break;\n\n              case 8:\n                throw new Error(\"Expected an 'access_token' in the response\");\n\n              case 9:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function refreshAccessToken() {\n        return _refreshAccessToken.apply(this, arguments);\n      }\n\n      return refreshAccessToken;\n    }()\n    /** @inheritdoc */\n\n  }, {\n    key: \"refreshCustomData\",\n    value: function () {\n      var _refreshCustomData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18() {\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return this.refreshAccessToken();\n\n              case 2:\n                return _context18.abrupt(\"return\", this.customData);\n\n              case 3:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function refreshCustomData() {\n        return _refreshCustomData.apply(this, arguments);\n      }\n\n      return refreshCustomData;\n    }()\n    /** @inheritdoc */\n\n  }, {\n    key: \"callFunction\",\n    value: function callFunction(name) {\n      var _this$functions;\n\n      for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n\n      return (_this$functions = this.functions).callFunction.apply(_this$functions, [name].concat(args));\n    }\n    /**\n     * @returns A plain ol' JavaScript object representation of the user.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        id: this.id,\n        accessToken: this.accessToken,\n        refreshToken: this.refreshToken,\n        profile: this._profile,\n        state: this.state,\n        customData: this.customData\n      };\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"push\",\n    value: function push() {\n      var serviceName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      throw new Error(\"Not yet implemented\");\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"mongoClient\",\n    value: function mongoClient(serviceName) {\n      return createService(this.fetcher, serviceName);\n    }\n  }, {\n    key: \"decodeAccessToken\",\n    value: function decodeAccessToken() {\n      if (this.accessToken) {\n        // Decode and spread the token\n        var parts = this.accessToken.split(\".\");\n\n        if (parts.length !== 3) {\n          throw new Error(\"Expected an access token with three parts\");\n        } // Decode the payload\n\n\n        var encodedPayload = parts[1];\n        var decodedPayload = base64.Base64.decode(encodedPayload);\n        var parsedPayload = JSON.parse(decodedPayload);\n        var expires = parsedPayload.exp,\n            issuedAt = parsedPayload.iat,\n            subject = parsedPayload.sub,\n            _parsedPayload$user_d = parsedPayload.user_data,\n            userData = _parsedPayload$user_d === void 0 ? {} : _parsedPayload$user_d; // Validate the types\n\n        if (typeof expires !== \"number\") {\n          throw new Error(\"Failed to decode access token 'exp'\");\n        } else if (typeof issuedAt !== \"number\") {\n          throw new Error(\"Failed to decode access token 'iat'\");\n        }\n\n        return {\n          expires: expires,\n          issuedAt: issuedAt,\n          subject: subject,\n          userData: userData\n        };\n      } else {\n        throw new Error(\"Missing an access token\");\n      }\n    }\n  }]);\n\n  return User;\n}(); ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Ensure the static interface of the Credentials class implements the static interface of Realm.Credentials\n// See https://stackoverflow.com/a/43484801\n\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\n\n\nvar Credentials = /*#__PURE__*/function () {\n  /**\n   * Constructs an instance of credentials.\n   *\n   * @param providerName The name of the authentication provider used when authenticating.\n   * @param providerType The type of the authentication provider used when authenticating.\n   * @param payload The data being sent to the service when authenticating.\n   */\n  function Credentials(providerName, providerType, payload) {\n    _classCallCheck(this, Credentials);\n\n    this.providerName = providerName;\n    this.providerType = providerType;\n    this.payload = payload;\n  }\n  /**\n   * Creates credentials that logs in using the [Anonymous Provider](https://docs.mongodb.com/realm/authentication/anonymous/).\n   *\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  _createClass(Credentials, null, [{\n    key: \"anonymous\",\n    value: function anonymous() {\n      return new Credentials(\"anon-user\", \"anon-user\", {});\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"userApiKey\",\n    value: function userApiKey(key) {\n      return new Credentials(\"api-key\", \"api-key\", {\n        key: key\n      });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"serverApiKey\",\n    value: function serverApiKey(key) {\n      return new Credentials(\"api-key\", \"api-key\", {\n        key: key\n      });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"apiKey\",\n    value: function apiKey(key) {\n      return new Credentials(\"api-key\", \"api-key\", {\n        key: key\n      });\n    }\n    /**\n     * Creates credentials that logs in using the [Email/Password Provider](https://docs.mongodb.com/realm/authentication/email-password/).\n     * Note: This was formerly known as the \"Username/Password\" provider.\n     *\n     * @param email The end-users email address.\n     * @param password The end-users password.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"emailPassword\",\n    value: function emailPassword(email, password) {\n      return new Credentials(\"local-userpass\", \"local-userpass\", {\n        username: email,\n        password: password\n      });\n    }\n    /**\n     * Creates credentials that logs in using the [Custom Function Provider](https://docs.mongodb.com/realm/authentication/custom-function/).\n     *\n     * @param payload The custom payload as expected by the server.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"function\",\n    value: function _function(payload) {\n      return new Credentials(\"custom-function\", \"custom-function\", payload);\n    }\n    /**\n     * Creates credentials that logs in using the [Custom JWT Provider](https://docs.mongodb.com/realm/authentication/custom-jwt/).\n     *\n     * @param token The JSON Web Token (JWT).\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"jwt\",\n    value: function jwt(token) {\n      return new Credentials(\"custom-token\", \"custom-token\", {\n        token: token\n      });\n    }\n    /**\n     * Creates credentials that logs in using the [Google Provider](https://docs.mongodb.com/realm/authentication/google/).\n     *\n     * @param payload The URL that users should be redirected to, the auth code or id token from Google.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"google\",\n    value: function google(payload) {\n      return new Credentials(\"oauth2-google\", \"oauth2-google\", Credentials.derivePayload(payload));\n    }\n    /**\n     * @param payload The payload string.\n     * @returns A payload object based on the string.\n     */\n\n  }, {\n    key: \"derivePayload\",\n    value: function derivePayload(payload) {\n      if (typeof payload === \"string\") {\n        if (payload.includes(\"://\")) {\n          return this.derivePayload({\n            redirectUrl: payload\n          });\n        } else if (payload.startsWith(\"4/\")) {\n          return this.derivePayload({\n            authCode: payload\n          });\n        } else if (payload.startsWith(\"ey\")) {\n          // eslint-disable-next-line @typescript-eslint/camelcase\n          return this.derivePayload({\n            idToken: payload\n          });\n        } else {\n          throw new Error(\"Unexpected payload: \".concat(payload));\n        }\n      } else if (Object.keys(payload).length === 1) {\n        if (\"authCode\" in payload || \"redirectUrl\" in payload) {\n          return payload;\n        } else if (\"idToken\" in payload) {\n          // eslint-disable-next-line @typescript-eslint/camelcase\n          return {\n            id_token: payload.idToken\n          };\n        } else {\n          throw new Error(\"Unexpected payload: \" + JSON.stringify(payload));\n        }\n      } else {\n        throw new Error(\"Expected only one property in payload, got \" + JSON.stringify(payload));\n      }\n    }\n    /**\n     * Creates credentials that logs in using the [Facebook Provider](https://docs.mongodb.com/realm/authentication/facebook/).\n     *\n     * @param redirectUrlOrAccessToken The URL that users should be redirected to or the auth code returned from Facebook.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"facebook\",\n    value: function facebook(redirectUrlOrAccessToken) {\n      return new Credentials(\"oauth2-facebook\", \"oauth2-facebook\", redirectUrlOrAccessToken.includes(\"://\") ? {\n        redirectUrl: redirectUrlOrAccessToken\n      } : {\n        accessToken: redirectUrlOrAccessToken\n      });\n    }\n    /**\n     * Creates credentials that logs in using the [Apple ID Provider](https://docs.mongodb.com/realm/authentication/apple/).\n     *\n     * @param redirectUrlOrIdToken The URL that users should be redirected to or the id_token returned from Apple.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n\n  }, {\n    key: \"apple\",\n    value: function apple(redirectUrlOrIdToken) {\n      return new Credentials(\"oauth2-apple\", \"oauth2-apple\", redirectUrlOrIdToken.includes(\"://\") ? {\n        redirectUrl: redirectUrlOrIdToken\n      } : {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        id_token: redirectUrlOrIdToken\n      });\n    }\n  }]);\n\n  return Credentials;\n}(); ////////////////////////////////////////////////////////////////////////////\n\n\nvar USER_IDS_STORAGE_KEY = \"userIds\";\nvar DEVICE_ID_STORAGE_KEY = \"deviceId\";\n/**\n * Storage specific to the app.\n */\n\nvar AppStorage = /*#__PURE__*/function (_PrefixedStorage2) {\n  _inherits(AppStorage, _PrefixedStorage2);\n\n  var _super3 = _createSuper(AppStorage);\n\n  /**\n   * @param storage The underlying storage to wrap.\n   * @param appId The id of the app.\n   */\n  function AppStorage(storage, appId) {\n    _classCallCheck(this, AppStorage);\n\n    return _super3.call(this, storage, \"app(\".concat(appId, \")\"));\n  }\n  /**\n   * Reads out the list of user ids from storage.\n   *\n   * @returns A list of user ids.\n   */\n\n\n  _createClass(AppStorage, [{\n    key: \"getUserIds\",\n    value: function getUserIds() {\n      var userIdsString = this.get(USER_IDS_STORAGE_KEY);\n      var userIds = userIdsString ? JSON.parse(userIdsString) : [];\n\n      if (Array.isArray(userIds)) {\n        // Remove any duplicates that might have been added\n        // The Set preserves insertion order\n        return _toConsumableArray(new Set(userIds));\n      } else {\n        throw new Error(\"Expected the user ids to be an array\");\n      }\n    }\n    /**\n     * Sets the list of ids in storage.\n     * Optionally merging with existing ids stored in the storage, by prepending these while voiding duplicates.\n     *\n     * @param userIds The list of ids to store.\n     * @param mergeWithExisting Prepend existing ids to avoid data-races with other apps using this storage.\n     */\n\n  }, {\n    key: \"setUserIds\",\n    value: function setUserIds(userIds, mergeWithExisting) {\n      if (mergeWithExisting) {\n        // Add any existing user id to the end of this list, avoiding duplicates\n        var existingIds = this.getUserIds();\n\n        var _iterator3 = _createForOfIteratorHelper(existingIds),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var id = _step3.value;\n\n            if (userIds.indexOf(id) === -1) {\n              userIds.push(id);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      } // Store the list of ids\n\n\n      this.set(USER_IDS_STORAGE_KEY, JSON.stringify(userIds));\n    }\n    /**\n     * Remove an id from the list of ids.\n     *\n     * @param userId The id of a User to be removed.\n     */\n\n  }, {\n    key: \"removeUserId\",\n    value: function removeUserId(userId) {\n      var existingIds = this.getUserIds();\n      var userIds = existingIds.filter(function (id) {\n        return id !== userId;\n      }); // Store the list of ids\n\n      this.setUserIds(userIds, false);\n    }\n    /**\n     * @returns id of this device (if any exists)\n     */\n\n  }, {\n    key: \"getDeviceId\",\n    value: function getDeviceId() {\n      return this.get(DEVICE_ID_STORAGE_KEY);\n    }\n    /**\n     * @param deviceId The id of this device, to send on subsequent authentication requests.\n     */\n\n  }, {\n    key: \"setDeviceId\",\n    value: function setDeviceId(deviceId) {\n      this.set(DEVICE_ID_STORAGE_KEY, deviceId);\n    }\n  }]);\n\n  return AppStorage;\n}(PrefixedStorage); ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n\nvar LOWERCASE_LETTERS = \"abcdefghijklmnopqrstuvwxyz\";\nvar CLOSE_CHECK_INTERVAL = 100; // 10 times per second\n\n/* eslint-disable @typescript-eslint/camelcase */\n\nvar REDIRECT_HASH_TO_RESULT = {\n  _stitch_client_app_id: \"appId\",\n  _baas_client_app_id: \"appId\",\n  _stitch_ua: \"userAuth\",\n  _baas_ua: \"userAuth\",\n  _stitch_link: \"link\",\n  _baas_link: \"link\",\n  _stitch_error: \"error\",\n  _baas_error: \"error\",\n  _stitch_state: \"state\",\n  _baas_state: \"state\"\n};\n/* eslint-enable @typescript-eslint/camelcase */\n\n/**\n * A collection of methods helping implement the OAuth2 flow.\n */\n\nvar OAuth2Helper = /*#__PURE__*/function () {\n  /**\n   * @param storage The underlying storage to use when storing and retriving secrets.\n   * @param openWindow An optional function called when a browser window needs to open.\n   */\n  function OAuth2Helper(storage) {\n    var openWindow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getEnvironment().openWindow;\n\n    _classCallCheck(this, OAuth2Helper);\n\n    this.storage = storage.prefix(\"oauth2\");\n    this.openWindow = openWindow;\n  }\n  /**\n   * Parses the query string from the final step of the OAuth flow.\n   *\n   * @param queryString The query string passed through in location.hash.\n   * @returns The result of the OAuth flow.\n   */\n\n\n  _createClass(OAuth2Helper, [{\n    key: \"openWindowAndWaitForRedirect\",\n    value:\n    /**\n     * Open a window and wait for the redirect to be handled.\n     *\n     * @param url The URL to open.\n     * @param state The state which will be used to listen for storage updates.\n     * @returns The result passed through the redirect.\n     */\n    function openWindowAndWaitForRedirect(url, state) {\n      var _this3 = this;\n\n      var stateStorage = OAuth2Helper.getStateStorage(this.storage, state); // Return a promise that resolves when the  gets known\n\n      return new Promise(function (resolve, reject) {\n        var redirectWindow = null; // We're declaring the interval now to enable referencing before its initialized\n\n        var windowClosedInterval; // eslint-disable-line prefer-const\n\n        var handleStorageUpdate = function handleStorageUpdate() {\n          // Trying to get the secret from storage\n          var result = stateStorage.get(\"result\");\n\n          if (result) {\n            var parsedResult = JSON.parse(result); // The secret got updated!\n\n            stateStorage.removeListener(handleStorageUpdate); // Clear the storage to prevent others from reading this\n\n            stateStorage.clear(); // Try closing the newly created window\n\n            try {\n              if (redirectWindow) {\n                // Stop checking if the window closed\n                clearInterval(windowClosedInterval);\n                redirectWindow.close();\n              }\n            } catch (err) {\n              console.warn(\"Failed closing redirect window: \".concat(err));\n            } finally {\n              resolve(parsedResult);\n            }\n          }\n        }; // Add a listener to the state storage, awaiting an update to the secret\n\n\n        stateStorage.addListener(handleStorageUpdate); // Open up a window\n\n        redirectWindow = _this3.openWindow(url); // Not using a const, because we need the two listeners to reference each other when removing the other.\n\n        windowClosedInterval = setInterval(function () {\n          // Polling \"closed\" because registering listeners on the window violates cross-origin policies\n          if (!redirectWindow) {\n            // No need to keep polling for a window that we can't check\n            clearInterval(windowClosedInterval);\n          } else if (redirectWindow.closed) {\n            // Stop polling the window state\n            clearInterval(windowClosedInterval); // Stop listening for changes to the storage\n\n            stateStorage.removeListener(handleStorageUpdate); // Reject the promise\n\n            var err = new Error(\"Window closed\");\n            reject(err);\n          }\n        }, CLOSE_CHECK_INTERVAL);\n      });\n    }\n    /**\n     * Generate a random state string.\n     *\n     * @returns The random state string.\n     */\n\n  }, {\n    key: \"generateState\",\n    value: function generateState() {\n      return generateRandomString(12, LOWERCASE_LETTERS);\n    }\n  }], [{\n    key: \"parseRedirectLocation\",\n    value: function parseRedirectLocation(queryString) {\n      var params = decodeQueryString(queryString);\n      var result = {};\n\n      for (var _i2 = 0, _Object$entries2 = Object.entries(REDIRECT_HASH_TO_RESULT); _i2 < _Object$entries2.length; _i2++) {\n        var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n            p = _Object$entries2$_i[0],\n            r = _Object$entries2$_i[1];\n\n        var value = params[p];\n\n        if (value) {\n          result[r] = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Handle the redirect querystring by parsing it and storing it for others to consume.\n     *\n     * @param queryString The query string containing the encoded result from the OAuth provider.\n     * @param storage The underlying storage used to persist the result.\n     */\n\n  }, {\n    key: \"handleRedirect\",\n    value: function handleRedirect(queryString) {\n      var storage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getEnvironment().defaultStorage;\n      var result = OAuth2Helper.parseRedirectLocation(queryString);\n      var state = result.state,\n          error = result.error;\n\n      if (typeof state === \"string\") {\n        var oauth2Storage = storage.prefix(\"oauth2\");\n        var stateStorage = OAuth2Helper.getStateStorage(oauth2Storage, state);\n        stateStorage.set(\"result\", JSON.stringify(result));\n      } else if (error) {\n        throw new Error(\"Failed to handle OAuth 2.0 redirect: \".concat(error));\n      } else {\n        throw new Error(\"Failed to handle OAuth 2.0 redirect.\");\n      }\n    }\n    /**\n     * Decodes the authInfo string into its seperate parts.\n     *\n     * @param authInfo An authInfo string returned from the server.\n     * @returns An object containing the separate parts of the authInfo string.\n     */\n\n  }, {\n    key: \"decodeAuthInfo\",\n    value: function decodeAuthInfo(authInfo) {\n      var parts = (authInfo || \"\").split(\"$\");\n\n      if (parts.length === 4) {\n        var _parts = _slicedToArray(parts, 4),\n            accessToken = _parts[0],\n            refreshToken = _parts[1],\n            userId = _parts[2],\n            deviceId = _parts[3];\n\n        return {\n          accessToken: accessToken,\n          refreshToken: refreshToken,\n          userId: userId,\n          deviceId: deviceId\n        };\n      } else {\n        throw new Error(\"Failed to decode 'authInfo' into ids and tokens\");\n      }\n    }\n    /**\n     * Get the storage key associated of an secret associated with a state.\n     *\n     * @param storage The root storage used to derive a \"state namespaced\" storage.\n     * @param state The random state.\n     * @returns The storage associated with a particular state.\n     */\n\n  }, {\n    key: \"getStateStorage\",\n    value: function getStateStorage(storage, state) {\n      return storage.prefix(\"state(\".concat(state, \")\"));\n    }\n  }]);\n\n  return OAuth2Helper;\n}(); ////////////////////////////////////////////////////////////////////////////\n\n\nvar REDIRECT_LOCATION_HEADER = \"x-baas-location\";\n/**\n * Handles authentication and linking of users.\n */\n\nvar Authenticator = /*#__PURE__*/function () {\n  /**\n   * @param fetcher The fetcher used to fetch responses from the server.\n   * @param storage The storage used when completing OAuth 2.0 flows (should not be scoped to a specific app).\n   * @param getDeviceInformation Called to get device information to be sent to the server.\n   */\n  function Authenticator(fetcher, storage, getDeviceInformation) {\n    _classCallCheck(this, Authenticator);\n\n    this.fetcher = fetcher;\n    this.oauth2 = new OAuth2Helper(storage);\n    this.getDeviceInformation = getDeviceInformation;\n  }\n  /**\n   * @param credentials Credentials to use when logging in.\n   * @param linkingUser A user requesting to link.\n   */\n\n\n  _createClass(Authenticator, [{\n    key: \"authenticate\",\n    value: function () {\n      var _authenticate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(credentials, linkingUser) {\n        var deviceInformation, isLinking, state, url, response, redirectUrl, logInUrl, _response, userId, accessToken, _response$refresh_tok, refreshToken, deviceId;\n\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                deviceInformation = this.getDeviceInformation();\n                isLinking = typeof linkingUser === \"object\";\n\n                if (!(credentials.providerType.startsWith(\"oauth2\") && typeof credentials.payload.redirectUrl === \"string\")) {\n                  _context19.next = 22;\n                  break;\n                }\n\n                // Initiate the OAuth2 flow by generating a state and fetch a redirect URL\n                state = this.oauth2.generateState();\n                _context19.next = 6;\n                return this.getLogInUrl(credentials, isLinking, {\n                  state: state,\n                  redirect: credentials.payload.redirectUrl,\n                  // Ensure redirects are communicated in a header different from \"Location\" and status remains 200 OK\n                  providerRedirectHeader: isLinking ? true : undefined,\n                  // Add the device information, only if we're not linking - since that request won't have a body of its own.\n                  device: !isLinking ? deviceInformation.encode() : undefined\n                });\n\n              case 6:\n                url = _context19.sent;\n\n                if (!isLinking) {\n                  _context19.next = 19;\n                  break;\n                }\n\n                _context19.next = 10;\n                return this.fetcher.fetch({\n                  method: \"GET\",\n                  url: url,\n                  tokenType: isLinking ? \"access\" : \"none\",\n                  user: linkingUser,\n                  // The response will set a cookie that we need to tell the browser to store\n                  mode: \"cors\",\n                  credentials: \"include\"\n                });\n\n              case 10:\n                response = _context19.sent;\n                // If a response header contains a redirect URL: Open a window and wait for the redirect to be handled\n                redirectUrl = response.headers.get(REDIRECT_LOCATION_HEADER);\n\n                if (!redirectUrl) {\n                  _context19.next = 16;\n                  break;\n                }\n\n                return _context19.abrupt(\"return\", this.openWindowAndWaitForAuthResponse(redirectUrl, state));\n\n              case 16:\n                throw new Error(\"Missing \".concat(REDIRECT_LOCATION_HEADER, \" header\"));\n\n              case 17:\n                _context19.next = 20;\n                break;\n\n              case 19:\n                return _context19.abrupt(\"return\", this.openWindowAndWaitForAuthResponse(url, state));\n\n              case 20:\n                _context19.next = 34;\n                break;\n\n              case 22:\n                _context19.next = 24;\n                return this.getLogInUrl(credentials, isLinking);\n\n              case 24:\n                logInUrl = _context19.sent;\n                _context19.next = 27;\n                return this.fetcher.fetchJSON({\n                  method: \"POST\",\n                  url: logInUrl,\n                  body: _objectSpread(_objectSpread({}, credentials.payload), {}, {\n                    options: {\n                      device: deviceInformation.toJSON()\n                    }\n                  }),\n                  tokenType: isLinking ? \"access\" : \"none\",\n                  user: linkingUser\n                });\n\n              case 27:\n                _response = _context19.sent;\n                // Spread out values from the response and ensure they're valid\n                userId = _response.user_id, accessToken = _response.access_token, _response$refresh_tok = _response.refresh_token, refreshToken = _response$refresh_tok === void 0 ? null : _response$refresh_tok, deviceId = _response.device_id;\n\n                if (!(typeof userId !== \"string\")) {\n                  _context19.next = 31;\n                  break;\n                }\n\n                throw new Error(\"Expected a user id in the response\");\n\n              case 31:\n                if (!(typeof accessToken !== \"string\")) {\n                  _context19.next = 33;\n                  break;\n                }\n\n                throw new Error(\"Expected an access token in the response\");\n\n              case 33:\n                return _context19.abrupt(\"return\", {\n                  userId: userId,\n                  accessToken: accessToken,\n                  refreshToken: refreshToken,\n                  deviceId: deviceId\n                });\n\n              case 34:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function authenticate(_x19, _x20) {\n        return _authenticate.apply(this, arguments);\n      }\n\n      return authenticate;\n    }()\n    /**\n     * @param credentials Credentials to use when logging in.\n     * @param link Should the request link with the current user?\n     * @param extraQueryParams Any extra parameters to include in the query string\n     */\n\n  }, {\n    key: \"getLogInUrl\",\n    value: function () {\n      var _getLogInUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(credentials) {\n        var link,\n            extraQueryParams,\n            appRoute,\n            loginRoute,\n            qs,\n            locationUrl,\n            _args20 = arguments;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                link = _args20.length > 1 && _args20[1] !== undefined ? _args20[1] : false;\n                extraQueryParams = _args20.length > 2 && _args20[2] !== undefined ? _args20[2] : {};\n                // See https://github.com/mongodb/stitch-js-sdk/blob/310f0bd5af80f818cdfbc3caf1ae29ffa8e9c7cf/packages/core/sdk/src/auth/internal/CoreStitchAuth.ts#L746-L780\n                appRoute = this.fetcher.appRoute;\n                loginRoute = appRoute.authProvider(credentials.providerName).login();\n                qs = encodeQueryString(_objectSpread({\n                  link: link ? \"true\" : undefined\n                }, extraQueryParams));\n                _context20.next = 7;\n                return this.fetcher.locationUrl;\n\n              case 7:\n                locationUrl = _context20.sent;\n                return _context20.abrupt(\"return\", locationUrl + loginRoute.path + qs);\n\n              case 9:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function getLogInUrl(_x21) {\n        return _getLogInUrl.apply(this, arguments);\n      }\n\n      return getLogInUrl;\n    }()\n  }, {\n    key: \"openWindowAndWaitForAuthResponse\",\n    value: function () {\n      var _openWindowAndWaitForAuthResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(redirectUrl, state) {\n        var redirectResult;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _context21.next = 2;\n                return this.oauth2.openWindowAndWaitForRedirect(redirectUrl, state);\n\n              case 2:\n                redirectResult = _context21.sent;\n                return _context21.abrupt(\"return\", OAuth2Helper.decodeAuthInfo(redirectResult.userAuth));\n\n              case 4:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function openWindowAndWaitForAuthResponse(_x22, _x23) {\n        return _openWindowAndWaitForAuthResponse.apply(this, arguments);\n      }\n\n      return openWindowAndWaitForAuthResponse;\n    }()\n  }]);\n\n  return Authenticator;\n}(); ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Determine if the shape of an error response is specific to each service or widely used.\n\n/**\n * An error produced while communicating with the MongoDB Realm server.\n */\n\n\nvar MongoDBRealmError = /*#__PURE__*/function (_Error2) {\n  _inherits(MongoDBRealmError, _Error2);\n\n  var _super4 = _createSuper(MongoDBRealmError);\n\n  function MongoDBRealmError(method, url, statusCode, statusText, error, errorCode, link) {\n    var _this4;\n\n    _classCallCheck(this, MongoDBRealmError);\n\n    var summary = statusText ? \"status \".concat(statusCode, \" \").concat(statusText) : \"status \".concat(statusCode);\n\n    if (typeof error === \"string\") {\n      _this4 = _super4.call(this, \"Request failed (\".concat(method, \" \").concat(url, \"): \").concat(error, \" (\").concat(summary, \")\"));\n    } else {\n      _this4 = _super4.call(this, \"Request failed (\".concat(method, \" \").concat(url, \"): (\").concat(summary, \")\"));\n    }\n\n    _this4.method = method;\n    _this4.url = url;\n    _this4.statusText = statusText;\n    _this4.statusCode = statusCode;\n    _this4.error = error;\n    _this4.errorCode = errorCode;\n    _this4.link = link;\n    return _possibleConstructorReturn(_this4);\n  }\n  /**\n   * Constructs and returns an error from a request and a response.\n   * Note: The caller must throw this error themselves.\n   *\n   * @param request The request sent to the server.\n   * @param response A raw response, as returned from the server.\n   */\n\n\n  _createClass(MongoDBRealmError, null, [{\n    key: \"fromRequestAndResponse\",\n    value: function () {\n      var _fromRequestAndResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(request, response) {\n        var _a, url, method, status, statusText, body, error, errorCode, link;\n\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                url = request.url, method = request.method;\n                status = response.status, statusText = response.statusText;\n\n                if (!((_a = response.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.startsWith(\"application/json\"))) {\n                  _context22.next = 12;\n                  break;\n                }\n\n                _context22.next = 5;\n                return response.json();\n\n              case 5:\n                body = _context22.sent;\n                error = body.error || \"No message\";\n                errorCode = body.error_code;\n                link = body.link;\n                return _context22.abrupt(\"return\", new MongoDBRealmError(method, url, status, statusText, error, errorCode, link));\n\n              case 12:\n                return _context22.abrupt(\"return\", new MongoDBRealmError(method, url, status, statusText));\n\n              case 13:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22);\n      }));\n\n      function fromRequestAndResponse(_x24, _x25) {\n        return _fromRequestAndResponse.apply(this, arguments);\n      }\n\n      return fromRequestAndResponse;\n    }()\n  }]);\n\n  return MongoDBRealmError;\n}( /*#__PURE__*/_wrapNativeSuper(Error)); ////////////////////////////////////////////////////////////////////////////\n\n/**\n * @param body A possible resonse body.\n * @returns An async iterator.\n */\n\n\nfunction asyncIteratorFromResponseBody(body) {\n  if (typeof body !== \"object\" || body === null) {\n    throw new Error(\"Expected a non-null object\");\n  } else if (Symbol.asyncIterator in body) {\n    return body;\n  } else if (\"getReader\" in body) {\n    var stream = body;\n    return _defineProperty({}, Symbol.asyncIterator, function () {\n      var reader = stream.getReader();\n      return {\n        next: function next() {\n          return reader.read();\n        },\n        return: function _return() {\n          return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23() {\n            return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n              while (1) {\n                switch (_context23.prev = _context23.next) {\n                  case 0:\n                    _context23.next = 2;\n                    return reader.cancel();\n\n                  case 2:\n                    return _context23.abrupt(\"return\", {\n                      done: true,\n                      value: null\n                    });\n\n                  case 3:\n                  case \"end\":\n                    return _context23.stop();\n                }\n              }\n            }, _callee23);\n          }))();\n        }\n      };\n    });\n  } else {\n    throw new Error(\"Expected an AsyncIterable or a ReadableStream\");\n  }\n}\n/**\n * Wraps a NetworkTransport from the \"realm-network-transport\" package.\n * Extracts error messages and throws `MongoDBRealmError` objects upon failures.\n * Injects access or refresh tokens for a current or specific user.\n * Refreshes access tokens if requests fails due to a 401 error.\n * Optionally parses response as JSON before returning it.\n * Fetches and exposes an app's location url.\n */\n\n\nvar Fetcher = /*#__PURE__*/function () {\n  /**\n   * @param config A configuration of the fetcher.\n   */\n  function Fetcher(_ref11) {\n    var appId = _ref11.appId,\n        transport = _ref11.transport,\n        userContext = _ref11.userContext,\n        locationUrlContext = _ref11.locationUrlContext;\n\n    _classCallCheck(this, Fetcher);\n\n    this.appId = appId;\n    this.transport = transport;\n    this.userContext = userContext;\n    this.locationUrlContext = locationUrlContext;\n  }\n  /**\n   * @param user An optional user to generate the header for.\n   * @param tokenType The type of token (access or refresh).\n   * @returns An object containing the user's token as \"Authorization\" header or undefined if no user is given.\n   */\n\n\n  _createClass(Fetcher, [{\n    key: \"clone\",\n    value: function clone(config) {\n      return new Fetcher(_objectSpread({\n        appId: this.appId,\n        transport: this.transport,\n        userContext: this.userContext,\n        locationUrlContext: this.locationUrlContext\n      }, config));\n    }\n    /**\n     * Fetch a network resource as an authenticated user.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns The response from the server.\n     */\n\n  }, {\n    key: \"fetch\",\n    value: function () {\n      var _fetch2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(request) {\n        var path, url, _request$tokenType, tokenType, _request$user, user, restOfRequest, _url, response;\n\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                path = request.path, url = request.url, _request$tokenType = request.tokenType, tokenType = _request$tokenType === void 0 ? \"access\" : _request$tokenType, _request$user = request.user, user = _request$user === void 0 ? this.userContext.currentUser : _request$user, restOfRequest = _objectWithoutProperties(request, [\"path\", \"url\", \"tokenType\", \"user\"]);\n\n                if (!(typeof path === \"string\" && typeof url === \"string\")) {\n                  _context24.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Use of 'url' and 'path' mutually exclusive\");\n\n              case 5:\n                if (!(typeof path === \"string\")) {\n                  _context24.next = 14;\n                  break;\n                }\n\n                _context24.next = 8;\n                return this.locationUrlContext.locationUrl;\n\n              case 8:\n                _context24.t0 = _context24.sent;\n                _context24.t1 = path;\n                _url = _context24.t0 + _context24.t1;\n                return _context24.abrupt(\"return\", this.fetch(_objectSpread(_objectSpread({}, request), {}, {\n                  path: undefined,\n                  url: _url\n                })));\n\n              case 14:\n                if (!(typeof url === \"string\")) {\n                  _context24.next = 34;\n                  break;\n                }\n\n                _context24.next = 17;\n                return this.transport.fetch(_objectSpread(_objectSpread({}, restOfRequest), {}, {\n                  url: url,\n                  headers: _objectSpread(_objectSpread({}, Fetcher.buildAuthorizationHeader(user, tokenType)), request.headers)\n                }));\n\n              case 17:\n                response = _context24.sent;\n\n                if (!response.ok) {\n                  _context24.next = 22;\n                  break;\n                }\n\n                return _context24.abrupt(\"return\", response);\n\n              case 22:\n                if (!(user && response.status === 401 && tokenType === \"access\")) {\n                  _context24.next = 28;\n                  break;\n                }\n\n                _context24.next = 25;\n                return user.refreshAccessToken();\n\n              case 25:\n                return _context24.abrupt(\"return\", this.fetch(_objectSpread(_objectSpread({}, request), {}, {\n                  user: user\n                })));\n\n              case 28:\n                if (user && response.status === 401 && tokenType === \"refresh\") {\n                  // A 401 error while using the refresh token indicates the token has an issue.\n                  // Reset the tokens to prevent a lock.\n                  user.accessToken = null;\n                  user.refreshToken = null;\n                } // Throw an error with a message extracted from the body\n\n\n                _context24.next = 31;\n                return MongoDBRealmError.fromRequestAndResponse(request, response);\n\n              case 31:\n                throw _context24.sent;\n\n              case 32:\n                _context24.next = 35;\n                break;\n\n              case 34:\n                throw new Error(\"Expected either 'url' or 'path'\");\n\n              case 35:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function fetch(_x26) {\n        return _fetch2.apply(this, arguments);\n      }\n\n      return fetch;\n    }()\n    /**\n     * Fetch a network resource as an authenticated user and parse the result as extended JSON.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns The response from the server, parsed as extended JSON.\n     */\n\n  }, {\n    key: \"fetchJSON\",\n    value: function () {\n      var _fetchJSON = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25(request) {\n        var body, serializedBody, contentTypeHeaders, response, contentType, responseBody;\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                body = request.body;\n                serializedBody = Fetcher.buildBody(body);\n                contentTypeHeaders = Fetcher.buildJsonHeader(serializedBody);\n                _context25.next = 5;\n                return this.fetch(_objectSpread(_objectSpread({}, request), {}, {\n                  body: serializedBody,\n                  headers: _objectSpread(_objectSpread({\n                    Accept: \"application/json\"\n                  }, contentTypeHeaders), request.headers)\n                }));\n\n              case 5:\n                response = _context25.sent;\n                contentType = response.headers.get(\"content-type\");\n\n                if (!(contentType === null || contentType === void 0 ? void 0 : contentType.startsWith(\"application/json\"))) {\n                  _context25.next = 14;\n                  break;\n                }\n\n                _context25.next = 10;\n                return response.json();\n\n              case 10:\n                responseBody = _context25.sent;\n                return _context25.abrupt(\"return\", deserialize(responseBody));\n\n              case 14:\n                if (!(contentType === null)) {\n                  _context25.next = 18;\n                  break;\n                }\n\n                return _context25.abrupt(\"return\", null);\n\n              case 18:\n                throw new Error(\"Expected JSON response, got \\\"\".concat(contentType, \"\\\"\"));\n\n              case 19:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function fetchJSON(_x27) {\n        return _fetchJSON.apply(this, arguments);\n      }\n\n      return fetchJSON;\n    }()\n    /**\n     * Fetch an \"event-stream\" resource as an authenticated user.\n     *\n     * @param request The request which should be sent to the server.\n     */\n\n  }, {\n    key: \"fetchStream\",\n    value: function () {\n      var _fetchStream = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(request) {\n        var _yield$this$fetch, body;\n\n        return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                _context26.next = 2;\n                return this.fetch(_objectSpread(_objectSpread({}, request), {}, {\n                  headers: _objectSpread({\n                    Accept: \"text/event-stream\"\n                  }, request.headers)\n                }));\n\n              case 2:\n                _yield$this$fetch = _context26.sent;\n                body = _yield$this$fetch.body;\n                return _context26.abrupt(\"return\", asyncIteratorFromResponseBody(body));\n\n              case 5:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this);\n      }));\n\n      function fetchStream(_x28) {\n        return _fetchStream.apply(this, arguments);\n      }\n\n      return fetchStream;\n    }()\n    /**\n     * @returns The path of the app route.\n     */\n\n  }, {\n    key: \"appRoute\",\n    get: function get() {\n      return routes.api().app(this.appId);\n    }\n    /**\n     * @returns A promise of the location URL of the app.\n     */\n\n  }, {\n    key: \"locationUrl\",\n    get: function get() {\n      return this.locationUrlContext.locationUrl;\n    }\n  }], [{\n    key: \"buildAuthorizationHeader\",\n    value: function buildAuthorizationHeader(user, tokenType) {\n      if (!user || tokenType === \"none\") {\n        return {};\n      } else if (tokenType === \"access\") {\n        return {\n          Authorization: \"Bearer \".concat(user.accessToken)\n        };\n      } else if (tokenType === \"refresh\") {\n        return {\n          Authorization: \"Bearer \".concat(user.refreshToken)\n        };\n      } else {\n        throw new Error(\"Unexpected token type (\".concat(tokenType, \")\"));\n      }\n    }\n    /**\n     * @param body The body string or object passed from a request.\n     * @returns An object optionally specifying the \"Content-Type\" header.\n     */\n\n  }, {\n    key: \"buildBody\",\n    value: function buildBody(body) {\n      if (!body) {\n        return;\n      } else if (typeof body === \"object\" && body !== null) {\n        return JSON.stringify(serialize(body));\n      } else if (typeof body === \"string\") {\n        return body;\n      } else {\n        console.log(\"body is\", body);\n        throw new Error(\"Unexpected type of body\");\n      }\n    }\n    /**\n     * @param body The body string or object passed from a request.\n     * @returns An object optionally specifying the \"Content-Type\" header.\n     */\n\n  }, {\n    key: \"buildJsonHeader\",\n    value: function buildJsonHeader(body) {\n      if (body && body.length > 0) {\n        return {\n          \"Content-Type\": \"application/json\"\n        };\n      } else {\n        return {};\n      }\n    }\n  }]);\n\n  return Fetcher;\n}(); ////////////////////////////////////////////////////////////////////////////\n\n/**\n * The key in a storage on which the device id is stored.\n */\n\n\nvar DEVICE_ID_STORAGE_KEY$1 = \"deviceId\";\nvar DeviceFields;\n\n(function (DeviceFields) {\n  DeviceFields[\"DEVICE_ID\"] = \"deviceId\";\n  DeviceFields[\"APP_ID\"] = \"appId\";\n  DeviceFields[\"APP_VERSION\"] = \"appVersion\";\n  DeviceFields[\"PLATFORM\"] = \"platform\";\n  DeviceFields[\"PLATFORM_VERSION\"] = \"platformVersion\";\n  DeviceFields[\"SDK_VERSION\"] = \"sdkVersion\";\n})(DeviceFields || (DeviceFields = {}));\n/**\n * Information describing the device, app and SDK.\n */\n\n\nvar DeviceInformation = /*#__PURE__*/function () {\n  /**\n   * @param params Construct the device information from these parameters.\n   */\n  function DeviceInformation(_ref12) {\n    var appId = _ref12.appId,\n        appVersion = _ref12.appVersion,\n        deviceId = _ref12.deviceId;\n\n    _classCallCheck(this, DeviceInformation);\n\n    /**\n     * The version of the Realm Web SDK (constant provided by Rollup).\n     */\n    this.sdkVersion = \"1.2.1\";\n    var environment = getEnvironment();\n    this.platform = environment.platform;\n    this.platformVersion = environment.platformVersion;\n    this.appId = appId;\n    this.appVersion = appVersion;\n    this.deviceId = deviceId;\n  }\n  /**\n   * @returns An base64 URI encoded representation of the device information.\n   */\n\n\n  _createClass(DeviceInformation, [{\n    key: \"encode\",\n    value: function encode() {\n      var obj = removeKeysWithUndefinedValues(this);\n      return base64.Base64.encode(JSON.stringify(obj));\n    }\n    /**\n     * @returns The defaults\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return removeKeysWithUndefinedValues(this);\n    }\n  }]);\n\n  return DeviceInformation;\n}(); ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Default base url to prefix all requests if no baseUrl is specified in the configuration.\n */\n\n\nvar DEFAULT_BASE_URL = \"https://stitch.mongodb.com\";\n/**\n * MongoDB Realm App\n */\n\nvar App = /*#__PURE__*/function () {\n  /**\n   * Construct a Realm App, either from the Realm App id visible from the MongoDB Realm UI or a configuration.\n   *\n   * @param idOrConfiguration The Realm App id or a configuration to use for this app.\n   */\n  function App(idOrConfiguration) {\n    var _this5 = this;\n\n    _classCallCheck(this, App);\n\n    /**\n     * An array of active and logged-out users.\n     * Elements in the beginning of the array is considered more recent than the later elements.\n     */\n    this.users = [];\n    /**\n     * A promise resolving to the App's location url.\n     */\n\n    this._locationUrl = null; // If the argument is a string, convert it to a simple configuration object.\n\n    var configuration = typeof idOrConfiguration === \"string\" ? {\n      id: idOrConfiguration\n    } : idOrConfiguration; // Initialize properties from the configuration\n\n    if (typeof configuration === \"object\" && typeof configuration.id === \"string\") {\n      this.id = configuration.id;\n    } else {\n      throw new Error(\"Missing a MongoDB Realm app-id\");\n    }\n\n    this.baseUrl = configuration.baseUrl || DEFAULT_BASE_URL;\n    this.localApp = configuration.app;\n    var storage = configuration.storage,\n        _configuration$transp = configuration.transport,\n        transport = _configuration$transp === void 0 ? new DefaultNetworkTransport() : _configuration$transp; // Construct a fetcher wrapping the network transport\n\n    this.fetcher = new Fetcher({\n      appId: this.id,\n      userContext: this,\n      locationUrlContext: this,\n      transport: transport\n    }); // Construct the auth providers\n\n    this.emailPasswordAuth = new EmailPasswordAuth(this.fetcher); // Construct the storage\n\n    var baseStorage = storage || getEnvironment().defaultStorage;\n    this.storage = new AppStorage(baseStorage, this.id);\n    this.authenticator = new Authenticator(this.fetcher, baseStorage, function () {\n      return _this5.deviceInformation;\n    }); // Hydrate the app state from storage\n\n    try {\n      this.hydrate();\n    } catch (err) {\n      // The storage was corrupted\n      this.storage.clear(); // A failed hydration shouldn't throw and break the app experience\n      // Since this is \"just\" persisted state that unfortunately got corrupted or partially lost\n\n      console.warn(\"Realm app hydration failed:\", err.message);\n    }\n  }\n  /**\n   * Get or create a singleton Realm App from an id.\n   * Calling this function multiple times with the same id will return the same instance.\n   *\n   * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n   * @returns The Realm App instance.\n   */\n\n\n  _createClass(App, [{\n    key: \"switchUser\",\n    value:\n    /**\n     * Switch user.\n     *\n     * @param nextUser The user or id of the user to switch to.\n     */\n    function switchUser(nextUser) {\n      var index = this.users.findIndex(function (u) {\n        return u === nextUser;\n      });\n\n      if (index === -1) {\n        throw new Error(\"The user was never logged into this app\");\n      } // Remove the user from the stack\n\n\n      var _this$users$splice = this.users.splice(index, 1),\n          _this$users$splice2 = _slicedToArray(_this$users$splice, 1),\n          user = _this$users$splice2[0]; // Insert the user in the beginning of the stack\n\n\n      this.users.unshift(user);\n    }\n    /**\n     * Log in a user.\n     *\n     * @param credentials Credentials to use when logging in.\n     * @param fetchProfile Should the users profile be fetched? (default: true)\n     */\n\n  }, {\n    key: \"logIn\",\n    value: function () {\n      var _logIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(credentials) {\n        var fetchProfile,\n            response,\n            user,\n            deviceId,\n            _args27 = arguments;\n        return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                fetchProfile = _args27.length > 1 && _args27[1] !== undefined ? _args27[1] : true;\n                _context27.next = 3;\n                return this.authenticator.authenticate(credentials);\n\n              case 3:\n                response = _context27.sent;\n                user = this.createOrUpdateUser(response, credentials.providerType); // Let's ensure this will be the current user, in case the user object was reused.\n\n                this.switchUser(user); // If neeeded, fetch and set the profile on the user\n\n                if (!fetchProfile) {\n                  _context27.next = 9;\n                  break;\n                }\n\n                _context27.next = 9;\n                return user.refreshProfile();\n\n              case 9:\n                // Persist the user id in the storage,\n                // merging to avoid overriding logins from other apps using the same underlying storage\n                this.storage.setUserIds(this.users.map(function (u) {\n                  return u.id;\n                }), true); // Read out and store the device id from the server\n\n                deviceId = response.deviceId;\n\n                if (deviceId && deviceId !== \"000000000000000000000000\") {\n                  this.storage.set(DEVICE_ID_STORAGE_KEY$1, deviceId);\n                } // Return the user\n\n\n                return _context27.abrupt(\"return\", user);\n\n              case 13:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function logIn(_x29) {\n        return _logIn.apply(this, arguments);\n      }\n\n      return logIn;\n    }()\n    /**\n     * @inheritdoc\n     */\n\n  }, {\n    key: \"removeUser\",\n    value: function () {\n      var _removeUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28(user) {\n        var index;\n        return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                // Remove the user from the list of users\n                index = this.users.findIndex(function (u) {\n                  return u === user;\n                });\n\n                if (!(index === -1)) {\n                  _context28.next = 3;\n                  break;\n                }\n\n                throw new Error(\"The user was never logged into this app\");\n\n              case 3:\n                this.users.splice(index, 1); // Log out the user - this removes access and refresh tokens from storage\n\n                _context28.next = 6;\n                return user.logOut();\n\n              case 6:\n                // Remove the users profile from storage\n                this.storage.remove(\"user(\".concat(user.id, \"):profile\")); // Remove the user from the storage\n\n                this.storage.removeUserId(user.id);\n\n              case 8:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this);\n      }));\n\n      function removeUser(_x30) {\n        return _removeUser.apply(this, arguments);\n      }\n\n      return removeUser;\n    }()\n    /**\n     * The currently active user (or null if no active users exists).\n     *\n     * @returns the currently active user or null.\n     */\n\n  }, {\n    key: \"currentUser\",\n    get: function get() {\n      var activeUsers = this.users.filter(function (user) {\n        return user.state === UserState.Active;\n      });\n\n      if (activeUsers.length === 0) {\n        return null;\n      } else {\n        // Current user is the top of the stack\n        return activeUsers[0];\n      }\n    }\n    /**\n     * All active and logged-out users:\n     *  - First in the list are active users (ordered by most recent call to switchUser or login)\n     *  - Followed by logged out users (also ordered by most recent call to switchUser or login).\n     *\n     * @returns An array of users active or loggedout users (current user being the first).\n     */\n\n  }, {\n    key: \"allUsers\",\n    get: function get() {\n      // Returning a freezed copy of the list of users to prevent outside changes\n      return Object.fromEntries(this.users.map(function (user) {\n        return [user.id, user];\n      }));\n    }\n    /**\n     * @returns A promise of the app URL, with the app location resolved.\n     */\n\n  }, {\n    key: \"locationUrl\",\n    get: function get() {\n      var _this6 = this;\n\n      if (!this._locationUrl) {\n        var path = routes.api().app(this.id).location().path;\n        this._locationUrl = this.fetcher.fetchJSON({\n          method: \"GET\",\n          url: this.baseUrl + path,\n          tokenType: \"none\"\n        }).then(function (_ref13) {\n          var hostname = _ref13.hostname;\n\n          if (typeof hostname !== \"string\") {\n            throw new Error(\"Expected response to contain a 'hostname'\");\n          } else {\n            return hostname;\n          }\n        }).catch(function (err) {\n          // Reset the location to allow another request to fetch again.\n          _this6._locationUrl = null;\n          throw err;\n        });\n      }\n\n      return this._locationUrl;\n    }\n    /**\n     * @returns Information about the current device, sent to the server when authenticating.\n     */\n\n  }, {\n    key: \"deviceInformation\",\n    get: function get() {\n      var deviceIdStr = this.storage.getDeviceId();\n      var deviceId = typeof deviceIdStr === \"string\" && deviceIdStr !== \"000000000000000000000000\" ? new ObjectId(deviceIdStr) : undefined;\n      return new DeviceInformation({\n        appId: this.localApp ? this.localApp.name : undefined,\n        appVersion: this.localApp ? this.localApp.version : undefined,\n        deviceId: deviceId\n      });\n    }\n    /**\n     * Create (and store) a new user or update an existing user's access and refresh tokens.\n     * This helps de-duplicating users in the list of users known to the app.\n     *\n     * @param response A response from the Authenticator.\n     * @param providerType The type of the authentication provider used.\n     * @returns A new or an existing user.\n     */\n\n  }, {\n    key: \"createOrUpdateUser\",\n    value: function createOrUpdateUser(response, providerType) {\n      var existingUser = this.users.find(function (u) {\n        return u.id === response.userId;\n      });\n\n      if (existingUser) {\n        // Update the users access and refresh tokens\n        existingUser.accessToken = response.accessToken;\n        existingUser.refreshToken = response.refreshToken;\n        return existingUser;\n      } else {\n        // Create and store a new user\n        if (!response.refreshToken) {\n          throw new Error(\"No refresh token in response from server\");\n        }\n\n        var user = new User({\n          app: this,\n          id: response.userId,\n          accessToken: response.accessToken,\n          refreshToken: response.refreshToken,\n          providerType: providerType\n        });\n        this.users.unshift(user);\n        return user;\n      }\n    }\n    /**\n     * Restores the state of the app (active and logged-out users) from the storage\n     */\n\n  }, {\n    key: \"hydrate\",\n    value: function hydrate() {\n      var _this7 = this;\n\n      var userIds = this.storage.getUserIds();\n      this.users = userIds.map(function (id) {\n        return new User({\n          app: _this7,\n          id: id\n        });\n      });\n    }\n  }], [{\n    key: \"getApp\",\n    value: function getApp(id) {\n      if (id in App.appCache) {\n        return App.appCache[id];\n      } else {\n        var instance = new App(id);\n        App.appCache[id] = instance;\n        return instance;\n      }\n    }\n  }]);\n\n  return App;\n}();\n/**\n * A map of app instances returned from calling getApp.\n */\n\n\nApp.appCache = {};\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\n\nApp.Credentials = Credentials; ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Get or create a singleton Realm App from an id.\n * Calling this function multiple times with the same id will return the same instance.\n *\n * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n * @returns The Realm App instance.\n */\n\nfunction getApp(id) {\n  return App.getApp(id);\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * In-memory storage that will not be persisted.\n */\n\n\nvar LocalStorage = /*#__PURE__*/function () {\n  /**\n   * Constructs a LocalStorage using the global window.\n   */\n  function LocalStorage() {\n    _classCallCheck(this, LocalStorage);\n\n    if (typeof window === \"object\") {\n      this.window = window;\n    } else {\n      throw new Error(\"Cannot use LocalStorage without a global window object\");\n    }\n  }\n  /** @inheritdoc */\n\n\n  _createClass(LocalStorage, [{\n    key: \"get\",\n    value: function get(key) {\n      return this.window.localStorage.getItem(key);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      return this.window.localStorage.setItem(key, value);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      return this.window.localStorage.removeItem(key);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"prefix\",\n    value: function prefix(keyPart) {\n      return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"clear\",\n    value: function clear(prefix) {\n      var keys = []; // Iterate all keys to find the once have a matching prefix.\n\n      for (var i = 0; i < this.window.localStorage.length; i++) {\n        var key = this.window.localStorage.key(i);\n\n        if (key && (!prefix || key.startsWith(prefix))) {\n          keys.push(key);\n        }\n      } // Remove the items in a seperate loop to avoid updating while iterating.\n\n\n      for (var _i3 = 0, _keys = keys; _i3 < _keys.length; _i3++) {\n        var _key5 = _keys[_i3];\n        this.window.localStorage.removeItem(_key5);\n      }\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"addListener\",\n    value: function addListener(listener) {\n      return this.window.addEventListener(\"storage\", listener);\n    }\n    /** @inheritdoc */\n\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(listener) {\n      return this.window.removeEventListener(\"storage\", listener);\n    }\n  }]);\n\n  return LocalStorage;\n}(); ////////////////////////////////////////////////////////////////////////////\n\n\nvar browser = detect();\nvar environment$1 = {\n  defaultStorage: new LocalStorage().prefix(\"realm-web\"),\n  openWindow: function openWindow(url) {\n    return window.open(url);\n  },\n  platform: (browser === null || browser === void 0 ? void 0 : browser.name) || \"web\",\n  platformVersion: (browser === null || browser === void 0 ? void 0 : browser.version) || \"0.0.0\",\n  TextDecoder: TextDecoder\n};\nsetEnvironment(environment$1);\n/**\n * Handle an OAuth 2.0 redirect.\n *\n * @param location An optional location to use (defaults to the windows current location).\n * @param storage Optional storage used to save any results from the location.\n */\n\nfunction handleAuthRedirect() {\n  var location = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.location;\n  var storage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : environment$1.defaultStorage;\n\n  try {\n    var queryString = location.hash.substr(1); // Strip the initial # from the hash\n\n    OAuth2Helper.handleRedirect(queryString, storage);\n  } catch (err) {\n    // Ensure calling this never throws: It should not interrupt a users flow.\n    console.warn(err);\n  }\n}\n\nexport { App, Credentials, DEFAULT_BASE_URL, LocalStorage, MongoDBRealmError, User, UserState, UserType$1 as UserType, getApp, getEnvironment, handleAuthRedirect, setEnvironment };","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/node_modules/realm-web/dist/bundle.dom.es.js"],"names":["EJSON","ObjectId","bson","BSON","__spreadArrays","undefined","s","i","il","arguments","length","r","Array","k","a","j","jl","BrowserInfo","name","version","os","type","NodeInfo","process","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOX_UA_REGEX","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","detect","userAgent","parseUserAgent","document","navigator","product","getNodeVersion","matchUserAgent","ua","reduce","matched","_a","browser","regex","uaMatch","exec","matchedRule","match","versionParts","split","slice","createVersionParts","join","detectOS","searchBotMatch","ii","count","isNode","output","push","DefaultNetworkTransport","fetch","Error","AbortController","request","handler","then","response","text","decodedBody","responseHeaders","headers","forEach","value","key","statusCode","status","body","onSuccess","catch","e","onError","timeoutMs","url","rest","createTimeoutSignal","signal","cancelTimeout","controller","timeout","setTimeout","abort","clearTimeout","DEFAULT_HEADERS","window","bind","commonjsGlobal","globalThis","global","self","createCommonjsModule","fn","basedir","module","path","exports","require","base","commonjsRequire","base64","factory","_Base64","Base64","b64chars","b64tab","bin","t","l","charAt","fromCharCode","String","cb_utob","c","cc","charCodeAt","re_utob","utob","u","replace","cb_encode","ccc","padlen","ord","chars","btoa","b","RangeError","_encode","mkUriSafe","b64","m0","encode","urisafe","encodeURI","fromUint8Array","Uint8Array","a0","a1","a2","re_btou","cb_btou","cccc","cp","offset","btou","cb_decode","len","n","_atob","atob","_decode","_fromURI","decode","toUint8Array","from","noConflict","VERSION","fromBase64","toBase64","Object","defineProperty","noEnum","v","enumerable","writable","configurable","extendString","prototype","SERIALIZATION_OPTIONS","relaxed","serialize","obj","deserialize","isArray","map","doc","UserType","DataKey","DATA_MAPPING","NAME","EMAIL","PICTURE","FIRST_NAME","LAST_NAME","GENDER","BIRTHDAY","MIN_AGE","MAX_AGE","UserProfile","Normal","identities","data","identity","id","providerType","mappedData","fromEntries","entries","PrefixedStorage","storage","keyPart","get","PART_SEPARATOR","set","remove","prefix","clear","listener","addListener","ACCESS_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","PROFILE_STORAGE_KEY","PROVIDER_TYPE_STORAGE_KEY","UserStorage","userId","profile","assign","JSON","parse","stringify","removeKeysWithUndefinedValues","filter","entry","generateRandomString","alphabet","result","Math","floor","random","encodeQueryString","params","prefixed","cleanedParams","keys","encodeURIComponent","decodeQueryString","str","cleanStr","substr","kvp","decodeURIComponent","RESERVED_NAMES","getOwnPropertyNames","cleanArgs","args","arg","cleanArgsAndSerialize","cleaned","FunctionsFactory","fetcher","config","serviceName","argsTransformation","service","appRoute","fetchJSON","method","functionsCall","qs","fetchStream","Proxy","target","p","receiver","indexOf","callFunction","prop","Reflect","EmailPasswordAuth","providerName","email","password","emailPasswordAuth","register","token","tokenId","confirm","confirmSend","reset","resetSend","resetCall","api","app","appId","location","authProvider","login","authProviderRoutes","auth","apiKeys","enable","disable","session","routes","ApiKeyAuth","tokenType","keyId","environment","setEnvironment","getEnvironment","WatchError","message","code","WatchStreamState","WatchStream","_state","NEED_DATA","_error","_textDecoder","TextDecoder","_buffer","_bufferOffset","_eventType","_dataBuffer","buffer","assertState","stream","advanceBufferState","line","endsWith","feedSse","eventType","colon","field","startsWith","sse","firstPercentIndex","start","percentIndex","encoded","parsed","_nextEvent","HAVE_EVENT","HAVE_ERROR","errorCode","error_code","error","out","state","nextNewlineIndex","feedLine","MongoDBCollection","databaseName","collectionName","functions","create","options","find","database","collection","query","project","projection","sort","limit","findOne","update","findOneAndUpdate","upsert","returnNewDocument","replacement","findOneAndReplace","pipeline","aggregate","insertOne","documents","insertMany","deleteOne","deleteMany","updateOne","updateMany","ids","callFunctionStreaming","iterator","watchStream","chunk","feedBuffer","nextEvent","createCollection","createDatabase","createService","db","DEFAULT_DEVICE_ID","UserState","UserType$1","User","parameters","_accessToken","accessToken","_refreshToken","refreshToken","_profile","clone","userContext","currentUser","allUsers","LoggedOut","Active","Removed","decodedToken","decodeAccessToken","userData","payload","parsedPayload","deviceId","credentials","authenticator","authenticate","details","refreshProfile","access_token","refreshAccessToken","customData","parts","encodedPayload","decodedPayload","expires","exp","issuedAt","iat","subject","sub","user_data","Credentials","username","derivePayload","includes","redirectUrl","authCode","idToken","id_token","redirectUrlOrAccessToken","redirectUrlOrIdToken","USER_IDS_STORAGE_KEY","DEVICE_ID_STORAGE_KEY","AppStorage","userIdsString","userIds","Set","mergeWithExisting","existingIds","getUserIds","setUserIds","LOWERCASE_LETTERS","CLOSE_CHECK_INTERVAL","REDIRECT_HASH_TO_RESULT","_stitch_client_app_id","_baas_client_app_id","_stitch_ua","_baas_ua","_stitch_link","_baas_link","_stitch_error","_baas_error","_stitch_state","_baas_state","OAuth2Helper","openWindow","stateStorage","getStateStorage","Promise","resolve","reject","redirectWindow","windowClosedInterval","handleStorageUpdate","parsedResult","removeListener","clearInterval","close","err","console","warn","setInterval","closed","queryString","defaultStorage","parseRedirectLocation","oauth2Storage","authInfo","REDIRECT_LOCATION_HEADER","Authenticator","getDeviceInformation","oauth2","linkingUser","deviceInformation","isLinking","generateState","getLogInUrl","redirect","providerRedirectHeader","device","user","mode","openWindowAndWaitForAuthResponse","logInUrl","toJSON","user_id","refresh_token","device_id","link","extraQueryParams","loginRoute","locationUrl","openWindowAndWaitForRedirect","redirectResult","decodeAuthInfo","userAuth","MongoDBRealmError","statusText","summary","json","asyncIteratorFromResponseBody","Symbol","asyncIterator","reader","getReader","next","read","return","cancel","done","Fetcher","transport","locationUrlContext","restOfRequest","buildAuthorizationHeader","ok","fromRequestAndResponse","serializedBody","buildBody","contentTypeHeaders","buildJsonHeader","Accept","contentType","responseBody","Authorization","log","DEVICE_ID_STORAGE_KEY$1","DeviceFields","DeviceInformation","appVersion","sdkVersion","platformVersion","DEFAULT_BASE_URL","App","idOrConfiguration","users","_locationUrl","configuration","baseUrl","localApp","baseStorage","hydrate","nextUser","index","findIndex","splice","unshift","fetchProfile","createOrUpdateUser","switchUser","logOut","removeUserId","activeUsers","hostname","deviceIdStr","getDeviceId","existingUser","appCache","instance","getApp","LocalStorage","localStorage","getItem","setItem","removeItem","addEventListener","removeEventListener","environment$1","open","handleAuthRedirect","hash","handleRedirect"],"mappings":"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","sourcesContent":["import { EJSON, ObjectId } from 'bson';\nimport * as bson from 'bson';\nexport { bson as BSON };\n\nvar __spreadArrays = (undefined && undefined.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /Edg\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FBAV\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nfunction detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nfunction parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nfunction detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nfunction getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nclass DefaultNetworkTransport {\n    constructor() {\n        if (!DefaultNetworkTransport.fetch) {\n            throw new Error(\"DefaultNetworkTransport.fetch must be set before it's used\");\n        }\n        if (!DefaultNetworkTransport.AbortController) {\n            throw new Error(\"DefaultNetworkTransport.AbortController must be set before it's used\");\n        }\n    }\n    fetchWithCallbacks(request, handler) {\n        // tslint:disable-next-line: no-console\n        this.fetch(request)\n            .then(async (response) => {\n            const decodedBody = await response.text();\n            // Pull out the headers of the response\n            const responseHeaders = {};\n            response.headers.forEach((value, key) => {\n                responseHeaders[key] = value;\n            });\n            return {\n                statusCode: response.status,\n                headers: responseHeaders,\n                body: decodedBody,\n            };\n        })\n            .then(r => handler.onSuccess(r))\n            .catch(e => handler.onError(e));\n    }\n    async fetch(request) {\n        const { timeoutMs, url, ...rest } = request;\n        const { signal, cancelTimeout } = this.createTimeoutSignal(timeoutMs);\n        try {\n            // We'll await the response to catch throw our own error\n            return await DefaultNetworkTransport.fetch(url, {\n                signal,\n                ...rest\n            });\n        }\n        finally {\n            // Whatever happens, cancel any timeout\n            cancelTimeout();\n        }\n    }\n    createTimeoutSignal(timeoutMs) {\n        if (typeof timeoutMs === \"number\") {\n            const controller = new DefaultNetworkTransport.AbortController();\n            // Call abort after a specific number of milliseconds\n            const timeout = setTimeout(() => {\n                controller.abort();\n            }, timeoutMs);\n            return {\n                signal: controller.signal,\n                cancelTimeout: () => {\n                    clearTimeout(timeout);\n                },\n            };\n        }\n        else {\n            return {\n                signal: undefined,\n                cancelTimeout: () => {\n                    /* No-op */\n                },\n            };\n        }\n    }\n}\nDefaultNetworkTransport.DEFAULT_HEADERS = {\n    \"Content-Type\": \"application/json\",\n};\n\n////////////////////////////////////////////////////////////////////////////\nDefaultNetworkTransport.fetch = window.fetch.bind(window);\nDefaultNetworkTransport.AbortController = window.AbortController;\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t  path: basedir,\n\t  exports: {},\n\t  require: function (path, base) {\n      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n    }\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar base64 = createCommonjsModule(function (module, exports) {\n(function (global, factory) {\n     module.exports = factory(global)\n        ;\n}((\n    typeof self !== 'undefined' ? self\n        : typeof window !== 'undefined' ? window\n        : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal\n: commonjsGlobal\n), function(global) {\n    // existing version for noConflict()\n    global = global || {};\n    var _Base64 = global.Base64;\n    var version = \"2.6.4\";\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa && typeof global.btoa == 'function'\n        ? function(b){ return global.btoa(b) } : function(b) {\n        if (b.match(/[^\\x00-\\xFF]/)) throw new RangeError(\n            'The string contains invalid characters.'\n        );\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = function(u) {\n        return btoa(utob(String(u)));\n    };\n    var mkUriSafe = function (b64) {\n        return b64.replace(/[+\\/]/g, function(m0) {\n            return m0 == '+' ? '-' : '_';\n        }).replace(/=/g, '');\n    };\n    var encode = function(u, urisafe) {\n        return urisafe ? mkUriSafe(_encode(u)) : _encode(u);\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    var fromUint8Array;\n    if (global.Uint8Array) fromUint8Array = function(a, urisafe) {\n        // return btoa(fromCharCode.apply(null, a));\n        var b64 = '';\n        for (var i = 0, l = a.length; i < l; i += 3) {\n            var a0 = a[i], a1 = a[i+1], a2 = a[i+2];\n            var ord = a0 << 16 | a1 << 8 | a2;\n            b64 +=    b64chars.charAt( ord >>> 18)\n                +     b64chars.charAt((ord >>> 12) & 63)\n                + ( typeof a1 != 'undefined'\n                    ? b64chars.charAt((ord >>>  6) & 63) : '=')\n                + ( typeof a2 != 'undefined'\n                    ? b64chars.charAt( ord         & 63) : '=');\n        }\n        return urisafe ? mkUriSafe(b64) : b64;\n    };\n    // decoder stuff\n    var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var _atob = global.atob && typeof global.atob == 'function'\n        ? function(a){ return global.atob(a) } : function(a){\n        return a.replace(/\\S{1,4}/g, cb_decode);\n    };\n    var atob = function(a) {\n        return _atob(String(a).replace(/[^A-Za-z0-9\\+\\/]/g, ''));\n    };\n    var _decode = function(a) { return btou(_atob(a)) };\n    var _fromURI = function(a) {\n        return String(a).replace(/[-_]/g, function(m0) {\n            return m0 == '-' ? '+' : '/'\n        }).replace(/[^A-Za-z0-9\\+\\/]/g, '');\n    };\n    var decode = function(a){\n        return _decode(_fromURI(a));\n    };\n    var toUint8Array;\n    if (global.Uint8Array) toUint8Array = function(a) {\n        return Uint8Array.from(atob(_fromURI(a)), function(c) {\n            return c.charCodeAt(0);\n        });\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict,\n        fromUint8Array: fromUint8Array,\n        toUint8Array: toUint8Array\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    //\n    // export Base64 to the namespace\n    //\n    if (global['Meteor']) { // Meteor.js\n        Base64 = global.Base64;\n    }\n    // module.exports and AMD are mutually exclusive.\n    // module.exports has precedence.\n    if ( module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    // that's it!\n    return {Base64: global.Base64}\n}));\n});\n\n////////////////////////////////////////////////////////////////////////////\nconst SERIALIZATION_OPTIONS = {\n    relaxed: false,\n};\n/**\n * Serialize an object containing BSON types into extended-JSON.\n *\n * @param obj The object containing BSON types.\n * @returns The document in extended-JSON format.\n */\nfunction serialize(obj) {\n    return EJSON.serialize(obj, SERIALIZATION_OPTIONS);\n}\n/**\n * De-serialize an object or an array of object from extended-JSON into an object or an array of object with BSON types.\n *\n * @param obj The object or array of objects in extended-JSON format.\n * @returns The object or array of objects with inflated BSON types.\n */\nfunction deserialize(obj) {\n    if (Array.isArray(obj)) {\n        return obj.map(doc => EJSON.deserialize(doc));\n    }\n    else {\n        return EJSON.deserialize(obj);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * The type of a user.\n */\nvar UserType;\n(function (UserType) {\n    /**\n     * A normal end-user created this user.\n     */\n    UserType[\"Normal\"] = \"normal\";\n    /**\n     * The user was created by the server.\n     */\n    UserType[\"Server\"] = \"server\";\n})(UserType || (UserType = {}));\n/** @ignore */\nvar DataKey;\n(function (DataKey) {\n    /** @ignore */\n    DataKey[\"NAME\"] = \"name\";\n    /** @ignore */\n    DataKey[\"EMAIL\"] = \"email\";\n    /** @ignore */\n    DataKey[\"PICTURE\"] = \"picture\";\n    /** @ignore */\n    DataKey[\"FIRST_NAME\"] = \"first_name\";\n    /** @ignore */\n    DataKey[\"LAST_NAME\"] = \"last_name\";\n    /** @ignore */\n    DataKey[\"GENDER\"] = \"gender\";\n    /** @ignore */\n    DataKey[\"BIRTHDAY\"] = \"birthday\";\n    /** @ignore */\n    DataKey[\"MIN_AGE\"] = \"min_age\";\n    /** @ignore */\n    DataKey[\"MAX_AGE\"] = \"max_age\";\n})(DataKey || (DataKey = {}));\nconst DATA_MAPPING = {\n    [DataKey.NAME]: \"name\",\n    [DataKey.EMAIL]: \"email\",\n    [DataKey.PICTURE]: \"pictureUrl\",\n    [DataKey.FIRST_NAME]: \"firstName\",\n    [DataKey.LAST_NAME]: \"lastName\",\n    [DataKey.GENDER]: \"gender\",\n    [DataKey.BIRTHDAY]: \"birthday\",\n    [DataKey.MIN_AGE]: \"minAge\",\n    [DataKey.MAX_AGE]: \"maxAge\",\n};\n/** @inheritdoc */\nclass UserProfile {\n    /**\n     * @param response The response of a call fetching the users profile.\n     */\n    constructor(response) {\n        /** @ignore */\n        this.type = UserType.Normal;\n        /** @ignore */\n        this.identities = [];\n        if (typeof response === \"object\" && response !== null) {\n            const { type, identities, data } = response;\n            if (typeof type === \"string\") {\n                this.type = type;\n            }\n            else {\n                throw new Error(\"Expected 'type' in the response body\");\n            }\n            if (Array.isArray(identities)) {\n                this.identities = identities.map((identity) => {\n                    return {\n                        id: identity.id,\n                        providerType: identity[\"provider_type\"],\n                    };\n                });\n            }\n            else {\n                throw new Error(\"Expected 'identities' in the response body\");\n            }\n            if (typeof data === \"object\" && data !== null) {\n                const mappedData = Object.fromEntries(Object.entries(data).map(([key, value]) => {\n                    if (key in DATA_MAPPING) {\n                        // Translate any known data field to its JS idiomatic alias\n                        return [DATA_MAPPING[key], value];\n                    }\n                    else {\n                        // Pass through any other values\n                        return [key, value];\n                    }\n                }));\n                // We can use `any` since we trust the user supplies the correct type\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this.data = deserialize(mappedData);\n            }\n            else {\n                throw new Error(\"Expected 'data' in the response body\");\n            }\n        }\n        else {\n            this.data = {};\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * A `Storage` which will prefix a key part to every operation.\n */\nclass PrefixedStorage {\n    /**\n     * Construct a `Storage` which will prefix a key part to every operation.\n     *\n     * @param storage The underlying storage to use for operations.\n     * @param keyPart The part of the key to prefix when performing operations.\n     */\n    constructor(storage, keyPart) {\n        this.storage = storage;\n        this.keyPart = keyPart;\n    }\n    /** @inheritdoc */\n    get(key) {\n        return this.storage.get(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        return this.storage.set(this.keyPart + PrefixedStorage.PART_SEPARATOR + key, value);\n    }\n    /** @inheritdoc */\n    remove(key) {\n        return this.storage.remove(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix = \"\") {\n        return this.storage.clear(this.keyPart + PrefixedStorage.PART_SEPARATOR + prefix);\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        return this.storage.addListener(listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        return this.storage.addListener(listener);\n    }\n}\n/**\n * The string separating two parts.\n */\nPrefixedStorage.PART_SEPARATOR = \":\";\n\n////////////////////////////////////////////////////////////////////////////\nconst ACCESS_TOKEN_STORAGE_KEY = \"accessToken\";\nconst REFRESH_TOKEN_STORAGE_KEY = \"refreshToken\";\nconst PROFILE_STORAGE_KEY = \"profile\";\nconst PROVIDER_TYPE_STORAGE_KEY = \"providerType\";\n/**\n * Storage specific to the app.\n */\nclass UserStorage extends PrefixedStorage {\n    /**\n     * Construct a storage for a `User`.\n     *\n     * @param storage The underlying storage to wrap.\n     * @param userId The id of the user.\n     */\n    constructor(storage, userId) {\n        super(storage, `user(${userId})`);\n    }\n    /**\n     * Get the access token from storage.\n     *\n     * @returns Access token (null if unknown).\n     */\n    get accessToken() {\n        return this.get(ACCESS_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the access token in storage.\n     *\n     * @param value Access token (null if unknown).\n     */\n    set accessToken(value) {\n        if (value === null) {\n            this.remove(ACCESS_TOKEN_STORAGE_KEY);\n        }\n        else {\n            this.set(ACCESS_TOKEN_STORAGE_KEY, value);\n        }\n    }\n    /**\n     * Get the refresh token from storage.\n     *\n     * @returns Refresh token (null if unknown and user is logged out).\n     */\n    get refreshToken() {\n        return this.get(REFRESH_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the refresh token in storage.\n     *\n     * @param value Refresh token (null if unknown and user is logged out).\n     */\n    set refreshToken(value) {\n        if (value === null) {\n            this.remove(REFRESH_TOKEN_STORAGE_KEY);\n        }\n        else {\n            this.set(REFRESH_TOKEN_STORAGE_KEY, value);\n        }\n    }\n    /**\n     * Get the user profile from storage.\n     *\n     * @returns User profile (undefined if its unknown).\n     */\n    get profile() {\n        const value = this.get(PROFILE_STORAGE_KEY);\n        if (value) {\n            const profile = new UserProfile();\n            // Patch in the values\n            Object.assign(profile, JSON.parse(value));\n            return profile;\n        }\n    }\n    /**\n     * Set the user profile in storage.\n     *\n     * @param value User profile (undefined if its unknown).\n     */\n    set profile(value) {\n        if (value) {\n            this.set(PROFILE_STORAGE_KEY, JSON.stringify(value));\n        }\n        else {\n            this.remove(PROFILE_STORAGE_KEY);\n        }\n    }\n    /**\n     * Get the type of authentication provider used to authenticate\n     *\n     * @returns User profile (undefined if its unknown).\n     */\n    get providerType() {\n        const value = this.get(PROVIDER_TYPE_STORAGE_KEY);\n        if (value) {\n            return value;\n        }\n    }\n    /**\n     * Set the type of authentication provider used to authenticate\n     *\n     * @param value Type of authentication provider.\n     */\n    set providerType(value) {\n        if (value) {\n            this.set(PROVIDER_TYPE_STORAGE_KEY, value);\n        }\n        else {\n            this.remove(PROVIDER_TYPE_STORAGE_KEY);\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * @param obj The object to remove keys (and undefined values from)\n * @returns A new object without the keys where the value is undefined.\n */\nfunction removeKeysWithUndefinedValues(obj) {\n    return Object.fromEntries(Object.entries(obj).filter(entry => typeof entry[1] !== \"undefined\"));\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Generate a random sequence of characters.\n *\n * @param length The length of the string.\n * @param alphabet The alphabet of characters to pick from.\n * @returns A string of characters picked randomly from `alphabet`.\n */\nfunction generateRandomString(length, alphabet) {\n    let result = \"\";\n    for (let i = 0; i < length; i++) {\n        result += alphabet[Math.floor(Math.random() * alphabet.length)];\n    }\n    return result;\n}\n/**\n * Encode an object mapping from string to string, into a query string to be appended a URL.\n *\n * @param params The parameters to include in the string.\n * @param prefixed Should the \"?\" prefix be added if values exists?\n * @returns A URL encoded representation of the parameters (omitting a \"?\" prefix).\n */\nfunction encodeQueryString(params, prefixed = true) {\n    // Filter out undefined values\n    const cleanedParams = removeKeysWithUndefinedValues(params);\n    // Determine if a prefixed \"?\" is appropreate\n    const prefix = prefixed && Object.keys(cleanedParams).length > 0 ? \"?\" : \"\";\n    // Transform keys and values to a query string\n    return (prefix +\n        Object.entries(cleanedParams)\n            .map(([k, v]) => `${k}=${encodeURIComponent(v)}`)\n            .join(\"&\"));\n}\n/**\n * Decodes a query string into an object.\n *\n * @param str The query string to decode.\n * @returns The decoded query string.\n */\nfunction decodeQueryString(str) {\n    const cleanStr = str[0] === \"?\" ? str.substr(1) : str;\n    return Object.fromEntries(cleanStr\n        .split(\"&\")\n        .filter(s => s.length > 0)\n        .map(kvp => kvp.split(\"=\"))\n        .map(([k, v]) => [k, decodeURIComponent(v)]));\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A list of names that functions cannot have to be callable through the functions proxy.\n */\nconst RESERVED_NAMES = [\n    \"inspect\",\n    \"callFunction\",\n    \"callFunctionStreaming\",\n    // Methods defined on the Object.prototype might be \"typeof probed\" and called by libraries and runtime environments.\n    ...Object.getOwnPropertyNames(Object.prototype),\n];\n/**\n * Remove the key for any fields with undefined values.\n *\n * @param args The arguments to clean.\n * @returns The cleaned arguments.\n */\nfunction cleanArgs(args) {\n    for (const arg of args) {\n        if (typeof arg === \"object\") {\n            for (const [key, value] of Object.entries(arg)) {\n                if (value === undefined) {\n                    delete arg[key];\n                }\n            }\n        }\n    }\n    return args;\n}\n/**\n * Remove keys for any undefined values and serialize to EJSON.\n *\n * @param args The arguments to clean and serialize.\n * @returns The cleaned and serialized arguments.\n */\nfunction cleanArgsAndSerialize(args) {\n    const cleaned = cleanArgs(args);\n    return cleaned.map(arg => (typeof arg === \"object\" ? serialize(arg) : arg));\n}\n/**\n * Defines how functions are called.\n */\nclass FunctionsFactory {\n    /**\n     * @param fetcher The underlying fetcher to use when sending requests.\n     * @param config Additional configuration parameters.\n     */\n    constructor(fetcher, config = {}) {\n        this.fetcher = fetcher;\n        this.serviceName = config.serviceName;\n        this.argsTransformation =\n            config.argsTransformation || cleanArgsAndSerialize;\n    }\n    /**\n     * Create a factory of functions, wrapped in a Proxy that returns bound copies of `callFunction` on any property.\n     *\n     * @param fetcher The underlying fetcher to use when requesting.\n     * @param config Additional configuration parameters.\n     * @returns The newly created factory of functions.\n     */\n    static create(fetcher, config = {}) {\n        // Create a proxy, wrapping a simple object returning methods that calls functions\n        // TODO: Lazily fetch available functions and return these from the ownKeys() trap\n        const factory = new FunctionsFactory(fetcher, config);\n        // Wrap the factory in a proxy that calls the internal call method\n        return new Proxy(factory, {\n            get(target, p, receiver) {\n                if (typeof p === \"string\" && RESERVED_NAMES.indexOf(p) === -1) {\n                    return target.callFunction.bind(target, p);\n                }\n                else {\n                    const prop = Reflect.get(target, p, receiver);\n                    return typeof prop === \"function\"\n                        ? prop.bind(target)\n                        : prop;\n                }\n            },\n        });\n    }\n    /**\n     * Call a remote function by it's name.\n     *\n     * @param name Name of the remote function.\n     * @param args Arguments to pass to the remote function.\n     * @returns A promise of the value returned when executing the remote function.\n     */\n    async callFunction(name, ...args) {\n        // See https://github.com/mongodb/stitch-js-sdk/blob/master/packages/core/sdk/src/services/internal/CoreStitchServiceClientImpl.ts\n        const body = {\n            name,\n            arguments: this.argsTransformation\n                ? this.argsTransformation(args)\n                : args,\n        };\n        if (this.serviceName) {\n            body.service = this.serviceName;\n        }\n        const appRoute = this.fetcher.appRoute;\n        return this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.functionsCall().path,\n            body,\n        });\n    }\n    /**\n     * Call a remote function by it's name.\n     *\n     * @param name Name of the remote function.\n     * @param args Arguments to pass to the remote function.\n     * @returns A promise of the value returned when executing the remote function.\n     */\n    callFunctionStreaming(name, ...args) {\n        const body = {\n            name,\n            arguments: this.argsTransformation\n                ? this.argsTransformation(args)\n                : args,\n        };\n        if (this.serviceName) {\n            body.service = this.serviceName;\n        }\n        const appRoute = this.fetcher.appRoute;\n        const qs = encodeQueryString({\n            [\"baas_request\"]: Base64.encode(JSON.stringify(body)),\n        });\n        return this.fetcher.fetchStream({\n            method: \"GET\",\n            path: appRoute.functionsCall().path + qs,\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/** @inheritdoc */\nclass EmailPasswordAuth {\n    /**\n     * Construct an interface to the email / password authentication provider.\n     *\n     * @param fetcher The underlying fetcher used to request the services.\n     * @param providerName Optional custom name of the authentication provider.\n     */\n    constructor(fetcher, providerName = \"local-userpass\") {\n        this.fetcher = fetcher;\n        this.providerName = providerName;\n    }\n    /** @inheritdoc */\n    async registerUser(email, password) {\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).register().path,\n            body: { email, password },\n        });\n    }\n    /** @inheritdoc */\n    async confirmUser(token, tokenId) {\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).confirm().path,\n            body: { token, tokenId },\n        });\n    }\n    /** @inheritdoc */\n    async resendConfirmationEmail(email) {\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).confirmSend()\n                .path,\n            body: { email },\n        });\n    }\n    /** @inheritdoc */\n    async resetPassword(token, tokenId, password) {\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).reset().path,\n            body: { token, tokenId, password },\n        });\n    }\n    /** @inheritdoc */\n    async sendResetPasswordEmail(email) {\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).resetSend()\n                .path,\n            body: { email },\n        });\n    }\n    /** @inheritdoc */\n    async callResetPasswordFunction(email, password, ...args) {\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).resetCall()\n                .path,\n            body: { email, password, arguments: args },\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * @returns The base api route.\n */\nfunction api() {\n    return {\n        path: \"/api/client/v2.0\",\n        /**\n         * @param appId The id of the app.\n         * @returns The URL of the app endpoint.\n         */\n        app(appId) {\n            return {\n                path: this.path + `/app/${appId}`,\n                /**\n                 * @returns The URL of the app location endpoint.\n                 */\n                location() {\n                    return {\n                        path: this.path + \"/location\",\n                    };\n                },\n                /**\n                 * @param providerName The name of the provider.\n                 * @returns The app url concatinated with the /auth/providers/{providerName}\n                 */\n                authProvider(providerName) {\n                    return {\n                        path: this.path + `/auth/providers/${providerName}`,\n                        /**\n                         * @returns Get the URL of an authentication provider.\n                         */\n                        login() {\n                            return { path: this.path + \"/login\" };\n                        },\n                    };\n                },\n                /**\n                 * @param providerName The name of the provider.\n                 * @returns The app url concatinated with the /auth/providers/{providerName}\n                 */\n                emailPasswordAuth(providerName) {\n                    const authProviderRoutes = this.authProvider(providerName);\n                    return {\n                        ...authProviderRoutes,\n                        register() {\n                            return { path: this.path + \"/register\" };\n                        },\n                        confirm() {\n                            return { path: this.path + \"/confirm\" };\n                        },\n                        confirmSend() {\n                            return { path: this.path + \"/confirm/send\" };\n                        },\n                        reset() {\n                            return { path: this.path + \"/reset\" };\n                        },\n                        resetSend() {\n                            return { path: this.path + \"/reset/send\" };\n                        },\n                        resetCall() {\n                            return { path: this.path + \"/reset/call\" };\n                        },\n                    };\n                },\n                functionsCall() {\n                    return {\n                        path: this.path + \"/functions/call\",\n                    };\n                },\n            };\n        },\n        auth() {\n            return {\n                path: this.path + \"/auth\",\n                apiKeys() {\n                    return {\n                        path: this.path + \"/api_keys\",\n                        key(id) {\n                            return {\n                                path: this.path + `/${id}`,\n                                enable() {\n                                    return { path: this.path + \"/enable\" };\n                                },\n                                disable() {\n                                    return { path: this.path + \"/disable\" };\n                                },\n                            };\n                        },\n                    };\n                },\n                profile() {\n                    return { path: this.path + \"/profile\" };\n                },\n                session() {\n                    return { path: this.path + \"/session\" };\n                },\n            };\n        },\n    };\n}\nvar routes = { api };\n\n////////////////////////////////////////////////////////////////////////////\n/** @inheritdoc */\nclass ApiKeyAuth {\n    /**\n     * Construct an interface to the API-key authentication provider.\n     *\n     * @param fetcher The fetcher used to send requests to services.\n     * @param providerName Optional custom name of the authentication provider.\n     */\n    constructor(fetcher, providerName = \"api-key\") {\n        this.fetcher = fetcher;\n    }\n    /** @inheritdoc */\n    create(name) {\n        return this.fetcher.fetchJSON({\n            method: \"POST\",\n            body: { name },\n            path: routes.api().auth().apiKeys().path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    fetch(keyId) {\n        return this.fetcher.fetchJSON({\n            method: \"GET\",\n            path: routes.api().auth().apiKeys().key(keyId).path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    fetchAll() {\n        return this.fetcher.fetchJSON({\n            method: \"GET\",\n            tokenType: \"refresh\",\n            path: routes.api().auth().apiKeys().path,\n        });\n    }\n    /** @inheritdoc */\n    async delete(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"DELETE\",\n            path: routes.api().auth().apiKeys().key(keyId).path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    async enable(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"PUT\",\n            path: routes.api().auth().apiKeys().key(keyId).enable().path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    async disable(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"PUT\",\n            path: routes.api().auth().apiKeys().key(keyId).disable().path,\n            tokenType: \"refresh\",\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nlet environment = null;\n/**\n * Set the environment of execution.\n * Note: This should be called as the first thing before executing any code which calls getEnvironment()\n *\n * @param e An object containing environment specific implementations.\n */\nfunction setEnvironment(e) {\n    environment = e;\n}\n/**\n * Get the environment of execution.\n *\n * @returns An object containing environment specific implementations.\n */\nfunction getEnvironment() {\n    if (environment) {\n        return environment;\n    }\n    else {\n        throw new Error(\"Cannot get environment before it's set\");\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * An error occured during the parsing of a watch stream.\n */\nclass WatchError extends Error {\n    constructor({ message, code }) {\n        super(message);\n        /**\n         * The name of this type of error\n         */\n        this.name = \"WatchError\";\n        this.code = code;\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n// NOTE: this is a fully processed event, not a single \"data: foo\" line!\n/**\n * The state of a WatchStream.\n */\nvar WatchStreamState;\n(function (WatchStreamState) {\n    /**\n     * Need to call one of the feed functions.\n     */\n    WatchStreamState[\"NEED_DATA\"] = \"NEED_DATA\";\n    /**\n     * Call nextEvent() to consume an event.\n     */\n    WatchStreamState[\"HAVE_EVENT\"] = \"HAVE_EVENT\";\n    /**\n     * Call error().\n     */\n    WatchStreamState[\"HAVE_ERROR\"] = \"HAVE_ERROR\";\n})(WatchStreamState || (WatchStreamState = {}));\n/**\n * Represents a stream of events\n */\nclass WatchStream {\n    constructor() {\n        this._state = WatchStreamState.NEED_DATA;\n        this._error = null;\n        // Used by feedBuffer to construct lines\n        this._textDecoder = new (getEnvironment().TextDecoder)();\n        this._buffer = \"\";\n        this._bufferOffset = 0;\n        // Used by feedLine for building the next SSE\n        this._eventType = \"\";\n        this._dataBuffer = \"\";\n    }\n    // Call these when you have data, in whatever shape is easiest for your SDK to get.\n    // Pick one, mixing and matching on a single instance isn't supported.\n    // These can only be called in NEED_DATA state, which is the initial state.\n    feedBuffer(buffer) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        this._buffer += this._textDecoder.decode(buffer, { stream: true });\n        this.advanceBufferState();\n    }\n    feedLine(line) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        // This is an implementation of the algorithm described at\n        // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation.\n        // Currently the server does not use id or retry lines, so that processing isn't implemented.\n        // ignore trailing LF if not removed by SDK.\n        if (line.endsWith(\"\\n\"))\n            line = line.substr(0, line.length - 1);\n        // ignore trailing CR from CRLF\n        if (line.endsWith(\"\\r\"))\n            line = line.substr(0, line.length - 1);\n        if (line.length === 0) {\n            // This is the \"dispatch the event\" portion of the algorithm.\n            if (this._dataBuffer.length === 0) {\n                this._eventType = \"\";\n                return;\n            }\n            if (this._dataBuffer.endsWith(\"\\n\"))\n                this._dataBuffer = this._dataBuffer.substr(0, this._dataBuffer.length - 1);\n            this.feedSse({\n                data: this._dataBuffer,\n                eventType: this._eventType,\n            });\n            this._dataBuffer = \"\";\n            this._eventType = \"\";\n        }\n        if (line[0] === \":\")\n            return;\n        const colon = line.indexOf(\":\");\n        const field = line.substr(0, colon);\n        let value = colon === -1 ? \"\" : line.substr(colon + 1);\n        if (value.startsWith(\" \"))\n            value = value.substr(1);\n        if (field === \"event\") {\n            this._eventType = value;\n        }\n        else if (field === \"data\") {\n            this._dataBuffer += value;\n            this._dataBuffer += \"\\n\";\n        }\n        else ;\n    }\n    feedSse(sse) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        const firstPercentIndex = sse.data.indexOf(\"%\");\n        if (firstPercentIndex !== -1) {\n            // For some reason, the stich server decided to add percent-encoding for '%', '\\n', and '\\r' to its\n            // event-stream replies. But it isn't real urlencoding, since most characters pass through, so we can't use\n            // uri_percent_decode() here.\n            let buffer = \"\";\n            let start = 0;\n            for (let percentIndex = firstPercentIndex; percentIndex !== -1; percentIndex = sse.data.indexOf(\"%\", start)) {\n                buffer += sse.data.substr(start, percentIndex - start);\n                const encoded = sse.data.substr(percentIndex, 3); // may be smaller than 3 if string ends with %\n                if (encoded === \"%25\") {\n                    buffer += \"%\";\n                }\n                else if (encoded === \"%0A\") {\n                    buffer += \"\\x0A\"; // '\\n'\n                }\n                else if (encoded === \"%0D\") {\n                    buffer += \"\\x0D\"; // '\\r'\n                }\n                else {\n                    buffer += encoded; // propagate as-is\n                }\n                start = percentIndex + encoded.length;\n            }\n            // Advance the buffer with the last part\n            buffer += sse.data.substr(start);\n            sse.data = buffer;\n        }\n        if (!sse.eventType || sse.eventType === \"message\") {\n            try {\n                const parsed = EJSON.parse(sse.data);\n                if (typeof parsed === \"object\") {\n                    // ???\n                    this._nextEvent = parsed;\n                    this._state = WatchStreamState.HAVE_EVENT;\n                    return;\n                }\n            }\n            catch {\n                // fallthrough to same handling as for non-document value.\n            }\n            this._state = WatchStreamState.HAVE_ERROR;\n            this._error = new WatchError({\n                message: \"server returned malformed event: \" + sse.data,\n                code: \"bad bson parse\",\n            });\n        }\n        else if (sse.eventType === \"error\") {\n            this._state = WatchStreamState.HAVE_ERROR;\n            // default error message if we have issues parsing the reply.\n            this._error = new WatchError({\n                message: sse.data,\n                code: \"unknown\",\n            });\n            try {\n                const { error_code: errorCode, error } = EJSON.parse(sse.data);\n                if (typeof errorCode !== \"string\")\n                    return;\n                if (typeof error !== \"string\")\n                    return;\n                // XXX in realm-js, object-store will error if the error_code is not one of the known\n                // error code enum values.\n                this._error = new WatchError({\n                    message: error,\n                    code: errorCode,\n                });\n            }\n            catch {\n                return; // Use the default state.\n            }\n        }\n        else ;\n    }\n    get state() {\n        return this._state;\n    }\n    // Consumes the returned event. If you used feedBuffer(), there may be another event or error after this one,\n    // so you need to call state() again to see what to do next.\n    nextEvent() {\n        this.assertState(WatchStreamState.HAVE_EVENT);\n        // We can use \"as ChangeEvent<T>\" since we just asserted the state.\n        const out = this._nextEvent;\n        this._state = WatchStreamState.NEED_DATA;\n        this.advanceBufferState();\n        return out;\n    }\n    // Once this enters the error state, it stays that way. You should not feed any more data.\n    get error() {\n        return this._error;\n    }\n    ////////////////////////////////////////////\n    advanceBufferState() {\n        this.assertState(WatchStreamState.NEED_DATA);\n        while (this.state === WatchStreamState.NEED_DATA) {\n            if (this._bufferOffset === this._buffer.length) {\n                this._buffer = \"\";\n                this._bufferOffset = 0;\n                return;\n            }\n            // NOTE not supporting CR-only newlines, just LF and CRLF.\n            const nextNewlineIndex = this._buffer.indexOf(\"\\n\", this._bufferOffset);\n            if (nextNewlineIndex === -1) {\n                // We have a partial line.\n                if (this._bufferOffset !== 0) {\n                    // Slide the partial line down to the front of the buffer.\n                    this._buffer = this._buffer.substr(this._bufferOffset, this._buffer.length - this._bufferOffset);\n                    this._bufferOffset = 0;\n                }\n                return;\n            }\n            this.feedLine(this._buffer.substr(this._bufferOffset, nextNewlineIndex - this._bufferOffset));\n            this._bufferOffset = nextNewlineIndex + 1; // Advance past this line, including its newline.\n        }\n    }\n    assertState(state) {\n        if (this._state !== state) {\n            throw Error(`Expected WatchStream to be in state ${state}, but in state ${this._state}`);\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A remote collection of documents.\n */\nclass MongoDBCollection {\n    /**\n     * Construct a remote collection of documents.\n     *\n     * @param fetcher The fetcher to use when requesting the service.\n     * @param serviceName The name of the remote service.\n     * @param databaseName The name of the database.\n     * @param collectionName The name of the remote collection.\n     */\n    constructor(fetcher, serviceName, databaseName, collectionName) {\n        this.functions = FunctionsFactory.create(fetcher, {\n            serviceName,\n        });\n        this.databaseName = databaseName;\n        this.collectionName = collectionName;\n        this.serviceName = serviceName;\n        this.fetcher = fetcher;\n    }\n    /** @inheritdoc */\n    find(filter = {}, options = {}) {\n        return this.functions.find({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            project: options.projection,\n            sort: options.sort,\n            limit: options.limit,\n        });\n    }\n    /** @inheritdoc */\n    findOne(filter = {}, options = {}) {\n        return this.functions.findOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            project: options.projection,\n            sort: options.sort,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndUpdate(filter = {}, update, options = {}) {\n        return this.functions.findOneAndUpdate({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter,\n            update,\n            sort: options.sort,\n            projection: options.projection,\n            upsert: options.upsert,\n            returnNewDocument: options.returnNewDocument,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndReplace(filter = {}, replacement, options = {}) {\n        return this.functions.findOneAndReplace({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter: filter,\n            update: replacement,\n            sort: options.sort,\n            projection: options.projection,\n            upsert: options.upsert,\n            returnNewDocument: options.returnNewDocument,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndDelete(filter = {}, options = {}) {\n        return this.functions.findOneAndReplace({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter,\n            sort: options.sort,\n            projection: options.projection,\n        });\n    }\n    /** @inheritdoc */\n    aggregate(pipeline) {\n        return this.functions.aggregate({\n            database: this.databaseName,\n            collection: this.collectionName,\n            pipeline,\n        });\n    }\n    /** @inheritdoc */\n    count(filter = {}, options = {}) {\n        return this.functions.count({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            limit: options.limit,\n        });\n    }\n    /** @inheritdoc */\n    insertOne(document) {\n        return this.functions.insertOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            document,\n        });\n    }\n    /** @inheritdoc */\n    insertMany(documents) {\n        return this.functions.insertMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            documents,\n        });\n    }\n    /** @inheritdoc */\n    deleteOne(filter = {}) {\n        return this.functions.deleteOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n        });\n    }\n    /** @inheritdoc */\n    deleteMany(filter = {}) {\n        return this.functions.deleteMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n        });\n    }\n    /** @inheritdoc */\n    updateOne(filter, update, options = {}) {\n        return this.functions.updateOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            update,\n            upsert: options.upsert,\n        });\n    }\n    /** @inheritdoc */\n    updateMany(filter, update, options = {}) {\n        return this.functions.updateMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            update,\n            upsert: options.upsert,\n        });\n    }\n    async *watch({ ids, filter, } = {}) {\n        const iterator = await this.functions.callFunctionStreaming(\"watch\", {\n            database: this.databaseName,\n            collection: this.collectionName,\n            ids,\n            filter,\n        });\n        const watchStream = new WatchStream();\n        for await (const chunk of iterator) {\n            if (!chunk)\n                continue;\n            watchStream.feedBuffer(chunk);\n            while (watchStream.state == WatchStreamState.HAVE_EVENT) {\n                yield watchStream.nextEvent();\n            }\n            if (watchStream.state == WatchStreamState.HAVE_ERROR)\n                // XXX this is just throwing an error like {error_code: \"BadRequest, error: \"message\"},\n                // which matches realm-js, but is different from how errors are handled in realm-web\n                throw watchStream.error;\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Creates an Remote MongoDB Collection.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName A service name.\n * @param databaseName A database name.\n * @param collectionName A collection name.\n * @returns The collection.\n */\nfunction createCollection(fetcher, serviceName, databaseName, collectionName) {\n    return new MongoDBCollection(fetcher, serviceName, databaseName, collectionName);\n}\n/**\n * Creates a Remote MongoDB Database.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher\n * @param serviceName A service name\n * @param databaseName A database name\n * @returns The database.\n */\nfunction createDatabase(fetcher, serviceName, databaseName) {\n    return {\n        collection: createCollection.bind(null, fetcher, serviceName, databaseName),\n    };\n}\n/**\n * Creates a Remote MongoDB Service.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName An optional service name.\n * @returns The service.\n */\nfunction createService(fetcher, serviceName = \"mongo-db\") {\n    return { db: createDatabase.bind(null, fetcher, serviceName) };\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst DEFAULT_DEVICE_ID = \"000000000000000000000000\";\n/** The state of a user within the app */\nvar UserState;\n(function (UserState) {\n    /** Active, with both access and refresh tokens */\n    UserState[\"Active\"] = \"active\";\n    /** Logged out, but there might still be data persisted about the user, in the browser. */\n    UserState[\"LoggedOut\"] = \"logged-out\";\n    /** Logged out and all data about the user has been removed. */\n    UserState[\"Removed\"] = \"removed\";\n})(UserState || (UserState = {}));\n/** The type of a user. */\nvar UserType$1;\n(function (UserType) {\n    /** Created by the user itself. */\n    UserType[\"Normal\"] = \"normal\";\n    /** Created by an administrator of the app. */\n    UserType[\"Server\"] = \"server\";\n})(UserType$1 || (UserType$1 = {}));\n/**\n * Representation of an authenticated user of an app.\n */\nclass User {\n    /**\n     * @param parameters Parameters of the user.\n     */\n    constructor(parameters) {\n        this.app = parameters.app;\n        this.id = parameters.id;\n        this.storage = new UserStorage(this.app.storage, this.id);\n        if (\"accessToken\" in parameters &&\n            \"refreshToken\" in parameters &&\n            \"providerType\" in parameters) {\n            this._accessToken = parameters.accessToken;\n            this._refreshToken = parameters.refreshToken;\n            this.providerType = parameters.providerType;\n            // Save the parameters to storage, for future instances to be hydrated from\n            this.storage.accessToken = parameters.accessToken;\n            this.storage.refreshToken = parameters.refreshToken;\n            this.storage.providerType = parameters.providerType;\n        }\n        else {\n            // Hydrate the rest of the parameters from storage\n            this._accessToken = this.storage.accessToken;\n            this._refreshToken = this.storage.refreshToken;\n            const providerType = this.storage.providerType;\n            this._profile = this.storage.profile;\n            if (providerType) {\n                this.providerType = providerType;\n            }\n            else {\n                throw new Error(\"Storage is missing a provider type\");\n            }\n        }\n        this.fetcher = this.app.fetcher.clone({\n            userContext: { currentUser: this },\n        });\n        this.apiKeys = new ApiKeyAuth(this.fetcher);\n        this.functions = FunctionsFactory.create(this.fetcher);\n    }\n    /**\n     * @returns The access token used to authenticate the user towards MongoDB Realm.\n     */\n    get accessToken() {\n        return this._accessToken;\n    }\n    /**\n     * @param token The new access token.\n     */\n    set accessToken(token) {\n        this._accessToken = token;\n        this.storage.accessToken = token;\n    }\n    /**\n     * @returns The refresh token used to issue new access tokens.\n     */\n    get refreshToken() {\n        return this._refreshToken;\n    }\n    /**\n     * @param token The new refresh token.\n     */\n    set refreshToken(token) {\n        this._refreshToken = token;\n        this.storage.refreshToken = token;\n    }\n    /**\n     * @returns The current state of the user.\n     */\n    get state() {\n        if (this.id in this.app.allUsers) {\n            return this.refreshToken === null\n                ? UserState.LoggedOut\n                : UserState.Active;\n        }\n        else {\n            return UserState.Removed;\n        }\n    }\n    /**\n     * @returns The logged in state of the user.\n     */\n    get isLoggedIn() {\n        return this.state === UserState.Active;\n    }\n    get customData() {\n        if (this.accessToken) {\n            const decodedToken = this.decodeAccessToken();\n            return decodedToken.userData;\n        }\n        else {\n            throw new Error(\"Cannot read custom data without an access token\");\n        }\n    }\n    /**\n     * @returns Profile containing detailed information about the user.\n     */\n    get profile() {\n        if (this._profile) {\n            return this._profile.data;\n        }\n        else {\n            throw new Error(\"A profile was never fetched for this user\");\n        }\n    }\n    get identities() {\n        if (this._profile) {\n            return this._profile.identities;\n        }\n        else {\n            throw new Error(\"A profile was never fetched for this user\");\n        }\n    }\n    get deviceId() {\n        if (this.accessToken) {\n            const payload = this.accessToken.split(\".\")[1];\n            if (payload) {\n                const parsedPayload = JSON.parse(base64.Base64.decode(payload));\n                const deviceId = parsedPayload[\"baas_device_id\"];\n                if (typeof deviceId === \"string\" &&\n                    deviceId !== DEFAULT_DEVICE_ID) {\n                    return deviceId;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Refresh the users profile data.\n     */\n    async refreshProfile() {\n        // Fetch the latest profile\n        const response = await this.fetcher.fetchJSON({\n            method: \"GET\",\n            path: routes.api().auth().profile().path,\n        });\n        // Create a profile instance\n        this._profile = new UserProfile(response);\n        // Store this for later hydration\n        this.storage.profile = this._profile;\n    }\n    /**\n     * Log out the user, invalidating the session (and its refresh token).\n     */\n    async logOut() {\n        // Invalidate the refresh token\n        try {\n            if (this._refreshToken !== null) {\n                await this.fetcher.fetchJSON({\n                    method: \"DELETE\",\n                    path: routes.api().auth().session().path,\n                    tokenType: \"refresh\",\n                });\n            }\n        }\n        finally {\n            // Forget the access and refresh token\n            this.accessToken = null;\n            this.refreshToken = null;\n        }\n    }\n    /** @inheritdoc */\n    async linkCredentials(credentials) {\n        const response = await this.app.authenticator.authenticate(credentials, this);\n        // Sanity check the response\n        if (this.id !== response.userId) {\n            const details = `got user id ${response.userId} expected ${this.id}`;\n            throw new Error(`Link response ment for another user (${details})`);\n        }\n        // Update the access token\n        this.accessToken = response.accessToken;\n        // Refresh the profile to include the new identity\n        await this.refreshProfile();\n    }\n    /**\n     * Request a new access token, using the refresh token.\n     */\n    async refreshAccessToken() {\n        const response = await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: routes.api().auth().session().path,\n            tokenType: \"refresh\",\n        });\n        const { access_token: accessToken } = response;\n        if (typeof accessToken === \"string\") {\n            this.accessToken = accessToken;\n        }\n        else {\n            throw new Error(\"Expected an 'access_token' in the response\");\n        }\n    }\n    /** @inheritdoc */\n    async refreshCustomData() {\n        await this.refreshAccessToken();\n        return this.customData;\n    }\n    /** @inheritdoc */\n    callFunction(name, ...args) {\n        return this.functions.callFunction(name, ...args);\n    }\n    /**\n     * @returns A plain ol' JavaScript object representation of the user.\n     */\n    toJSON() {\n        return {\n            id: this.id,\n            accessToken: this.accessToken,\n            refreshToken: this.refreshToken,\n            profile: this._profile,\n            state: this.state,\n            customData: this.customData,\n        };\n    }\n    /** @inheritdoc */\n    push(serviceName = \"\") {\n        throw new Error(\"Not yet implemented\");\n    }\n    /** @inheritdoc */\n    mongoClient(serviceName) {\n        return createService(this.fetcher, serviceName);\n    }\n    decodeAccessToken() {\n        if (this.accessToken) {\n            // Decode and spread the token\n            const parts = this.accessToken.split(\".\");\n            if (parts.length !== 3) {\n                throw new Error(\"Expected an access token with three parts\");\n            }\n            // Decode the payload\n            const encodedPayload = parts[1];\n            const decodedPayload = base64.Base64.decode(encodedPayload);\n            const parsedPayload = JSON.parse(decodedPayload);\n            const { exp: expires, iat: issuedAt, sub: subject, user_data: userData = {}, } = parsedPayload;\n            // Validate the types\n            if (typeof expires !== \"number\") {\n                throw new Error(\"Failed to decode access token 'exp'\");\n            }\n            else if (typeof issuedAt !== \"number\") {\n                throw new Error(\"Failed to decode access token 'iat'\");\n            }\n            return { expires, issuedAt, subject, userData };\n        }\n        else {\n            throw new Error(\"Missing an access token\");\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Ensure the static interface of the Credentials class implements the static interface of Realm.Credentials\n// See https://stackoverflow.com/a/43484801\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\nclass Credentials {\n    /**\n     * Constructs an instance of credentials.\n     *\n     * @param providerName The name of the authentication provider used when authenticating.\n     * @param providerType The type of the authentication provider used when authenticating.\n     * @param payload The data being sent to the service when authenticating.\n     */\n    constructor(providerName, providerType, payload) {\n        this.providerName = providerName;\n        this.providerType = providerType;\n        this.payload = payload;\n    }\n    /**\n     * Creates credentials that logs in using the [Anonymous Provider](https://docs.mongodb.com/realm/authentication/anonymous/).\n     *\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static anonymous() {\n        return new Credentials(\"anon-user\", \"anon-user\", {});\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static userApiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static serverApiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static apiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [Email/Password Provider](https://docs.mongodb.com/realm/authentication/email-password/).\n     * Note: This was formerly known as the \"Username/Password\" provider.\n     *\n     * @param email The end-users email address.\n     * @param password The end-users password.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static emailPassword(email, password) {\n        return new Credentials(\"local-userpass\", \"local-userpass\", {\n            username: email,\n            password,\n        });\n    }\n    /**\n     * Creates credentials that logs in using the [Custom Function Provider](https://docs.mongodb.com/realm/authentication/custom-function/).\n     *\n     * @param payload The custom payload as expected by the server.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static function(payload) {\n        return new Credentials(\"custom-function\", \"custom-function\", payload);\n    }\n    /**\n     * Creates credentials that logs in using the [Custom JWT Provider](https://docs.mongodb.com/realm/authentication/custom-jwt/).\n     *\n     * @param token The JSON Web Token (JWT).\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static jwt(token) {\n        return new Credentials(\"custom-token\", \"custom-token\", {\n            token,\n        });\n    }\n    /**\n     * Creates credentials that logs in using the [Google Provider](https://docs.mongodb.com/realm/authentication/google/).\n     *\n     * @param payload The URL that users should be redirected to, the auth code or id token from Google.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static google(payload) {\n        return new Credentials(\"oauth2-google\", \"oauth2-google\", Credentials.derivePayload(payload));\n    }\n    /**\n     * @param payload The payload string.\n     * @returns A payload object based on the string.\n     */\n    static derivePayload(payload) {\n        if (typeof payload === \"string\") {\n            if (payload.includes(\"://\")) {\n                return this.derivePayload({ redirectUrl: payload });\n            }\n            else if (payload.startsWith(\"4/\")) {\n                return this.derivePayload({ authCode: payload });\n            }\n            else if (payload.startsWith(\"ey\")) {\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                return this.derivePayload({ idToken: payload });\n            }\n            else {\n                throw new Error(`Unexpected payload: ${payload}`);\n            }\n        }\n        else if (Object.keys(payload).length === 1) {\n            if (\"authCode\" in payload || \"redirectUrl\" in payload) {\n                return payload;\n            }\n            else if (\"idToken\" in payload) {\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                return { id_token: payload.idToken };\n            }\n            else {\n                throw new Error(\"Unexpected payload: \" + JSON.stringify(payload));\n            }\n        }\n        else {\n            throw new Error(\"Expected only one property in payload, got \" +\n                JSON.stringify(payload));\n        }\n    }\n    /**\n     * Creates credentials that logs in using the [Facebook Provider](https://docs.mongodb.com/realm/authentication/facebook/).\n     *\n     * @param redirectUrlOrAccessToken The URL that users should be redirected to or the auth code returned from Facebook.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static facebook(redirectUrlOrAccessToken) {\n        return new Credentials(\"oauth2-facebook\", \"oauth2-facebook\", redirectUrlOrAccessToken.includes(\"://\")\n            ? { redirectUrl: redirectUrlOrAccessToken }\n            : { accessToken: redirectUrlOrAccessToken });\n    }\n    /**\n     * Creates credentials that logs in using the [Apple ID Provider](https://docs.mongodb.com/realm/authentication/apple/).\n     *\n     * @param redirectUrlOrIdToken The URL that users should be redirected to or the id_token returned from Apple.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static apple(redirectUrlOrIdToken) {\n        return new Credentials(\"oauth2-apple\", \"oauth2-apple\", redirectUrlOrIdToken.includes(\"://\")\n            ? { redirectUrl: redirectUrlOrIdToken }\n            : {\n                // eslint-disable-next-line @typescript-eslint/camelcase\n                id_token: redirectUrlOrIdToken,\n            });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst USER_IDS_STORAGE_KEY = \"userIds\";\nconst DEVICE_ID_STORAGE_KEY = \"deviceId\";\n/**\n * Storage specific to the app.\n */\nclass AppStorage extends PrefixedStorage {\n    /**\n     * @param storage The underlying storage to wrap.\n     * @param appId The id of the app.\n     */\n    constructor(storage, appId) {\n        super(storage, `app(${appId})`);\n    }\n    /**\n     * Reads out the list of user ids from storage.\n     *\n     * @returns A list of user ids.\n     */\n    getUserIds() {\n        const userIdsString = this.get(USER_IDS_STORAGE_KEY);\n        const userIds = userIdsString ? JSON.parse(userIdsString) : [];\n        if (Array.isArray(userIds)) {\n            // Remove any duplicates that might have been added\n            // The Set preserves insertion order\n            return [...new Set(userIds)];\n        }\n        else {\n            throw new Error(\"Expected the user ids to be an array\");\n        }\n    }\n    /**\n     * Sets the list of ids in storage.\n     * Optionally merging with existing ids stored in the storage, by prepending these while voiding duplicates.\n     *\n     * @param userIds The list of ids to store.\n     * @param mergeWithExisting Prepend existing ids to avoid data-races with other apps using this storage.\n     */\n    setUserIds(userIds, mergeWithExisting) {\n        if (mergeWithExisting) {\n            // Add any existing user id to the end of this list, avoiding duplicates\n            const existingIds = this.getUserIds();\n            for (const id of existingIds) {\n                if (userIds.indexOf(id) === -1) {\n                    userIds.push(id);\n                }\n            }\n        }\n        // Store the list of ids\n        this.set(USER_IDS_STORAGE_KEY, JSON.stringify(userIds));\n    }\n    /**\n     * Remove an id from the list of ids.\n     *\n     * @param userId The id of a User to be removed.\n     */\n    removeUserId(userId) {\n        const existingIds = this.getUserIds();\n        const userIds = existingIds.filter(id => id !== userId);\n        // Store the list of ids\n        this.setUserIds(userIds, false);\n    }\n    /**\n     * @returns id of this device (if any exists)\n     */\n    getDeviceId() {\n        return this.get(DEVICE_ID_STORAGE_KEY);\n    }\n    /**\n     * @param deviceId The id of this device, to send on subsequent authentication requests.\n     */\n    setDeviceId(deviceId) {\n        this.set(DEVICE_ID_STORAGE_KEY, deviceId);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nconst LOWERCASE_LETTERS = \"abcdefghijklmnopqrstuvwxyz\";\nconst CLOSE_CHECK_INTERVAL = 100; // 10 times per second\n/* eslint-disable @typescript-eslint/camelcase */\nconst REDIRECT_HASH_TO_RESULT = {\n    _stitch_client_app_id: \"appId\",\n    _baas_client_app_id: \"appId\",\n    _stitch_ua: \"userAuth\",\n    _baas_ua: \"userAuth\",\n    _stitch_link: \"link\",\n    _baas_link: \"link\",\n    _stitch_error: \"error\",\n    _baas_error: \"error\",\n    _stitch_state: \"state\",\n    _baas_state: \"state\",\n};\n/* eslint-enable @typescript-eslint/camelcase */\n/**\n * A collection of methods helping implement the OAuth2 flow.\n */\nclass OAuth2Helper {\n    /**\n     * @param storage The underlying storage to use when storing and retriving secrets.\n     * @param openWindow An optional function called when a browser window needs to open.\n     */\n    constructor(storage, openWindow = getEnvironment().openWindow) {\n        this.storage = storage.prefix(\"oauth2\");\n        this.openWindow = openWindow;\n    }\n    /**\n     * Parses the query string from the final step of the OAuth flow.\n     *\n     * @param queryString The query string passed through in location.hash.\n     * @returns The result of the OAuth flow.\n     */\n    static parseRedirectLocation(queryString) {\n        const params = decodeQueryString(queryString);\n        const result = {};\n        for (const [p, r] of Object.entries(REDIRECT_HASH_TO_RESULT)) {\n            const value = params[p];\n            if (value) {\n                result[r] = value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Handle the redirect querystring by parsing it and storing it for others to consume.\n     *\n     * @param queryString The query string containing the encoded result from the OAuth provider.\n     * @param storage The underlying storage used to persist the result.\n     */\n    static handleRedirect(queryString, storage = getEnvironment().defaultStorage) {\n        const result = OAuth2Helper.parseRedirectLocation(queryString);\n        const { state, error } = result;\n        if (typeof state === \"string\") {\n            const oauth2Storage = storage.prefix(\"oauth2\");\n            const stateStorage = OAuth2Helper.getStateStorage(oauth2Storage, state);\n            stateStorage.set(\"result\", JSON.stringify(result));\n        }\n        else if (error) {\n            throw new Error(`Failed to handle OAuth 2.0 redirect: ${error}`);\n        }\n        else {\n            throw new Error(\"Failed to handle OAuth 2.0 redirect.\");\n        }\n    }\n    /**\n     * Decodes the authInfo string into its seperate parts.\n     *\n     * @param authInfo An authInfo string returned from the server.\n     * @returns An object containing the separate parts of the authInfo string.\n     */\n    static decodeAuthInfo(authInfo) {\n        const parts = (authInfo || \"\").split(\"$\");\n        if (parts.length === 4) {\n            const [accessToken, refreshToken, userId, deviceId] = parts;\n            return { accessToken, refreshToken, userId, deviceId };\n        }\n        else {\n            throw new Error(\"Failed to decode 'authInfo' into ids and tokens\");\n        }\n    }\n    /**\n     * Get the storage key associated of an secret associated with a state.\n     *\n     * @param storage The root storage used to derive a \"state namespaced\" storage.\n     * @param state The random state.\n     * @returns The storage associated with a particular state.\n     */\n    static getStateStorage(storage, state) {\n        return storage.prefix(`state(${state})`);\n    }\n    /**\n     * Open a window and wait for the redirect to be handled.\n     *\n     * @param url The URL to open.\n     * @param state The state which will be used to listen for storage updates.\n     * @returns The result passed through the redirect.\n     */\n    openWindowAndWaitForRedirect(url, state) {\n        const stateStorage = OAuth2Helper.getStateStorage(this.storage, state);\n        // Return a promise that resolves when the  gets known\n        return new Promise((resolve, reject) => {\n            let redirectWindow = null;\n            // We're declaring the interval now to enable referencing before its initialized\n            let windowClosedInterval; // eslint-disable-line prefer-const\n            const handleStorageUpdate = () => {\n                // Trying to get the secret from storage\n                const result = stateStorage.get(\"result\");\n                if (result) {\n                    const parsedResult = JSON.parse(result);\n                    // The secret got updated!\n                    stateStorage.removeListener(handleStorageUpdate);\n                    // Clear the storage to prevent others from reading this\n                    stateStorage.clear();\n                    // Try closing the newly created window\n                    try {\n                        if (redirectWindow) {\n                            // Stop checking if the window closed\n                            clearInterval(windowClosedInterval);\n                            redirectWindow.close();\n                        }\n                    }\n                    catch (err) {\n                        console.warn(`Failed closing redirect window: ${err}`);\n                    }\n                    finally {\n                        resolve(parsedResult);\n                    }\n                }\n            };\n            // Add a listener to the state storage, awaiting an update to the secret\n            stateStorage.addListener(handleStorageUpdate);\n            // Open up a window\n            redirectWindow = this.openWindow(url);\n            // Not using a const, because we need the two listeners to reference each other when removing the other.\n            windowClosedInterval = setInterval(() => {\n                // Polling \"closed\" because registering listeners on the window violates cross-origin policies\n                if (!redirectWindow) {\n                    // No need to keep polling for a window that we can't check\n                    clearInterval(windowClosedInterval);\n                }\n                else if (redirectWindow.closed) {\n                    // Stop polling the window state\n                    clearInterval(windowClosedInterval);\n                    // Stop listening for changes to the storage\n                    stateStorage.removeListener(handleStorageUpdate);\n                    // Reject the promise\n                    const err = new Error(\"Window closed\");\n                    reject(err);\n                }\n            }, CLOSE_CHECK_INTERVAL);\n        });\n    }\n    /**\n     * Generate a random state string.\n     *\n     * @returns The random state string.\n     */\n    generateState() {\n        return generateRandomString(12, LOWERCASE_LETTERS);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst REDIRECT_LOCATION_HEADER = \"x-baas-location\";\n/**\n * Handles authentication and linking of users.\n */\nclass Authenticator {\n    /**\n     * @param fetcher The fetcher used to fetch responses from the server.\n     * @param storage The storage used when completing OAuth 2.0 flows (should not be scoped to a specific app).\n     * @param getDeviceInformation Called to get device information to be sent to the server.\n     */\n    constructor(fetcher, storage, getDeviceInformation) {\n        this.fetcher = fetcher;\n        this.oauth2 = new OAuth2Helper(storage);\n        this.getDeviceInformation = getDeviceInformation;\n    }\n    /**\n     * @param credentials Credentials to use when logging in.\n     * @param linkingUser A user requesting to link.\n     */\n    async authenticate(credentials, linkingUser) {\n        const deviceInformation = this.getDeviceInformation();\n        const isLinking = typeof linkingUser === \"object\";\n        if (credentials.providerType.startsWith(\"oauth2\") &&\n            typeof credentials.payload.redirectUrl === \"string\") {\n            // Initiate the OAuth2 flow by generating a state and fetch a redirect URL\n            const state = this.oauth2.generateState();\n            const url = await this.getLogInUrl(credentials, isLinking, {\n                state,\n                redirect: credentials.payload.redirectUrl,\n                // Ensure redirects are communicated in a header different from \"Location\" and status remains 200 OK\n                providerRedirectHeader: isLinking ? true : undefined,\n                // Add the device information, only if we're not linking - since that request won't have a body of its own.\n                device: !isLinking ? deviceInformation.encode() : undefined,\n            });\n            // If we're linking, we need to send the users access token in the request\n            if (isLinking) {\n                const response = await this.fetcher.fetch({\n                    method: \"GET\",\n                    url,\n                    tokenType: isLinking ? \"access\" : \"none\",\n                    user: linkingUser,\n                    // The response will set a cookie that we need to tell the browser to store\n                    mode: \"cors\",\n                    credentials: \"include\",\n                });\n                // If a response header contains a redirect URL: Open a window and wait for the redirect to be handled\n                const redirectUrl = response.headers.get(REDIRECT_LOCATION_HEADER);\n                if (redirectUrl) {\n                    return this.openWindowAndWaitForAuthResponse(redirectUrl, state);\n                }\n                else {\n                    throw new Error(`Missing ${REDIRECT_LOCATION_HEADER} header`);\n                }\n            }\n            else {\n                // Otherwise we can open a window and let the server redirect the user right away\n                // This gives lower latency (as we don't need the client to receive and execute the redirect in code)\n                // This also has less dependency on cookies and doesn't sent any tokens.\n                return this.openWindowAndWaitForAuthResponse(url, state);\n            }\n        }\n        else {\n            const logInUrl = await this.getLogInUrl(credentials, isLinking);\n            const response = await this.fetcher.fetchJSON({\n                method: \"POST\",\n                url: logInUrl,\n                body: {\n                    ...credentials.payload,\n                    options: {\n                        device: deviceInformation.toJSON(),\n                    },\n                },\n                tokenType: isLinking ? \"access\" : \"none\",\n                user: linkingUser,\n            });\n            // Spread out values from the response and ensure they're valid\n            const { user_id: userId, access_token: accessToken, refresh_token: refreshToken = null, device_id: deviceId, } = response;\n            if (typeof userId !== \"string\") {\n                throw new Error(\"Expected a user id in the response\");\n            }\n            if (typeof accessToken !== \"string\") {\n                throw new Error(\"Expected an access token in the response\");\n            }\n            return { userId, accessToken, refreshToken, deviceId };\n        }\n    }\n    /**\n     * @param credentials Credentials to use when logging in.\n     * @param link Should the request link with the current user?\n     * @param extraQueryParams Any extra parameters to include in the query string\n     */\n    async getLogInUrl(credentials, link = false, extraQueryParams = {}) {\n        // See https://github.com/mongodb/stitch-js-sdk/blob/310f0bd5af80f818cdfbc3caf1ae29ffa8e9c7cf/packages/core/sdk/src/auth/internal/CoreStitchAuth.ts#L746-L780\n        const appRoute = this.fetcher.appRoute;\n        const loginRoute = appRoute\n            .authProvider(credentials.providerName)\n            .login();\n        const qs = encodeQueryString({\n            link: link ? \"true\" : undefined,\n            ...extraQueryParams,\n        });\n        const locationUrl = await this.fetcher.locationUrl;\n        return locationUrl + loginRoute.path + qs;\n    }\n    async openWindowAndWaitForAuthResponse(redirectUrl, state) {\n        const redirectResult = await this.oauth2.openWindowAndWaitForRedirect(redirectUrl, state);\n        // Decode the auth info (id, tokens, etc.) from the result of the redirect\n        return OAuth2Helper.decodeAuthInfo(redirectResult.userAuth);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Determine if the shape of an error response is specific to each service or widely used.\n/**\n * An error produced while communicating with the MongoDB Realm server.\n */\nclass MongoDBRealmError extends Error {\n    constructor(method, url, statusCode, statusText, error, errorCode, link) {\n        const summary = statusText\n            ? `status ${statusCode} ${statusText}`\n            : `status ${statusCode}`;\n        if (typeof error === \"string\") {\n            super(`Request failed (${method} ${url}): ${error} (${summary})`);\n        }\n        else {\n            super(`Request failed (${method} ${url}): (${summary})`);\n        }\n        this.method = method;\n        this.url = url;\n        this.statusText = statusText;\n        this.statusCode = statusCode;\n        this.error = error;\n        this.errorCode = errorCode;\n        this.link = link;\n    }\n    /**\n     * Constructs and returns an error from a request and a response.\n     * Note: The caller must throw this error themselves.\n     *\n     * @param request The request sent to the server.\n     * @param response A raw response, as returned from the server.\n     */\n    static async fromRequestAndResponse(request, response) {\n        var _a;\n        const { url, method } = request;\n        const { status, statusText } = response;\n        if ((_a = response.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.startsWith(\"application/json\")) {\n            const body = await response.json();\n            const error = body.error || \"No message\";\n            const errorCode = body.error_code;\n            const link = body.link;\n            return new MongoDBRealmError(method, url, status, statusText, error, errorCode, link);\n        }\n        else {\n            return new MongoDBRealmError(method, url, status, statusText);\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * @param body A possible resonse body.\n * @returns An async iterator.\n */\nfunction asyncIteratorFromResponseBody(body) {\n    if (typeof body !== \"object\" || body === null) {\n        throw new Error(\"Expected a non-null object\");\n    }\n    else if (Symbol.asyncIterator in body) {\n        return body;\n    }\n    else if (\"getReader\" in body) {\n        const stream = body;\n        return {\n            [Symbol.asyncIterator]() {\n                const reader = stream.getReader();\n                return {\n                    next() {\n                        return reader.read();\n                    },\n                    async return() {\n                        await reader.cancel();\n                        return { done: true, value: null };\n                    },\n                };\n            },\n        };\n    }\n    else {\n        throw new Error(\"Expected an AsyncIterable or a ReadableStream\");\n    }\n}\n/**\n * Wraps a NetworkTransport from the \"realm-network-transport\" package.\n * Extracts error messages and throws `MongoDBRealmError` objects upon failures.\n * Injects access or refresh tokens for a current or specific user.\n * Refreshes access tokens if requests fails due to a 401 error.\n * Optionally parses response as JSON before returning it.\n * Fetches and exposes an app's location url.\n */\nclass Fetcher {\n    /**\n     * @param config A configuration of the fetcher.\n     */\n    constructor({ appId, transport, userContext, locationUrlContext, }) {\n        this.appId = appId;\n        this.transport = transport;\n        this.userContext = userContext;\n        this.locationUrlContext = locationUrlContext;\n    }\n    /**\n     * @param user An optional user to generate the header for.\n     * @param tokenType The type of token (access or refresh).\n     * @returns An object containing the user's token as \"Authorization\" header or undefined if no user is given.\n     */\n    static buildAuthorizationHeader(user, tokenType) {\n        if (!user || tokenType === \"none\") {\n            return {};\n        }\n        else if (tokenType === \"access\") {\n            return { Authorization: `Bearer ${user.accessToken}` };\n        }\n        else if (tokenType === \"refresh\") {\n            return { Authorization: `Bearer ${user.refreshToken}` };\n        }\n        else {\n            throw new Error(`Unexpected token type (${tokenType})`);\n        }\n    }\n    /**\n     * @param body The body string or object passed from a request.\n     * @returns An object optionally specifying the \"Content-Type\" header.\n     */\n    static buildBody(body) {\n        if (!body) {\n            return;\n        }\n        else if (typeof body === \"object\" && body !== null) {\n            return JSON.stringify(serialize(body));\n        }\n        else if (typeof body === \"string\") {\n            return body;\n        }\n        else {\n            console.log(\"body is\", body);\n            throw new Error(\"Unexpected type of body\");\n        }\n    }\n    /**\n     * @param body The body string or object passed from a request.\n     * @returns An object optionally specifying the \"Content-Type\" header.\n     */\n    static buildJsonHeader(body) {\n        if (body && body.length > 0) {\n            return { \"Content-Type\": \"application/json\" };\n        }\n        else {\n            return {};\n        }\n    }\n    clone(config) {\n        return new Fetcher({\n            appId: this.appId,\n            transport: this.transport,\n            userContext: this.userContext,\n            locationUrlContext: this.locationUrlContext,\n            ...config,\n        });\n    }\n    /**\n     * Fetch a network resource as an authenticated user.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns The response from the server.\n     */\n    async fetch(request) {\n        const { path, url, tokenType = \"access\", user = this.userContext.currentUser, ...restOfRequest } = request;\n        if (typeof path === \"string\" && typeof url === \"string\") {\n            throw new Error(\"Use of 'url' and 'path' mutually exclusive\");\n        }\n        else if (typeof path === \"string\") {\n            // Derive the URL\n            const url = (await this.locationUrlContext.locationUrl) + path;\n            return this.fetch({ ...request, path: undefined, url });\n        }\n        else if (typeof url === \"string\") {\n            const response = await this.transport.fetch({\n                ...restOfRequest,\n                url,\n                headers: {\n                    ...Fetcher.buildAuthorizationHeader(user, tokenType),\n                    ...request.headers,\n                },\n            });\n            if (response.ok) {\n                return response;\n            }\n            else if (user &&\n                response.status === 401 &&\n                tokenType === \"access\") {\n                // If the access token has expired, it would help refreshing it\n                await user.refreshAccessToken();\n                // Retry with the specific user, since the currentUser might have changed.\n                return this.fetch({ ...request, user });\n            }\n            else {\n                if (user &&\n                    response.status === 401 &&\n                    tokenType === \"refresh\") {\n                    // A 401 error while using the refresh token indicates the token has an issue.\n                    // Reset the tokens to prevent a lock.\n                    user.accessToken = null;\n                    user.refreshToken = null;\n                }\n                // Throw an error with a message extracted from the body\n                throw await MongoDBRealmError.fromRequestAndResponse(request, response);\n            }\n        }\n        else {\n            throw new Error(\"Expected either 'url' or 'path'\");\n        }\n    }\n    /**\n     * Fetch a network resource as an authenticated user and parse the result as extended JSON.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns The response from the server, parsed as extended JSON.\n     */\n    async fetchJSON(request) {\n        const { body } = request;\n        const serializedBody = Fetcher.buildBody(body);\n        const contentTypeHeaders = Fetcher.buildJsonHeader(serializedBody);\n        const response = await this.fetch({\n            ...request,\n            body: serializedBody,\n            headers: {\n                Accept: \"application/json\",\n                ...contentTypeHeaders,\n                ...request.headers,\n            },\n        });\n        const contentType = response.headers.get(\"content-type\");\n        if (contentType === null || contentType === void 0 ? void 0 : contentType.startsWith(\"application/json\")) {\n            const responseBody = await response.json();\n            return deserialize(responseBody);\n        }\n        else if (contentType === null) {\n            return null;\n        }\n        else {\n            throw new Error(`Expected JSON response, got \"${contentType}\"`);\n        }\n    }\n    /**\n     * Fetch an \"event-stream\" resource as an authenticated user.\n     *\n     * @param request The request which should be sent to the server.\n     */\n    async fetchStream(request) {\n        const { body } = await this.fetch({\n            ...request,\n            headers: {\n                Accept: \"text/event-stream\",\n                ...request.headers,\n            },\n        });\n        return asyncIteratorFromResponseBody(body);\n    }\n    /**\n     * @returns The path of the app route.\n     */\n    get appRoute() {\n        return routes.api().app(this.appId);\n    }\n    /**\n     * @returns A promise of the location URL of the app.\n     */\n    get locationUrl() {\n        return this.locationUrlContext.locationUrl;\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * The key in a storage on which the device id is stored.\n */\nconst DEVICE_ID_STORAGE_KEY$1 = \"deviceId\";\nvar DeviceFields;\n(function (DeviceFields) {\n    DeviceFields[\"DEVICE_ID\"] = \"deviceId\";\n    DeviceFields[\"APP_ID\"] = \"appId\";\n    DeviceFields[\"APP_VERSION\"] = \"appVersion\";\n    DeviceFields[\"PLATFORM\"] = \"platform\";\n    DeviceFields[\"PLATFORM_VERSION\"] = \"platformVersion\";\n    DeviceFields[\"SDK_VERSION\"] = \"sdkVersion\";\n})(DeviceFields || (DeviceFields = {}));\n/**\n * Information describing the device, app and SDK.\n */\nclass DeviceInformation {\n    /**\n     * @param params Construct the device information from these parameters.\n     */\n    constructor({ appId, appVersion, deviceId, }) {\n        /**\n         * The version of the Realm Web SDK (constant provided by Rollup).\n         */\n        this.sdkVersion = \"1.2.1\";\n        const environment = getEnvironment();\n        this.platform = environment.platform;\n        this.platformVersion = environment.platformVersion;\n        this.appId = appId;\n        this.appVersion = appVersion;\n        this.deviceId = deviceId;\n    }\n    /**\n     * @returns An base64 URI encoded representation of the device information.\n     */\n    encode() {\n        const obj = removeKeysWithUndefinedValues(this);\n        return base64.Base64.encode(JSON.stringify(obj));\n    }\n    /**\n     * @returns The defaults\n     */\n    toJSON() {\n        return removeKeysWithUndefinedValues(this);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Default base url to prefix all requests if no baseUrl is specified in the configuration.\n */\nconst DEFAULT_BASE_URL = \"https://stitch.mongodb.com\";\n/**\n * MongoDB Realm App\n */\nclass App {\n    /**\n     * Construct a Realm App, either from the Realm App id visible from the MongoDB Realm UI or a configuration.\n     *\n     * @param idOrConfiguration The Realm App id or a configuration to use for this app.\n     */\n    constructor(idOrConfiguration) {\n        /**\n         * An array of active and logged-out users.\n         * Elements in the beginning of the array is considered more recent than the later elements.\n         */\n        this.users = [];\n        /**\n         * A promise resolving to the App's location url.\n         */\n        this._locationUrl = null;\n        // If the argument is a string, convert it to a simple configuration object.\n        const configuration = typeof idOrConfiguration === \"string\"\n            ? { id: idOrConfiguration }\n            : idOrConfiguration;\n        // Initialize properties from the configuration\n        if (typeof configuration === \"object\" &&\n            typeof configuration.id === \"string\") {\n            this.id = configuration.id;\n        }\n        else {\n            throw new Error(\"Missing a MongoDB Realm app-id\");\n        }\n        this.baseUrl = configuration.baseUrl || DEFAULT_BASE_URL;\n        this.localApp = configuration.app;\n        const { storage, transport = new DefaultNetworkTransport(), } = configuration;\n        // Construct a fetcher wrapping the network transport\n        this.fetcher = new Fetcher({\n            appId: this.id,\n            userContext: this,\n            locationUrlContext: this,\n            transport,\n        });\n        // Construct the auth providers\n        this.emailPasswordAuth = new EmailPasswordAuth(this.fetcher);\n        // Construct the storage\n        const baseStorage = storage || getEnvironment().defaultStorage;\n        this.storage = new AppStorage(baseStorage, this.id);\n        this.authenticator = new Authenticator(this.fetcher, baseStorage, () => this.deviceInformation);\n        // Hydrate the app state from storage\n        try {\n            this.hydrate();\n        }\n        catch (err) {\n            // The storage was corrupted\n            this.storage.clear();\n            // A failed hydration shouldn't throw and break the app experience\n            // Since this is \"just\" persisted state that unfortunately got corrupted or partially lost\n            console.warn(\"Realm app hydration failed:\", err.message);\n        }\n    }\n    /**\n     * Get or create a singleton Realm App from an id.\n     * Calling this function multiple times with the same id will return the same instance.\n     *\n     * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n     * @returns The Realm App instance.\n     */\n    static getApp(id) {\n        if (id in App.appCache) {\n            return App.appCache[id];\n        }\n        else {\n            const instance = new App(id);\n            App.appCache[id] = instance;\n            return instance;\n        }\n    }\n    /**\n     * Switch user.\n     *\n     * @param nextUser The user or id of the user to switch to.\n     */\n    switchUser(nextUser) {\n        const index = this.users.findIndex(u => u === nextUser);\n        if (index === -1) {\n            throw new Error(\"The user was never logged into this app\");\n        }\n        // Remove the user from the stack\n        const [user] = this.users.splice(index, 1);\n        // Insert the user in the beginning of the stack\n        this.users.unshift(user);\n    }\n    /**\n     * Log in a user.\n     *\n     * @param credentials Credentials to use when logging in.\n     * @param fetchProfile Should the users profile be fetched? (default: true)\n     */\n    async logIn(credentials, fetchProfile = true) {\n        const response = await this.authenticator.authenticate(credentials);\n        const user = this.createOrUpdateUser(response, credentials.providerType);\n        // Let's ensure this will be the current user, in case the user object was reused.\n        this.switchUser(user);\n        // If neeeded, fetch and set the profile on the user\n        if (fetchProfile) {\n            await user.refreshProfile();\n        }\n        // Persist the user id in the storage,\n        // merging to avoid overriding logins from other apps using the same underlying storage\n        this.storage.setUserIds(this.users.map(u => u.id), true);\n        // Read out and store the device id from the server\n        const deviceId = response.deviceId;\n        if (deviceId && deviceId !== \"000000000000000000000000\") {\n            this.storage.set(DEVICE_ID_STORAGE_KEY$1, deviceId);\n        }\n        // Return the user\n        return user;\n    }\n    /**\n     * @inheritdoc\n     */\n    async removeUser(user) {\n        // Remove the user from the list of users\n        const index = this.users.findIndex(u => u === user);\n        if (index === -1) {\n            throw new Error(\"The user was never logged into this app\");\n        }\n        this.users.splice(index, 1);\n        // Log out the user - this removes access and refresh tokens from storage\n        await user.logOut();\n        // Remove the users profile from storage\n        this.storage.remove(`user(${user.id}):profile`);\n        // Remove the user from the storage\n        this.storage.removeUserId(user.id);\n    }\n    /**\n     * The currently active user (or null if no active users exists).\n     *\n     * @returns the currently active user or null.\n     */\n    get currentUser() {\n        const activeUsers = this.users.filter(user => user.state === UserState.Active);\n        if (activeUsers.length === 0) {\n            return null;\n        }\n        else {\n            // Current user is the top of the stack\n            return activeUsers[0];\n        }\n    }\n    /**\n     * All active and logged-out users:\n     *  - First in the list are active users (ordered by most recent call to switchUser or login)\n     *  - Followed by logged out users (also ordered by most recent call to switchUser or login).\n     *\n     * @returns An array of users active or loggedout users (current user being the first).\n     */\n    get allUsers() {\n        // Returning a freezed copy of the list of users to prevent outside changes\n        return Object.fromEntries(this.users.map(user => [user.id, user]));\n    }\n    /**\n     * @returns A promise of the app URL, with the app location resolved.\n     */\n    get locationUrl() {\n        if (!this._locationUrl) {\n            const path = routes.api().app(this.id).location().path;\n            this._locationUrl = this.fetcher\n                .fetchJSON({\n                method: \"GET\",\n                url: this.baseUrl + path,\n                tokenType: \"none\",\n            })\n                .then(({ hostname }) => {\n                if (typeof hostname !== \"string\") {\n                    throw new Error(\"Expected response to contain a 'hostname'\");\n                }\n                else {\n                    return hostname;\n                }\n            })\n                .catch(err => {\n                // Reset the location to allow another request to fetch again.\n                this._locationUrl = null;\n                throw err;\n            });\n        }\n        return this._locationUrl;\n    }\n    /**\n     * @returns Information about the current device, sent to the server when authenticating.\n     */\n    get deviceInformation() {\n        const deviceIdStr = this.storage.getDeviceId();\n        const deviceId = typeof deviceIdStr === \"string\" &&\n            deviceIdStr !== \"000000000000000000000000\"\n            ? new ObjectId(deviceIdStr)\n            : undefined;\n        return new DeviceInformation({\n            appId: this.localApp ? this.localApp.name : undefined,\n            appVersion: this.localApp ? this.localApp.version : undefined,\n            deviceId,\n        });\n    }\n    /**\n     * Create (and store) a new user or update an existing user's access and refresh tokens.\n     * This helps de-duplicating users in the list of users known to the app.\n     *\n     * @param response A response from the Authenticator.\n     * @param providerType The type of the authentication provider used.\n     * @returns A new or an existing user.\n     */\n    createOrUpdateUser(response, providerType) {\n        const existingUser = this.users.find(u => u.id === response.userId);\n        if (existingUser) {\n            // Update the users access and refresh tokens\n            existingUser.accessToken = response.accessToken;\n            existingUser.refreshToken = response.refreshToken;\n            return existingUser;\n        }\n        else {\n            // Create and store a new user\n            if (!response.refreshToken) {\n                throw new Error(\"No refresh token in response from server\");\n            }\n            const user = new User({\n                app: this,\n                id: response.userId,\n                accessToken: response.accessToken,\n                refreshToken: response.refreshToken,\n                providerType,\n            });\n            this.users.unshift(user);\n            return user;\n        }\n    }\n    /**\n     * Restores the state of the app (active and logged-out users) from the storage\n     */\n    hydrate() {\n        const userIds = this.storage.getUserIds();\n        this.users = userIds.map(id => new User({ app: this, id }));\n    }\n}\n/**\n * A map of app instances returned from calling getApp.\n */\nApp.appCache = {};\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\nApp.Credentials = Credentials;\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Get or create a singleton Realm App from an id.\n * Calling this function multiple times with the same id will return the same instance.\n *\n * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n * @returns The Realm App instance.\n */\nfunction getApp(id) {\n    return App.getApp(id);\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * In-memory storage that will not be persisted.\n */\nclass LocalStorage {\n    /**\n     * Constructs a LocalStorage using the global window.\n     */\n    constructor() {\n        if (typeof window === \"object\") {\n            this.window = window;\n        }\n        else {\n            throw new Error(\"Cannot use LocalStorage without a global window object\");\n        }\n    }\n    /** @inheritdoc */\n    get(key) {\n        return this.window.localStorage.getItem(key);\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        return this.window.localStorage.setItem(key, value);\n    }\n    /** @inheritdoc */\n    remove(key) {\n        return this.window.localStorage.removeItem(key);\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix) {\n        const keys = [];\n        // Iterate all keys to find the once have a matching prefix.\n        for (let i = 0; i < this.window.localStorage.length; i++) {\n            const key = this.window.localStorage.key(i);\n            if (key && (!prefix || key.startsWith(prefix))) {\n                keys.push(key);\n            }\n        }\n        // Remove the items in a seperate loop to avoid updating while iterating.\n        for (const key of keys) {\n            this.window.localStorage.removeItem(key);\n        }\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        return this.window.addEventListener(\"storage\", listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        return this.window.removeEventListener(\"storage\", listener);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst browser = detect();\nconst environment$1 = {\n    defaultStorage: new LocalStorage().prefix(\"realm-web\"),\n    openWindow: url => window.open(url),\n    platform: (browser === null || browser === void 0 ? void 0 : browser.name) || \"web\",\n    platformVersion: (browser === null || browser === void 0 ? void 0 : browser.version) || \"0.0.0\",\n    TextDecoder,\n};\nsetEnvironment(environment$1);\n/**\n * Handle an OAuth 2.0 redirect.\n *\n * @param location An optional location to use (defaults to the windows current location).\n * @param storage Optional storage used to save any results from the location.\n */\nfunction handleAuthRedirect(location = window.location, storage = environment$1.defaultStorage) {\n    try {\n        const queryString = location.hash.substr(1); // Strip the initial # from the hash\n        OAuth2Helper.handleRedirect(queryString, storage);\n    }\n    catch (err) {\n        // Ensure calling this never throws: It should not interrupt a users flow.\n        console.warn(err);\n    }\n}\n\nexport { App, Credentials, DEFAULT_BASE_URL, LocalStorage, MongoDBRealmError, User, UserState, UserType$1 as UserType, getApp, getEnvironment, handleAuthRedirect, setEnvironment };\n"]},"metadata":{},"sourceType":"module"}