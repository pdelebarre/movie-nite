{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movie/SearchMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Results from \"../Search/Results\";\nimport classes from './SearchMovie.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchMovie(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const searchMovies = async e => {\n    // e.preventDefault();\n    console.log(\"submitting\");\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n      setResults(data.results);\n      setIsVisible(true);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(e => {\n    searchMovies(e);\n  }, [query]);\n\n  const onChangeHandler = event => {\n    setQuery(event.target.value);\n    searchMovies(event);\n  };\n\n  const onSelectHandler = movie => {\n    setIsVisible(st => !st);\n    return props.onSelect(movie);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes[\"search-form\"],\n      onSubmit: searchMovies,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: classes[\"search-label\"],\n        htmlFor: \"query\",\n        children: \"Movie Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes[\"search-input\"],\n        type: \"text\",\n        name: \"query\",\n        placeholder: \"i.e. Jurassic Park\",\n        onChange: onChangeHandler,\n        value: query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), query.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['search-button'],\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isVisible && /*#__PURE__*/_jsxDEV(Results, {\n      results: results,\n      onSelect: onSelectHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SearchMovie, \"p0hINQj5/YW0tDEg5h69vYgQruE=\");\n\n_c = SearchMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovie\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movie/SearchMovie.js"],"names":["React","useState","useEffect","Results","classes","SearchMovie","props","query","setQuery","results","setResults","isVisible","setIsVisible","searchMovies","e","console","log","url","res","fetch","data","json","err","error","onChangeHandler","event","target","value","onSelectHandler","movie","st","onSelect","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMY,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,UAAMC,GAAG,GAAI,2GAA0GV,KAAM,6BAA7H;;AAEA,QAAI;AACF,YAAMW,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACA,YAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAV,MAAAA,UAAU,CAACU,IAAI,CAACX,OAAN,CAAV;AACAG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAND,CAME,OAAOU,GAAP,EAAY;AACZP,MAAAA,OAAO,CAACQ,KAAR,CAAcD,GAAd;AACD;AACF,GAfD;;AAiBApB,EAAAA,SAAS,CAAEY,CAAD,IAAO;AACfD,IAAAA,YAAY,CAACC,CAAD,CAAZ;AACD,GAFQ,EAEP,CAACP,KAAD,CAFO,CAAT;;AAIA,QAAMiB,eAAe,GAAIC,KAAD,IAAW;AACnCjB,IAAAA,QAAQ,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACAd,IAAAA,YAAY,CAACY,KAAD,CAAZ;AACC,GAHD;;AAKA,QAAMG,eAAe,GAAIC,KAAD,IAAW;AACjCjB,IAAAA,YAAY,CAAEkB,EAAD,IAAQ,CAACA,EAAV,CAAZ;AACA,WAAOxB,KAAK,CAACyB,QAAN,CAAeF,KAAf,CAAP;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAEzB,OAAO,CAAC,aAAD,CAAxB;AAAyC,MAAA,QAAQ,EAAES,YAAnD;AAAA,8BACE;AAAO,QAAA,SAAS,EAAET,OAAO,CAAC,cAAD,CAAzB;AAA2C,QAAA,OAAO,EAAC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,SAAS,EAAEA,OAAO,CAAC,cAAD,CADpB;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,WAAW,EAAC,oBAJd;AAKE,QAAA,QAAQ,EAAEoB,eALZ;AAME,QAAA,KAAK,EAAEjB;AANT;AAAA;AAAA;AAAA;AAAA,cAJF,EAYGA,KAAK,CAACyB,MAAN,GAAe,CAAf,iBACC;AAAQ,QAAA,SAAS,EAAE5B,OAAO,CAAC,eAAD,CAA1B;AAA6C,QAAA,IAAI,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAmBGO,SAAS,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEF,OAAlB;AAA2B,MAAA,QAAQ,EAAEmB;AAArC;AAAA;AAAA;AAAA;AAAA,YAnBhB;AAAA,kBADF;AAuBD;;GA3DuBvB,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Results from \"../Search/Results\";\nimport classes from './SearchMovie.module.css';\n\nexport default function SearchMovie(props) {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const searchMovies = async (e) => {\n    // e.preventDefault();\n    console.log(\"submitting\");\n    \n    const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n    \n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n      setResults(data.results);\n      setIsVisible(true);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect((e) => {\n    searchMovies(e);\n  },[query])\n\n  const onChangeHandler = (event) => {\n  setQuery(event.target.value);\n  searchMovies(event);\n  };\n\n  const onSelectHandler = (movie) => {\n    setIsVisible((st) => !st);\n    return props.onSelect(movie);\n  };\n\n  return (\n    <>\n      <form className={classes[\"search-form\"]} onSubmit={searchMovies}>\n        <label className={classes[\"search-label\"]} htmlFor=\"query\">\n          Movie Name\n        </label>\n        <input\n          className={classes[\"search-input\"]}\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"i.e. Jurassic Park\"\n          onChange={onChangeHandler}\n          value={query}\n        />\n        {query.length > 1 && (\n          <button className={classes['search-button']} type=\"submit\">\n            Search\n          </button>\n        )}\n      </form>\n      {isVisible && <Results results={results} onSelect={onSelectHandler} />}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}