{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movie/SearchMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport AddMovieButton from \"../../UI/AddMovieButton\";\nimport classes from \"./SearchMovie.module.css\";\nimport { Pane, SearchInput } from \"evergreen-ui\";\nimport SelectSearch from 'react-select-search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortResults = results => {\n  results.sort((a, b) => b.vote_average - a.vote_average);\n  return results;\n};\n\nexport default function SearchMovie(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(async () => {\n      console.log(query);\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n\n        if (data.results && data.results.length > 0) {\n          setResults(data.results);\n          setIsVisible(true);\n        }\n      } catch (err) {\n        console.error(err); // setIsVisible(false);\n      }\n    }, [1000]);\n    return () => {\n      clearTimeout(delayDebounceFn); // setIsVisible(false);\n    };\n  }, [query]);\n  useEffect(() => {\n    setIsVisible(results.length > 0);\n  }, [results]);\n\n  const onChangeHandler = event => {\n    setQuery(event.target.value);\n  };\n\n  const onClickHandler = event => {\n    setResults([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SelectSearch, {\n    options: [],\n    getOptions: query => {\n      return new Promise((resolve, reject) => {\n        fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${query}`).then(response => response.json()).then(({\n          drinks\n        }) => {\n          resolve(drinks.map(({\n            idDrink,\n            strDrink\n          }) => ({\n            value: idDrink,\n            name: strDrink\n          })));\n        }).catch(reject);\n      });\n    },\n    search: true,\n    placeholder: \"Your favorite drink\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this) // <Pane className={classes.container}>\n  //   <SearchInput\n  //     className={classes[\"search-input\"]}\n  //     type=\"text\"\n  //     name=\"query\"\n  //     placeholder=\"i.e. Jurassic Park\"\n  //     onChange={onChangeHandler}\n  //     value={query}\n  //     onClick={onClickHandler}\n  //   />\n  //   {isVisible && results && results.length > 0 && (\n  //     <div className={classes.dropdown}>\n  //       <ul onClick={props.onClick}>\n  //         {sortResults(results).map((result) => (\n  //           <li key={result.id}>\n  //             <AddMovieButton movie={result} />\n  //           </li>\n  //         ))}\n  //       </ul>\n  //     </div>\n  //   )}\n  // </Pane>\n  ;\n}\n\n_s(SearchMovie, \"abtK4ZDnukaNIGK0gWoYFxcBE0k=\");\n\n_c = SearchMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovie\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movie/SearchMovie.js"],"names":["React","useState","useEffect","AddMovieButton","classes","Pane","SearchInput","SelectSearch","sortResults","results","sort","a","b","vote_average","SearchMovie","props","query","setQuery","setResults","isVisible","setIsVisible","delayDebounceFn","setTimeout","console","log","url","res","fetch","data","json","length","err","error","clearTimeout","onChangeHandler","event","target","value","onClickHandler","Promise","resolve","reject","then","response","drinks","map","idDrink","strDrink","name","catch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AddMovieButton from \"../../UI/AddMovieButton\";\nimport classes from \"./SearchMovie.module.css\";\n\nimport { Pane, SearchInput } from \"evergreen-ui\";\n\nimport SelectSearch from 'react-select-search';\n\nconst sortResults = (results) => {\n  results.sort((a, b) => b.vote_average - a.vote_average);\n  return results;\n};\n\nexport default function SearchMovie(props) {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(async () => {\n      console.log(query);\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n        if (data.results && data.results.length > 0) {\n          setResults(data.results);\n          setIsVisible(true);\n        }\n      } catch (err) {\n        console.error(err);\n        // setIsVisible(false);\n      }\n    }, [1000]);\n\n    return () => {\n      clearTimeout(delayDebounceFn);\n      // setIsVisible(false);\n    };\n  }, [query]);\n\n  useEffect(() => {\n\n    setIsVisible(results.length >0);\n  }, [results]);\n\n  const onChangeHandler = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const onClickHandler = (event) => {\n    setResults([]);\n  };\n\n  return (\n\n    <SelectSearch\n           options={[]}\n            getOptions={(query) => {\n                return new Promise((resolve, reject) => {\n                    fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${query}`)\n                        .then(response => response.json())\n                        .then(({ drinks }) => {\n                            resolve(drinks.map(({ idDrink, strDrink }) => ({ value: idDrink, name: strDrink })))\n                        })\n                        .catch(reject);\n                });\n            }}\n            search\n            placeholder=\"Your favorite drink\"\n        />\n    // <Pane className={classes.container}>\n    //   <SearchInput\n    //     className={classes[\"search-input\"]}\n    //     type=\"text\"\n    //     name=\"query\"\n    //     placeholder=\"i.e. Jurassic Park\"\n    //     onChange={onChangeHandler}\n    //     value={query}\n    //     onClick={onClickHandler}\n    //   />\n\n    //   {isVisible && results && results.length > 0 && (\n    //     <div className={classes.dropdown}>\n    //       <ul onClick={props.onClick}>\n    //         {sortResults(results).map((result) => (\n    //           <li key={result.id}>\n    //             <AddMovieButton movie={result} />\n    //           </li>\n    //         ))}\n    //       </ul>\n    //     </div>\n    //   )}\n    // </Pane>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}