{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movie/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport classes from \"./Dropdown.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = props => {\n  _s();\n\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(async () => {\n      console.log(\"in dropdown, query = \", props.query);\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${props.query}&page=1&include_adult=false`;\n\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n\n        if (data.results && data.results.length > 0) {\n          setResults(data.results);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }, [1000]);\n    return () => {\n      clearTimeout(delayDebounceFn);\n    };\n  }, [props.query]);\n\n  const onAddHandler = movie => {\n    props.onAddHandler(movie);\n  };\n\n  const onDetailsHandler = movie => {\n    console.log('movie :>> ', movie);\n  };\n\n  const listMovies = results.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.tile,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.tile__media,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.tile__img,\n        src: `https://image.tmdb.org/t/p/original${movie.poster_path}`,\n        alt: \"movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.tile__details,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tile__title,\n        children: [movie.id, \" - \", movie.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tile__more,\n        onClick: () => onDetailsHandler(movie),\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tile__add,\n        onClick: () => onAddHandler(movie),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, movie.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.row,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.row__inner,\n      children: listMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dropdown, \"0Oir8sO9qj6087fqVYj2OrfQH1E=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movie/Dropdown.js"],"names":["React","useEffect","useState","classes","Dropdown","props","results","setResults","delayDebounceFn","setTimeout","console","log","query","url","res","fetch","data","json","length","err","error","clearTimeout","onAddHandler","movie","onDetailsHandler","listMovies","map","tile","tile__media","tile__img","poster_path","tile__details","tile__title","id","title","tile__more","tile__add","row","row__inner"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\n\nimport classes from \"./Dropdown.module.css\";\n\nconst Dropdown = (props) => {\n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(async () => {\n      console.log(\"in dropdown, query = \", props.query);\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${props.query}&page=1&include_adult=false`;\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n        if (data.results && data.results.length > 0) {\n          setResults(data.results);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }, [1000]);\n\n    return () => {\n      clearTimeout(delayDebounceFn);\n    };\n  }, [props.query]);\n\n  const onAddHandler = (movie) => {\n    props.onAddHandler(movie);\n  };\n\n\n  const onDetailsHandler = (movie) => {\n    console.log('movie :>> ', movie);\n  }\n\n  const listMovies = results.map((movie) => (\n\n    <div className={classes.tile} key={movie.id}>\n      <div className={classes.tile__media}>\n        <img\n          className={classes.tile__img}\n          src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n          alt=\"movie\"\n        ></img>\n      </div>\n      {/* TODO: add link to preview (Modal?) */}\n      <div className={classes.tile__details}>\n          <div className={classes.tile__title}>\n          {movie.id} - {movie.title}\n          </div>\n          <div className={classes.tile__more} onClick={()=>onDetailsHandler(movie)}>...</div>\n          <div className={classes.tile__add} onClick={()=>onAddHandler(movie)}>+</div>\n      \n        </div>\n    </div>\n  ));\n  return (\n    <div className={classes.row}>\n      <div className={classes.row__inner}>{listMovies}</div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}