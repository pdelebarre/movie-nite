{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movie/SearchMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DropdownMovie from \"../../UI/DropdownMovie\";\nimport classes from \"./SearchMovie.module.css\";\nimport { Pane, SearchInput } from \"evergreen-ui\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortResults = results => {\n  results.sort((a, b) => b.vote_average - a.vote_average);\n  return results;\n};\n\nexport default function SearchMovie(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [newMovieId, setNewMovieId] = useState(0);\n  const [results, setResults] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(async () => {\n      console.log(query);\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n\n        if (data.results && data.results.length > 0) {\n          setResults(data.results);\n          setIsVisible(true);\n        }\n      } catch (err) {\n        console.error(err); // setIsVisible(false);\n      }\n    }, [1000]);\n    return () => {\n      clearTimeout(delayDebounceFn); // setIsVisible(false);\n    };\n  }, [query]);\n\n  const onSubmitHandler = () => {\n    console.log('aading Movie ', newMovieId);\n  };\n\n  const onChangeHandler = event => {\n    setQuery(event.target.value);\n  };\n\n  const onDropdownHandler = event => {\n    console.log('you have selected ', event.target.value); //setResults([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Pane, {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      children: /*#__PURE__*/_jsxDEV(SearchInput, {\n        className: classes[\"search-input\"],\n        type: \"text\",\n        name: \"query\",\n        placeholder: \"i.e. Jurassic Park\",\n        onChange: onChangeHandler,\n        value: query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      onDropdownHandler: onDropdownHandler,\n      query: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchMovie, \"CvFMUjeDjaEcVmqEL3BpaLnOm8U=\");\n\n_c = SearchMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovie\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movie/SearchMovie.js"],"names":["React","useState","useEffect","DropdownMovie","classes","Pane","SearchInput","sortResults","results","sort","a","b","vote_average","SearchMovie","props","query","setQuery","newMovieId","setNewMovieId","setResults","isVisible","setIsVisible","delayDebounceFn","setTimeout","console","log","url","res","fetch","data","json","length","err","error","clearTimeout","onSubmitHandler","onChangeHandler","event","target","value","onDropdownHandler","container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DropdownMovie from \"../../UI/DropdownMovie\";\nimport classes from \"./SearchMovie.module.css\";\n\nimport { Pane, SearchInput } from \"evergreen-ui\";\n\nconst sortResults = (results) => {\n  results.sort((a, b) => b.vote_average - a.vote_average);\n  return results;\n};\n\nexport default function SearchMovie(props) {\n  const [query, setQuery] = useState(\"\");\n  const [newMovieId, setNewMovieId] = useState(0);\n  const [results, setResults] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(async () => {\n      console.log(query);\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n        if (data.results && data.results.length > 0) {\n          setResults(data.results);\n          setIsVisible(true);\n        }\n      } catch (err) {\n        console.error(err);\n        // setIsVisible(false);\n      }\n    }, [1000]);\n\n    return () => {\n      clearTimeout(delayDebounceFn);\n      // setIsVisible(false);\n    };\n  }, [query]);\n\n  const onSubmitHandler = () => {\n    console.log('aading Movie ', newMovieId);\n  }\n\n  const onChangeHandler = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const onDropdownHandler = (event) => {\n    console.log('you have selected ', event.target.value);\n    //setResults([]);\n  };\n\n  return (\n\n    \n    <Pane className={classes.container}>\n    \n      <form onSubmit={onSubmitHandler}>\n        <SearchInput\n          className={classes[\"search-input\"]}\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"i.e. Jurassic Park\"\n          onChange={onChangeHandler}\n          value={query}\n        />\n        </form>\n\n        <Dropdown onDropdownHandler = {onDropdownHandler} query={query}/>\n\n\n    </Pane>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}