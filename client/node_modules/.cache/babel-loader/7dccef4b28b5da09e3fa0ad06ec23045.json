{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { memo, useState, useEffect, useCallback } from 'react';\nimport cx from 'classnames';\nimport { css } from 'glamor';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { Button, IconButton } from '../../buttons';\nimport absolutePositions from '../../constants/src/AbsolutePosition';\nimport positions from '../../constants/src/Position';\nimport { CrossIcon } from '../../icons';\nimport { Pane, Card } from '../../layers';\nimport { Portal } from '../../portal';\nimport { Paragraph, Heading } from '../../typography';\nvar animationEasing = {\n  deceleration: 'cubic-bezier(0.0, 0.0, 0.2, 1)',\n  acceleration: 'cubic-bezier(0.4, 0.0, 1, 1)',\n  spring: 'cubic-bezier(0.175, 0.885, 0.320, 1.175)'\n};\nvar ANIMATION_DURATION = 240;\nvar openAnimation = css.keyframes('openAnimation', {\n  from: {\n    transform: 'translateY(100%)'\n  },\n  to: {\n    transform: 'translateY(0)'\n  }\n});\nvar closeAnimation = css.keyframes('closeAnimation', {\n  from: {\n    transform: 'scale(1)',\n    opacity: 1\n  },\n  to: {\n    transform: 'scale(0.9)',\n    opacity: 0\n  }\n});\nvar animationStyles = {\n  '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n    animation: \"\".concat(openAnimation, \" \").concat(ANIMATION_DURATION, \"ms \").concat(animationEasing.spring, \" both\")\n  },\n  '&[data-state=\"exiting\"]': {\n    animation: \"\".concat(closeAnimation, \" 120ms \").concat(animationEasing.acceleration, \" both\")\n  }\n};\n\nvar closeHandler = function closeHandler(close) {\n  return close();\n};\n\nvar noop = function noop() {};\n\nvar emptyProps = {};\nvar CornerDialog = /*#__PURE__*/memo(function CornerDialog(props) {\n  var title = props.title,\n      _props$width = props.width,\n      width = _props$width === void 0 ? 448 : _props$width,\n      children = props.children,\n      _props$intent = props.intent,\n      intent = _props$intent === void 0 ? 'none' : _props$intent,\n      isShown = props.isShown,\n      _props$hasFooter = props.hasFooter,\n      hasFooter = _props$hasFooter === void 0 ? true : _props$hasFooter,\n      _props$hasCancel = props.hasCancel,\n      hasCancel = _props$hasCancel === void 0 ? true : _props$hasCancel,\n      _props$hasClose = props.hasClose,\n      hasClose = _props$hasClose === void 0 ? true : _props$hasClose,\n      _props$cancelLabel = props.cancelLabel,\n      cancelLabel = _props$cancelLabel === void 0 ? 'Close' : _props$cancelLabel,\n      _props$confirmLabel = props.confirmLabel,\n      confirmLabel = _props$confirmLabel === void 0 ? 'Learn More' : _props$confirmLabel,\n      onOpenComplete = props.onOpenComplete,\n      _props$onCloseComplet = props.onCloseComplete,\n      onCloseComplete = _props$onCloseComplet === void 0 ? noop : _props$onCloseComplet,\n      _props$onCancel = props.onCancel,\n      onCancel = _props$onCancel === void 0 ? closeHandler : _props$onCancel,\n      _props$onConfirm = props.onConfirm,\n      onConfirm = _props$onConfirm === void 0 ? closeHandler : _props$onConfirm,\n      _props$containerProps = props.containerProps,\n      containerProps = _props$containerProps === void 0 ? emptyProps : _props$containerProps,\n      _props$position = props.position,\n      position = _props$position === void 0 ? positions.BOTTOM_RIGHT : _props$position;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      exiting = _useState2[0],\n      setExiting = _useState2[1];\n\n  var _useState3 = useState(!props.isShown),\n      _useState4 = _slicedToArray(_useState3, 2),\n      exited = _useState4[0],\n      setExited = _useState4[1];\n\n  useEffect(function () {\n    if (isShown) {\n      setExited(false);\n    }\n  }, [isShown]);\n  var handleExited = useCallback(function () {\n    setExiting(false);\n    setExited(true);\n    onCloseComplete();\n  }, [onCloseComplete]);\n  var handleClose = useCallback(function () {\n    return setExiting(true);\n  });\n  var handleCancel = useCallback(function () {\n    onCancel(handleClose);\n  }, [onCancel]);\n  var handleConfirm = useCallback(function () {\n    onConfirm(handleClose);\n  }, [onConfirm]);\n  var renderChildren = useCallback(function () {\n    if (typeof children === 'function') {\n      return children({\n        close: handleClose\n      });\n    }\n\n    if (typeof children === 'string') {\n      return /*#__PURE__*/React.createElement(Paragraph, {\n        size: 400,\n        color: \"muted\"\n      }, children);\n    }\n\n    return children;\n  }, [children]);\n\n  if (exited) {\n    return null;\n  }\n\n  var containerClassName = containerProps.className,\n      remainingContainerProps = _objectWithoutProperties(containerProps, [\"className\"]);\n\n  return /*#__PURE__*/React.createElement(Portal, null, /*#__PURE__*/React.createElement(Transition, {\n    appear: true,\n    unmountOnExit: true,\n    timeout: ANIMATION_DURATION,\n    \"in\": isShown && !exiting,\n    onExited: handleExited,\n    onEntered: onOpenComplete\n  }, function (state) {\n    return /*#__PURE__*/React.createElement(Card, _extends({\n      role: \"dialog\",\n      backgroundColor: \"white\",\n      elevation: 4,\n      width: width,\n      className: cx(css(animationStyles).toString(), containerClassName),\n      \"data-state\": state,\n      padding: 32,\n      position: \"fixed\"\n    }, absolutePositions[Object.keys(absolutePositions).includes(position) ? position : positions.BOTTOM_RIGHT], remainingContainerProps), /*#__PURE__*/React.createElement(Pane, {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginBottom: 12\n    }, /*#__PURE__*/React.createElement(Heading, {\n      is: \"h4\",\n      size: 600,\n      flex: \"1\"\n    }, title), hasClose && /*#__PURE__*/React.createElement(IconButton, {\n      icon: CrossIcon,\n      appearance: \"minimal\",\n      onClick: handleClose\n    })), /*#__PURE__*/React.createElement(Pane, {\n      overflowY: \"auto\",\n      \"data-state\": state\n    }, renderChildren()), hasFooter && /*#__PURE__*/React.createElement(Pane, {\n      marginTop: 24,\n      flexShrink: 0,\n      display: \"flex\",\n      flexDirection: \"row-reverse\"\n    }, /*#__PURE__*/React.createElement(Button, {\n      appearance: \"primary\",\n      intent: intent,\n      marginLeft: 8,\n      onClick: handleConfirm\n    }, confirmLabel), hasCancel && /*#__PURE__*/React.createElement(Button, {\n      onClick: handleCancel\n    }, cancelLabel)));\n  }));\n});\nCornerDialog.propTypes = {\n  /**\n   * Children can be a string, node or a function accepting `({ close })`.\n   * When passing a string, <Paragraph size={400} color=\"muted\" /> is used to wrap the string.\n   */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n  /**\n   * The intent of the CornerDialog. Used for the button.\n   */\n  intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger']),\n\n  /**\n   * When true, the dialog is shown.\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * Title of the Dialog. Titles should use Title Case.\n   */\n  title: PropTypes.node,\n\n  /**\n   * Function that will be called when the exit transition is complete.\n   */\n  onCloseComplete: PropTypes.func,\n\n  /**\n   * Function that will be called when the enter transition is complete.\n   */\n  onOpenComplete: PropTypes.func,\n\n  /**\n   * When true, the footer with the cancel and confirm button is shown.\n   */\n  hasFooter: PropTypes.bool,\n\n  /**\n   * Function that will be called when the confirm button is clicked.\n   * This does not close the Dialog. A close function will be passed\n   * as a paramater you can use to close the dialog.\n   *\n   * `onConfirm={(close) => close()}`\n   */\n  onConfirm: PropTypes.func,\n\n  /**\n   * Label of the confirm button.\n   */\n  confirmLabel: PropTypes.string,\n\n  /**\n   * When true, the cancel button is shown.\n   */\n  hasCancel: PropTypes.bool,\n\n  /**\n   * When true, the close button is shown.\n   */\n  hasClose: PropTypes.bool,\n\n  /**\n   * Function that will be called when the cancel button is clicked.\n   * This closes the Dialog by default.\n   *\n   * `onCancel={(close) => close()}`\n   */\n  onCancel: PropTypes.func,\n\n  /**\n   * Label of the cancel button.\n   */\n  cancelLabel: PropTypes.string,\n\n  /**\n   * Width of the Dialog.\n   */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Props that are passed to the dialog container.\n   */\n  containerProps: PropTypes.object,\n\n  /**\n   * Props that will set position of corner dialog\n   */\n  position: PropTypes.oneOf([positions.TOP_LEFT, positions.TOP_RIGHT, positions.BOTTOM_LEFT, positions.BOTTOM_RIGHT])\n};\nexport default CornerDialog;","map":{"version":3,"sources":["../../../src/corner-dialog/src/CornerDialog.js"],"names":["animationEasing","deceleration","acceleration","spring","ANIMATION_DURATION","openAnimation","from","transform","to","closeAnimation","opacity","animationStyles","animation","closeHandler","close","noop","emptyProps","CornerDialog","memo","title","width","children","intent","isShown","hasFooter","hasCancel","hasClose","cancelLabel","confirmLabel","onOpenComplete","onCloseComplete","onCancel","onConfirm","containerProps","position","positions","props","exiting","setExiting","useState","exited","setExited","useEffect","handleExited","useCallback","handleClose","handleCancel","handleConfirm","renderChildren","containerClassName","remainingContainerProps","cx","css","absolutePositions","Object","state","PropTypes"],"mappings":"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","sourcesContent":["import React, { memo, useState, useEffect, useCallback } from 'react'\nimport cx from 'classnames'\nimport { css } from 'glamor'\nimport PropTypes from 'prop-types'\nimport { Transition } from 'react-transition-group'\nimport { Button, IconButton } from '../../buttons'\nimport absolutePositions from '../../constants/src/AbsolutePosition'\nimport positions from '../../constants/src/Position'\nimport { CrossIcon } from '../../icons'\nimport { Pane, Card } from '../../layers'\nimport { Portal } from '../../portal'\nimport { Paragraph, Heading } from '../../typography'\n\nconst animationEasing = {\n  deceleration: 'cubic-bezier(0.0, 0.0, 0.2, 1)',\n  acceleration: 'cubic-bezier(0.4, 0.0, 1, 1)',\n  spring: 'cubic-bezier(0.175, 0.885, 0.320, 1.175)'\n}\n\nconst ANIMATION_DURATION = 240\n\nconst openAnimation = css.keyframes('openAnimation', {\n  from: {\n    transform: 'translateY(100%)'\n  },\n  to: {\n    transform: 'translateY(0)'\n  }\n})\n\nconst closeAnimation = css.keyframes('closeAnimation', {\n  from: {\n    transform: 'scale(1)',\n    opacity: 1\n  },\n  to: {\n    transform: 'scale(0.9)',\n    opacity: 0\n  }\n})\n\nconst animationStyles = {\n  '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n    animation: `${openAnimation} ${ANIMATION_DURATION}ms ${animationEasing.spring} both`\n  },\n  '&[data-state=\"exiting\"]': {\n    animation: `${closeAnimation} 120ms ${animationEasing.acceleration} both`\n  }\n}\n\nconst closeHandler = close => close()\nconst noop = () => {}\nconst emptyProps = {}\n\nconst CornerDialog = memo(function CornerDialog(props) {\n  const {\n    title,\n    width = 448,\n    children,\n    intent = 'none',\n    isShown,\n    hasFooter = true,\n    hasCancel = true,\n    hasClose = true,\n    cancelLabel = 'Close',\n    confirmLabel = 'Learn More',\n    onOpenComplete,\n    onCloseComplete = noop,\n    onCancel = closeHandler,\n    onConfirm = closeHandler,\n    containerProps = emptyProps,\n    position = positions.BOTTOM_RIGHT\n  } = props\n\n  const [exiting, setExiting] = useState(false)\n  const [exited, setExited] = useState(!props.isShown)\n\n  useEffect(() => {\n    if (isShown) {\n      setExited(false)\n    }\n  }, [isShown])\n\n  const handleExited = useCallback(() => {\n    setExiting(false)\n    setExited(true)\n\n    onCloseComplete()\n  }, [onCloseComplete])\n\n  const handleClose = useCallback(() => setExiting(true))\n\n  const handleCancel = useCallback(() => {\n    onCancel(handleClose)\n  }, [onCancel])\n\n  const handleConfirm = useCallback(() => {\n    onConfirm(handleClose)\n  }, [onConfirm])\n\n  const renderChildren = useCallback(() => {\n    if (typeof children === 'function') {\n      return children({ close: handleClose })\n    }\n\n    if (typeof children === 'string') {\n      return (\n        <Paragraph size={400} color=\"muted\">\n          {children}\n        </Paragraph>\n      )\n    }\n\n    return children\n  }, [children])\n\n  if (exited) {\n    return null\n  }\n\n  const { className: containerClassName, ...remainingContainerProps } = containerProps\n\n  return (\n    <Portal>\n      <Transition\n        appear\n        unmountOnExit\n        timeout={ANIMATION_DURATION}\n        in={isShown && !exiting}\n        onExited={handleExited}\n        onEntered={onOpenComplete}\n      >\n        {state => (\n          <Card\n            role=\"dialog\"\n            backgroundColor=\"white\"\n            elevation={4}\n            width={width}\n            className={cx(css(animationStyles).toString(), containerClassName)}\n            data-state={state}\n            padding={32}\n            position=\"fixed\"\n            {...absolutePositions[\n              Object.keys(absolutePositions).includes(position) ? position : positions.BOTTOM_RIGHT\n            ]}\n            {...remainingContainerProps}\n          >\n            <Pane display=\"flex\" alignItems=\"center\" marginBottom={12}>\n              <Heading is=\"h4\" size={600} flex=\"1\">\n                {title}\n              </Heading>\n              {hasClose && <IconButton icon={CrossIcon} appearance=\"minimal\" onClick={handleClose} />}\n            </Pane>\n\n            <Pane overflowY=\"auto\" data-state={state}>\n              {renderChildren()}\n            </Pane>\n\n            {hasFooter && (\n              <Pane marginTop={24} flexShrink={0} display=\"flex\" flexDirection=\"row-reverse\">\n                <Button appearance=\"primary\" intent={intent} marginLeft={8} onClick={handleConfirm}>\n                  {confirmLabel}\n                </Button>\n                {hasCancel && <Button onClick={handleCancel}>{cancelLabel}</Button>}\n              </Pane>\n            )}\n          </Card>\n        )}\n      </Transition>\n    </Portal>\n  )\n})\n\nCornerDialog.propTypes = {\n  /**\n   * Children can be a string, node or a function accepting `({ close })`.\n   * When passing a string, <Paragraph size={400} color=\"muted\" /> is used to wrap the string.\n   */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n  /**\n   * The intent of the CornerDialog. Used for the button.\n   */\n  intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger']),\n\n  /**\n   * When true, the dialog is shown.\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * Title of the Dialog. Titles should use Title Case.\n   */\n  title: PropTypes.node,\n\n  /**\n   * Function that will be called when the exit transition is complete.\n   */\n  onCloseComplete: PropTypes.func,\n\n  /**\n   * Function that will be called when the enter transition is complete.\n   */\n  onOpenComplete: PropTypes.func,\n\n  /**\n   * When true, the footer with the cancel and confirm button is shown.\n   */\n  hasFooter: PropTypes.bool,\n\n  /**\n   * Function that will be called when the confirm button is clicked.\n   * This does not close the Dialog. A close function will be passed\n   * as a paramater you can use to close the dialog.\n   *\n   * `onConfirm={(close) => close()}`\n   */\n  onConfirm: PropTypes.func,\n\n  /**\n   * Label of the confirm button.\n   */\n  confirmLabel: PropTypes.string,\n\n  /**\n   * When true, the cancel button is shown.\n   */\n  hasCancel: PropTypes.bool,\n\n  /**\n   * When true, the close button is shown.\n   */\n  hasClose: PropTypes.bool,\n\n  /**\n   * Function that will be called when the cancel button is clicked.\n   * This closes the Dialog by default.\n   *\n   * `onCancel={(close) => close()}`\n   */\n  onCancel: PropTypes.func,\n\n  /**\n   * Label of the cancel button.\n   */\n  cancelLabel: PropTypes.string,\n\n  /**\n   * Width of the Dialog.\n   */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Props that are passed to the dialog container.\n   */\n  containerProps: PropTypes.object,\n\n  /**\n   * Props that will set position of corner dialog\n   */\n  position: PropTypes.oneOf([positions.TOP_LEFT, positions.TOP_RIGHT, positions.BOTTOM_LEFT, positions.BOTTOM_RIGHT])\n}\n\nexport default CornerDialog\n"]},"metadata":{},"sourceType":"module"}