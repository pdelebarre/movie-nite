{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport Movies from \"./components/Movies\";\nimport MovieForm from \"./components/Movie/MovieForm\";\nimport DUMMY_MOVIES from \"./resources/dummy_movies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movies, setMovies] = useState(DUMMY_MOVIES);\n\n  const addMovie = title => {\n    let newMovie = {\n      id: uuidv4(),\n      title\n    }; // [...] = spread operator (copy items)\n    // Used because we can't (and shouldn't) change state values directly\n\n    setMovies([...movies, newMovie]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MovieForm, {\n      addMovie: addMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Movies, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vhELJP0ZDTfJkV5nkXB5wT3sku4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/App.js"],"names":["useState","v4","uuidv4","Movies","MovieForm","DUMMY_MOVIES","App","movies","setMovies","addMovie","title","newMovie","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAACK,YAAD,CAApC;;AACA,QAAMI,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAIC,QAAQ,GAAG;AACbC,MAAAA,EAAE,EAAEV,MAAM,EADG;AAEbQ,MAAAA;AAFa,KAAf,CAD0B,CAM1B;AACA;;AACAF,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYI,QAAZ,CAAD,CAAT;AACD,GATD;;AAWA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEF;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAnBQD,G;;KAAAA,G;AAqBT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport Movies from \"./components/Movies\";\nimport MovieForm from \"./components/Movie/MovieForm\";\nimport DUMMY_MOVIES from \"./resources/dummy_movies\";\n\nfunction App() {\n  const [movies, setMovies] = useState(DUMMY_MOVIES);\n  const addMovie = (title) => {\n    let newMovie = {\n      id: uuidv4(),\n      title,\n    };\n\n    // [...] = spread operator (copy items)\n    // Used because we can't (and shouldn't) change state values directly\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div>\n      <MovieForm addMovie={addMovie}/>\n      <Movies movies={movies} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}