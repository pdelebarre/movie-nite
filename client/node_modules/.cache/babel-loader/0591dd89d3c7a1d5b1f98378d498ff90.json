{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movie/SearchMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Results from \"../Search/Results\";\nimport classes from \"./SearchMovie.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchMovie(props) {\n  _s();\n\n  const [query, setQuery] = useState();\n  const [results, setResults] = useState([]); // const [isVisible, setIsVisible] = useState(false);\n  // const searchMovies = async (e) => {\n  //   e.preventDefault();\n  //   console.log(\"submitting\");\n  //   const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n  //   try {\n  //     const res = await fetch(url);\n  //     const data = await res.json();\n  //     console.log(data);\n  //     setResults(data.results);\n  //     //setIsVisible(true);\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // };\n\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(async () => {\n      //e.preventDefault();\n      console.log(query);\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data); // setIsLoaded(true);\n\n        setResults(data.results); //setIsVisible(true);\n      } catch (err) {\n        console.error(err);\n      }\n    }, [1000]);\n    return () => clearTimeout(delayDebounceFn);\n  }, query);\n\n  const onChangeHandler = event => {\n    setQuery(event.target.value);\n  };\n\n  const onSelectHandler = movie => {\n    //setIsVisible(query.length() > 1);\n    return props.onSelect(movie);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes[\"search-form\"],\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: classes[\"search-label\"],\n        htmlFor: \"query\",\n        children: \"Movie Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes[\"search-input\"],\n        type: \"text\",\n        name: \"query\",\n        placeholder: \"i.e. Jurassic Park\",\n        onChange: onChangeHandler,\n        value: query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), results != null && /*#__PURE__*/_jsxDEV(Results, {\n      results: results,\n      onSelect: onSelectHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SearchMovie, \"cSgEZ2Bqyhw2p8DjLtbLHAGZF2A=\");\n\n_c = SearchMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovie\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/myProjects/movie-nite/src/components/Movie/SearchMovie.js"],"names":["React","useState","useEffect","Results","classes","SearchMovie","props","query","setQuery","results","setResults","delayDebounceFn","setTimeout","console","log","url","res","fetch","data","json","err","error","clearTimeout","onChangeHandler","event","target","value","onSelectHandler","movie","onSelect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC,CAFyC,CAG1C;AAEC;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,eAAe,GAAGC,UAAU,CAAC,YAAY;AAC7C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,YAAMQ,GAAG,GAAI,2GAA0GR,KAAM,6BAA7H;;AACA,UAAG;AAGD,cAAMS,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACA,cAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ,EALC,CAMD;;AACAR,QAAAA,UAAU,CAACQ,IAAI,CAACT,OAAN,CAAV,CAPC,CAQD;AACD,OATD,CAUE,OAAOW,GAAP,EAAY;AACVP,QAAAA,OAAO,CAACQ,KAAR,CAAcD,GAAd;AACD;AACJ,KAjBiC,EAiB/B,CAAC,IAAD,CAjB+B,CAAlC;AAmBA,WAAO,MAAME,YAAY,CAACX,eAAD,CAAzB;AACD,GArBQ,EAqBNJ,KArBM,CAAT;;AAuBA,QAAMgB,eAAe,GAAIC,KAAD,IAAW;AACjChB,IAAAA,QAAQ,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC;AACA,WAAOtB,KAAK,CAACuB,QAAN,CAAeD,KAAf,CAAP;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAExB,OAAO,CAAC,aAAD,CAAxB;AAAA,8BACE;AAAO,QAAA,SAAS,EAAEA,OAAO,CAAC,cAAD,CAAzB;AAA2C,QAAA,OAAO,EAAC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,SAAS,EAAEA,OAAO,CAAC,cAAD,CADpB;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,WAAW,EAAC,oBAJd;AAKE,QAAA,QAAQ,EAAEmB,eALZ;AAME,QAAA,KAAK,EAAEhB;AANT;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAmBGE,OAAO,IAAI,IAAX,iBAAmB,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA,OAAlB;AAA2B,MAAA,QAAQ,EAAEkB;AAArC;AAAA;AAAA;AAAA;AAAA,YAnBtB;AAAA,kBADF;AAuBD;;GA7EuBtB,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Results from \"../Search/Results\";\nimport classes from \"./SearchMovie.module.css\";\n\nexport default function SearchMovie(props) {\n  const [query, setQuery] = useState();\n  const [results, setResults] = useState([]);\n // const [isVisible, setIsVisible] = useState(false);\n\n  // const searchMovies = async (e) => {\n  //   e.preventDefault();\n  //   console.log(\"submitting\");\n\n  //   const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n  //   try {\n  //     const res = await fetch(url);\n  //     const data = await res.json();\n  //     console.log(data);\n  //     setResults(data.results);\n  //     //setIsVisible(true);\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // };\n\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(async () => {\n      //e.preventDefault();\n      console.log(query);\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n      try{\n\n        \n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n        // setIsLoaded(true);\n        setResults(data.results);\n        //setIsVisible(true);\n      }\n        catch (err) {\n          console.error(err);\n        }\n    }, [1000]);\n\n    return () => clearTimeout(delayDebounceFn);\n  }, query);\n\n  const onChangeHandler = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const onSelectHandler = (movie) => {\n    //setIsVisible(query.length() > 1);\n    return props.onSelect(movie);\n  };\n\n  return (\n    <>\n      <form className={classes[\"search-form\"]}>\n        <label className={classes[\"search-label\"]} htmlFor=\"query\">\n          Movie Name\n        </label>\n        <input\n          className={classes[\"search-input\"]}\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"i.e. Jurassic Park\"\n          onChange={onChangeHandler}\n          value={query}\n        />\n        {/* {query.length > 0 && (\n          <button className={classes[\"search-button\"]} type=\"submit\">\n            Search\n          </button>\n        )} */}\n      </form>\n      {results != null && <Results results={results} onSelect={onSelectHandler} />}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}